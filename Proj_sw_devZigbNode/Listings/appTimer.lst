C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE APPTIMER
OBJECT MODULE PLACED IN .\Output\appTimer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Usr\appTimer.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Usr;.\Usr_lib;.\st
                    -d_Lib;.\dataTrans;.\Actuator;.\Sensor;.\hwDriver) DEBUG PRINT(.\Listings\appTimer.lst) OBJECT(.\Output\appTimer.obj)

line level    source

   1          #include "appTimer.h"
   2          
   3          #include "STC15Fxxxx.H"
   4          
   5          #include "stdio.h"
   6          #include "string.h"
   7          
   8          #include "USART.h"
   9          
  10          #include "Relay.h"
  11          #include "timerAct.h"
  12          #include "touchPad.h"
  13          #include "dataTrans.h"
  14          #include "Tips.h"
  15          #include "usrKin.h"
  16          
  17          #include "devlopeDebug.h"
  18          
  19          //***************Êý¾Ý´«Êä±äÁ¿ÒýÓÃÇø***************************/
  20          extern bit                              rxTout_count_EN;        
  21          extern u8                               rxTout_count;   //´®¿Ú½ÓÊÕ³¬Ê±¼ÆÊý
  22          extern bit                              uartRX_toutFLG;
  23          extern u8                               datsRcv_length;
  24          extern uartTout_datsRcv xdata datsRcv_ZIGB;
  25          
  26          extern u16 xdata                zigbNwkAction_counter; //zigbÍøÂçÖØÁ¬×¨ÓÃ¶¯×÷Ê±¼ä¼ÆÊý
  27          
  28          extern u16 xdata                dtReqEx_counter; //À©Õ¹ÐÍÊý¾Ý·¢ËÍ¼ä¸ô¼ÆÊ±Öµ
  29          
  30          extern bit                              heartBeatCycle_FLG;     //ÐÄÌøÖÜÆÚ´¥·¢±êÖ¾
  31          extern u8 xdata                 heartBeatCount; //ÐÄÌø¼ÆÊý
  32          extern u8 xdata                 heartBeatPeriod; //ÐÄÌøÖÜÆÚ
  33          extern u8 xdata                 heartBeatHang_timeCnt;
  34          
  35          extern u8 xdata                 colonyCtrlGet_queryCounter; 
  36          extern u8 xdata                 colonyCtrlGetHang_timeCnt;
  37          
  38          //***************°´¼üÊäÈë±äÁ¿ÒýÓÃÇø***************************/
  39          extern bit                              usrKeyCount_EN;
  40          extern u16                              usrKeyCount;
  41          
  42          extern u16 xdata                touchPadActCounter;
  43          extern u16 xdata                touchPadContinueCnt;
  44          
  45          //***************Tips±äÁ¿ÒýÓÃÇø***************************/
  46          extern u16 xdata                counter_tipsAct;
  47          
  48          /*-----------------------------------------------------------------------------------------------*/
  49          void appTimer0_Init(void){      //50us ÖÐ¶Ï@24.000M
  50   1      
  51   1              AUXR |= 0x80;           
  52   1              TMOD &= 0xF0;           
  53   1              TL0   = 0x50;           
  54   1              TH0   = 0xFB;   
C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 2   

  55   1              TF0   = 0;      
  56   1              ET0       = 1;  //¿ªÖÐ¶Ï
  57   1              PT0   = 1;      
  58   1              
  59   1              TR0   = 1;              
  60   1      }
  61          
  62          void appTimer4_Init(void){      //50us ÖÐ¶Ï@24.000M
  63   1              
  64   1              T4T3M   |= 0x20;                
  65   1              T4L     = 0x50;         
  66   1              T4H     = 0xFB;         
  67   1              T4T3M   |= 0x80;        
  68   1      
  69   1              IE2     |= 0x40;
  70   1      }
  71          
  72          void timer0_Rountine (void) interrupt TIMER0_VECTOR{
  73   1              
  74   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                      {
                              
                              u8 xdata freq_periodBeatHalf = freq_Param.periodBeat_cfm / 2;
              
                              freq_Param.periodBeat_counter ++; //µçÔ´ÆµÂÊµ¥ÖÜÆÚ½ÚÅÄÊý¸üÐÂ
                              
                              if(freq_Param.pwm_actEN){               
                              
                                      freq_Param.pwm_actCounter ++;
                                      
                                      if(freq_Param.pwm_actCounter <= status_Relay && freq_Param.pwm_actCounter < freq_periodBeatHalf){ //Ç°°
             -ëÖÜ
                                              
                                              PIN_PWM_OUT = 1;
                                              
                                      }else{
                                      
                                              freq_Param.pwm_actCounter = 0;
                                              freq_Param.pwm_actEN = 0;
                                              PIN_PWM_OUT = 0;
                                      }
                                      
              //                      if(freq_Param.pwm_actCounter <= freq_periodBeatHalf){
              //                      
              //                              if(freq_Param.pwm_actCounter < status_Relay){
              //                                      
              //                                      PIN_PWM_OUT = 1;
              //                                      
              //                              }else{
              //                              
              //                                      PIN_PWM_OUT = 0;
              //                              }
              //                              
              ////                            PIN_PWM_OUT = 0;
              //                      
              //                      }else
              //                      if(freq_Param.pwm_actCounter > freq_periodBeatHalf && freq_Param.pwm_actCounter <= freq_Param.periodB
             -eat_cfm){
              //                              
              ////                            if((freq_Param.pwm_actCounter - freq_periodBeatHalf) < status_Relay){
              ////                                    
C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 3   

              ////                                    PIN_PWM_OUT = 1;
              ////                                    
              ////                            }else{
              ////                            
              ////                                    PIN_PWM_OUT = 0;
              ////                            }
              //                              
              //                              PIN_PWM_OUT = 0;
              
              //                      }else{
              //                      
              //                              freq_Param.pwm_actCounter = 0;
              //                              freq_Param.pwm_actEN = 0;
              //                              PIN_PWM_OUT = 0;
              //                      }
                                      
                              }else{
                              
                                      PIN_PWM_OUT = 0;
                              }
                      }
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #else
 138   1      #endif
 139   1      }
 140          
 141          void timer4_Rountine (void) interrupt TIMER4_VECTOR{
 142   1              
 143   1              u16 code period_1second = 20000;
 144   1              static u16 counter_1second = 0; 
 145   1              
 146   1              u8 code period_1ms              = 20;
 147   1              static u8 counter_1ms   = 0; 
 148   1              
 149   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #else
 153   1              u16 code period_100ms   = 2000;
 154   1              static u16 counter_100ms = 0; 
 155   1              u8 code period10_100ms  = 10;
 156   1              static u8 counter10_100ms = 0; 
 157   1      #endif
 158   1              
 159   1              u8 code period_tipsColor = COLORGRAY_MAX * 3;
 160   1              static u8 counter_tipsColor = 0; 
 161   1              static color_Attr xdata cnt_relay1_Tips = {0};
 162   1              static color_Attr xdata cnt_relay2_Tips = {0};
 163   1              static color_Attr xdata cnt_relay3_Tips = {0};
 164   1              static color_Attr xdata cnt_zigbNwk_Tips = {0};
 165   1              
 166   1              static u8 xdata period_beep = 3;                //beep×¨ÓÃ
 167   1              static u8 xdata count_beep      = 0;
 168   1               
 169   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #else
 173   1              //****************100msÌØÊâ**********************************************/
 174   1              if(counter_100ms < period_100ms)counter_100ms ++;
 175   1              else{
 176   2                      
C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 4   

 177   2                      counter_100ms = 0;
 178   2                      counter10_100ms ++;
 179   2              
 180   2                      /*´°Á±Âß¼­ÒµÎñ£¬°´ÕÕ¹ìµÀÊ±¼ä¶¯×÷*/
 181   2                      if(SWITCH_TYPE == SWITCH_TYPE_CURTAIN){
 182   3                      
 183   3                              switch(curtainAct_Param.act){
 184   4                              
 185   4                                      case cTact_open:{
 186   5                                      
 187   5                                              if(curtainAct_Param.act_counter < curtainAct_Param.act_period){
 188   6                                              
 189   6                                                      if(counter10_100ms >= period10_100ms)curtainAct_Param.act_counter ++;
 190   6                                                      
 191   6                                              }else{
 192   6                                              
 193   6                                                      curtainAct_Param.act = cTact_stop;
 194   6                                              }
 195   5                                              
 196   5                                      }break;
 197   4                                              
 198   4                                      case cTact_close:{
 199   5                                      
 200   5                                              if(curtainAct_Param.act_counter > 0){
 201   6                                              
 202   6                                                      if(counter10_100ms >= period10_100ms)curtainAct_Param.act_counter --;
 203   6                                                      
 204   6                                              }else{
 205   6                                              
 206   6                                                      curtainAct_Param.act = cTact_stop;
 207   6                                              }
 208   5                                      
 209   5                                      }break;
 210   4                                              
 211   4                                      case cTact_stop:{
 212   5                                      
 213   5                                              if(status_Relay != 2){
 214   6                                              
 215   6                                                      swCommand_fromUsr.objRelay = 2;
 216   6                                                      swCommand_fromUsr.actMethod = relay_OnOff;
 217   6                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
 218   6                                              }
 219   5                                              
 220   5                                      }break;
 221   4                                              
 222   4                                      default:{}break;
 223   4                              }
 224   3                      }
 225   2                      
 226   2                      if(counter10_100ms >= period10_100ms)counter10_100ms = 0;
 227   2              }
 228   1      #endif
 229   1              
 230   1              //****************1ms×¨ÓÃ**********************************************/
 231   1              if(counter_1ms < period_1ms)counter_1ms ++;
 232   1              else{
 233   2              
 234   2                      counter_1ms = 0;
 235   2                      
 236   2                      /*zigb×¨ÓÃ¶¯×÷Ê±¼ä¼ÆÊý*/
 237   2                      if(zigbNwkAction_counter)zigbNwkAction_counter --;
 238   2                      
C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 5   

 239   2                      /*ÓÃ»§°´¼ü¶¯×÷×¨ÓÃÊ±¼ä¼ÆÊý*/
 240   2                      if(usrKeyCount_EN)usrKeyCount ++;
 241   2                      else usrKeyCount = 0;
 242   2                      
 243   2                      /*´¥Ãþ°´¼ü¶¯×÷×¨ÓÃÊ±¼ä¼ÆÊý*/
 244   2                      if(touchPadActCounter)touchPadActCounter --;
 245   2                      
 246   2                      /*´¥Ãþ°´¼üÁ¬°´×¨ÓÃÊ±¼ä¼ÆÊý*/
 247   2                      if(touchPadContinueCnt)touchPadContinueCnt --;
 248   2                      
 249   2                      /*Tips¶¯×÷×¨ÓÃÊ±¼ä¼ÆÊý*/
 250   2                      if(counter_tipsAct)counter_tipsAct --;
 251   2                      
 252   2                      /*À©Õ¹ÐÔ(³ÖÐøÐÔ)Êý¾Ý·¢ËÍ¶¯×÷¼ä¸ôÊ±¼ä¼ÆÊý*/
 253   2                      if(dtReqEx_counter)dtReqEx_counter --;
 254   2              }
 255   1              
 256   1              //****************1s×¨ÓÃ**********************************************/
 257   1              if(counter_1second < period_1second)counter_1second ++;
 258   1              else{
 259   2              
 260   2                      counter_1second = 0;
 261   2                      
 262   2      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
              //              /*µçÔ´ÆµÂÊµ¥ÖÜÆÚ½ÚÅÄÊýÍ³¼Æ*/
              //              /*>>>usr_debug<<<*/
              //              //usr_debugÊý¾ÝÌî×°
              //              dev_debugInfoLog.debugInfoData.dimmerInfo.soureFreq = freq_Param.periodBeat_cfm;
              //              //usr_debug´òÓ¡ÀàÐÍÌî×°Ìî×°
              //              dev_debugInfoLog.debugInfoType = infoType_dimmerFreq;
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #else
 272   2      #endif
 273   2                      /*ÐÄÌø°ü¼ÆÊ±¼ÆÊýÒµÎñ*/
 274   2                      if(!heartBeatCycle_FLG){
 275   3                      
 276   3                              if(heartBeatCount < heartBeatPeriod)heartBeatCount ++;
 277   3                              else{
 278   4                              
 279   4                                      heartBeatCount = 0;
 280   4                                      heartBeatCycle_FLG = 1;
 281   4                              }
 282   3                      }
 283   2                      
 284   2                      /*ÑÓÊ±¼ÆÊ±ÒµÎñ£¬µ½µã¶¯×÷*/
 285   2                      if(ifDelay_sw_running_FLAG & (1 << 1)){
 286   3                      
 287   3                              if(delayCnt_onoff < ((u16)delayPeriod_onoff * 60))delayCnt_onoff ++;
 288   3                              else{
 289   4                              
 290   4                                      delayPeriod_onoff = delayCnt_onoff = 0; 
 291   4                                      
 292   4                                      ifDelay_sw_running_FLAG &= ~(1 << 1);   //Ò»´ÎÐÔ±êÖ¾Çå³ý
 293   4                                      
 294   4                                      swCommand_fromUsr.actMethod = relay_OnOff; //¿ª¹Ø¶¯×÷
 295   4                                      swCommand_fromUsr.objRelay = delayUp_act;
 296   4                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
 297   4                                      dev_agingCmd_sndInitative.agingCmd_delaySetOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ð§Õ¼Î»ÖÃÒ»
 298   4                                      
 299   4                                      /*>>>usr_debug<<<*/
 300   4                                      //usr_debugÊý¾ÝÌî×°
C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 6   

 301   4                                      dev_debugInfoLog.debugInfoData.delayActInfo.delayAct_Up = 1;
 302   4                                      //usr_debug´òÓ¡ÀàÐÍÌî×°Ìî×°
 303   4                                      dev_debugInfoLog.debugInfoType = infoType_delayUp;
 304   4                              }
 305   3                      }
 306   2                      
 307   2                      /*ÂÌÉ«Ä£Ê½¼ÆÊ±ÒµÎñ£¬Ñ­»·¹Ø±Õ*/
 308   2                      if((ifDelay_sw_running_FLAG & (1 << 0)) && status_Relay){
 309   3                      
 310   3                              if(delayCnt_closeLoop < ((u16)delayPeriod_closeLoop * 60))delayCnt_closeLoop ++;
 311   3                              else{
 312   4                                      
 313   4                                      delayCnt_closeLoop = 0;
 314   4                              
 315   4                                      swCommand_fromUsr.actMethod = relay_OnOff; //¿ª¹Ø¶¯×÷
 316   4                                      swCommand_fromUsr.objRelay = 0;
 317   4                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
 318   4                                      dev_agingCmd_sndInitative.agingCmd_greenModeSetOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ð§Õ¼Î»ÖÃÒ»
 319   4                              }
 320   3                      }
 321   2                      
 322   2                      /*³¡¾°ÖÜÆÚÑ¯²é¹ÒÆð¼ÆÊ±Öµ¸üÐÂ*///¹ÒÆð×÷ÓÃ<<
 323   2                      if(heartBeatHang_timeCnt)heartBeatHang_timeCnt --;
 324   2                      
 325   2                      /*ÐÄÌø¹ÒÆð¼ÆÊ±Öµ¸üÐÂ*///¹ÒÆð×÷ÓÃ<<
 326   2                      if(colonyCtrlGetHang_timeCnt)colonyCtrlGetHang_timeCnt --;
 327   2                      
 328   2                      /*ÏµÍ³Ê±¼ä±¾µØÎ¬³Ö¼ÆÊýÖµ¸üÐÂ*/
 329   2                      sysTimeKeep_counter ++;
 330   2                      
 331   2                      /*tips¿ÕÏÐÊÍ·Å¼ÆÊ±¼ÆÊýÒµÎñ*/
 332   2                      if(counter_ifTipsFree && countEN_ifTipsFree)counter_ifTipsFree --;
 333   2                      
 334   2                      /*ÏµÍ³Ê±¼äÖÜÆÚÐÂ¸üÐÂ¼ÆÊ±¼ÆÊýÒµÎñ*/
 335   2                      if(sysTimeReales_counter)sysTimeReales_counter --;
 336   2                      
 337   2                      /*zigbÍøÂç¿ª·Åµ¹¼ÆÊ±*/
 338   2                      if(tipsTimeCount_zigNwkOpen)tipsTimeCount_zigNwkOpen --;
 339   2                      
 340   2                      /*Éè±¸ÍøÂç¹ÒÆðÊ±¼äµ¹¼ÆÊ±*///¹ÒÆð×÷ÓÃ<<
 341   2                      if(devNwkHoldTime_Param.devHoldTime_counter)devNwkHoldTime_Param.devHoldTime_counter --;
 342   2                      
 343   2                      /*¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚÐÔÂÖÑ¯ÖÜÆÚ¼ÆÊ±*/
 344   2                      if(colonyCtrlGet_queryCounter)colonyCtrlGet_queryCounter --;
 345   2                      
 346   2                      /*´¥ÃþIC¸´Î»Ê±¼äµ¹¼ÆÊ±*/
 347   2                      if(touchPad_resetTimeCount)touchPad_resetTimeCount --;
 348   2                      
 349   2                      /*´¥ÃþIC¸´Î»Tipsµ¹¼ÆÊ±*/
 350   2                      if(tipsTimeCount_touchReset)tipsTimeCount_touchReset --;
 351   2                      
 352   2                      /*»Ö¸´Ô¤ÖÃ¶¯×÷µ¹¼ÆÊ±*/
 353   2                      if(factoryRecover_HoldTimeCount)factoryRecover_HoldTimeCount --;
 354   2                      
 355   2                      /*»Ö¸´³ö³§Tipsµ¹¼ÆÊ±*/
 356   2                      if(tipsTimeCount_factoryRecover)tipsTimeCount_factoryRecover --;
 357   2                      
 358   2                      /*Ð­µ÷Æ÷Ê§Áª/¶ªÊ§ È·ÈÏµ¹¼ÆÊ±*/
 359   2                      if(timeCounter_coordinatorLost_detecting)timeCounter_coordinatorLost_detecting --;
 360   2              }
 361   1      
 362   1              //***************´®¿Ú½ÓÊÕ³¬Ê±Ê±³¤¼ÆÊý*******************************//
C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 7   

 363   1              if(rxTout_count_EN){ //½ÓÊÕ³¬Ê±¼ÆÊ±Ê¹ÄÜÅÐ¶Ï
 364   2              
 365   2                      if(rxTout_count < TimeOutSet1)rxTout_count ++;
 366   2                      else{
 367   3                              
 368   3                              if(!uartRX_toutFLG && datsRcv_length >= 5){ //³¬Ê±Ê±¼äÅÐ¶Ï¼°×îÐ¡Ö¡³¤ÅÐ¶Ï
 369   4                              
 370   4                                      uartRX_toutFLG = 1;
 371   4                              
 372   4                                      memset(datsRcv_ZIGB.rcvDats, 0xff, sizeof(char) * COM_RX1_Lenth);
 373   4                                      memcpy(datsRcv_ZIGB.rcvDats, RX1_Buffer, COM_RX1_Lenth);
 374   4                                      datsRcv_ZIGB.rcvDatsLen = datsRcv_length;
 375   4                                      
 376   4                                      /*>>>usr_debug<<<*/
 377   4                                      if(datsRcv_length != (datsRcv_ZIGB.rcvDats[1] + 5)){  //±êµÄÖ¡³¤ÅÐ¶Ï£¬ÊÇ·ñ³¬³¤
 378   5                                      
 379   5                                              //usr_debugÊý¾ÝÌî×°
 380   5                                              dev_debugInfoLog.debugInfoData.frameInfo.frameIllegal_FLG = 1;
 381   5                                              dev_debugInfoLog.debugInfoData.frameInfo.frame_aLength = RX1_Buffer[1];
 382   5                                              dev_debugInfoLog.debugInfoData.frameInfo.frame_rLength = datsRcv_length;
 383   5                                              //usr_debug´òÓ¡ÀàÐÍÌî×°Ìî×°
 384   5                                              dev_debugInfoLog.debugInfoType = infoType_frameUart;
 385   5                                              
 386   5                                      }else{
 387   5                                      
 388   5      
 389   5                                      }
 390   4                              }
 391   3                              rxTout_count_EN = 0;
 392   3                      }
 393   2              }
 394   1              
 395   1              //*******************beep¼ÆÊ±¼ÆÊýÒµÎñ**************************/
 396   1              if(count_beep < period_beep)count_beep ++;
 397   1              else{
 398   2                      
 399   2                      static u16 xdata        tips_Period = 20 * 50 / 2;
 400   2                      static u16 xdata        tips_Count      = 0;
 401   2                      static u8 xdata         tips_Loop       = 2 * 4;
 402   2                      static bit                      beeps_en        = 1;
 403   2              
 404   2                      count_beep = 0;
 405   2      
 406   2                      switch(dev_statusBeeps){ //×´Ì¬»ú
 407   3                              
 408   3                              case beepsMode_standBy:{
 409   4                                      
 410   4                                      period_beep = devTips_beep.tips_Period;
 411   4                                      tips_Period = 20 * devTips_beep.tips_time / period_beep;
 412   4                                      tips_Loop       = 2 * devTips_beep.tips_loop;
 413   4                                      tips_Count      = 0;
 414   4                                      beeps_en        = 1;
 415   4                                      dev_statusBeeps = beepsWorking;
 416   4              
 417   4                              }break;
 418   3                              
 419   3                              case beepsWorking:{
 420   4                              
 421   4                                      if(tips_Loop){
 422   5                                      
 423   5                                              if(tips_Count < tips_Period){
 424   6                                              
C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 8   

 425   6                                                      tips_Count ++;
 426   6                                                      (beeps_en)?(PIN_BEEP = !PIN_BEEP):(PIN_BEEP = 1);
 427   6                                                      
 428   6                                              }else{
 429   6                                              
 430   6                                                      tips_Count = 0;
 431   6                                                      beeps_en = !beeps_en;
 432   6                                                      tips_Loop --;
 433   6                                              }
 434   5                                              
 435   5                                      }else{
 436   5                                      
 437   5                                              dev_statusBeeps = beepsComplete;
 438   5                                      }
 439   4                              
 440   4                              }break;
 441   3                              
 442   3                              case beepsComplete:{
 443   4                              
 444   4                                      tips_Count = 0;
 445   4                                      beeps_en = 1;
 446   4                                      PIN_BEEP = 1;
 447   4                                      dev_statusBeeps = beepsMode_null;
 448   4                                      
 449   4                              }break;
 450   3                      
 451   3                              default:{
 452   4                              
 453   4                                      PIN_BEEP = 1;
 454   4                                      
 455   4                              }break;
 456   3                      }
 457   2              }
 458   1              
 459   1              //***************tips_Led Ë¢ÐÂÒµÎñ*******************************//
 460   1              if(counter_tipsColor > period_tipsColor){       //»Ò¶ÈÖµÖµ¼ÓÔØ
 461   2              
 462   2                      counter_tipsColor = 0;
 463   2                      
 464   2                      cnt_relay1_Tips.colorGray_R = relay1_Tips.colorGray_R;
 465   2                      cnt_relay1_Tips.colorGray_G = relay1_Tips.colorGray_G;
 466   2                      cnt_relay1_Tips.colorGray_B = relay1_Tips.colorGray_B;
 467   2                      
 468   2                      cnt_relay2_Tips.colorGray_R = relay2_Tips.colorGray_R;
 469   2                      cnt_relay2_Tips.colorGray_G = relay2_Tips.colorGray_G;
 470   2                      cnt_relay2_Tips.colorGray_B = relay2_Tips.colorGray_B;
 471   2                      
 472   2                      cnt_relay3_Tips.colorGray_R = relay3_Tips.colorGray_R;
 473   2                      cnt_relay3_Tips.colorGray_G = relay3_Tips.colorGray_G;
 474   2                      cnt_relay3_Tips.colorGray_B = relay3_Tips.colorGray_B;
 475   2                      
 476   2                      cnt_zigbNwk_Tips.colorGray_R = zigbNwk_Tips.colorGray_R;
 477   2                      cnt_zigbNwk_Tips.colorGray_G = zigbNwk_Tips.colorGray_G;
 478   2                      cnt_zigbNwk_Tips.colorGray_B = zigbNwk_Tips.colorGray_B;
 479   2              }
 480   1              else{ //pwmÖ´ÐÐ
 481   2              
 482   2                      counter_tipsColor ++;
 483   2                      
 484   2                      if((counter_tipsColor > 0) && (counter_tipsColor <= (COLORGRAY_MAX * 1))){
 485   3                              
 486   3                               //Ö¸Ê¾¿ÉÓÃºË×¼
C51 COMPILER V9.54   APPTIMER                                                              12/07/2018 17:31:28 PAGE 9   

 487   3                              if(cnt_relay1_Tips.colorGray_R && (DEV_actReserve & 0x01)){cnt_relay1_Tips.colorGray_R --; PIN_TIPS_REL
             -AY1_R = 0;}
 488   3                              else PIN_TIPS_RELAY1_R = 1;
 489   3                              if(cnt_relay2_Tips.colorGray_R && (DEV_actReserve & 0x02)){cnt_relay2_Tips.colorGray_R --; PIN_TIPS_REL
             -AY2_R = 0;}
 490   3                              else PIN_TIPS_RELAY2_R = 1;
 491   3                              if(cnt_relay3_Tips.colorGray_R && (DEV_actReserve & 0x04)){cnt_relay3_Tips.colorGray_R --; PIN_TIPS_REL
             -AY3_R = 0;}
 492   3                              else PIN_TIPS_RELAY3_R = 1;
 493   3                              if(cnt_zigbNwk_Tips.colorGray_R){cnt_zigbNwk_Tips.colorGray_R --; PIN_TIPS_ZIGBNWK_R = 0;}
 494   3                              else PIN_TIPS_ZIGBNWK_R = 1;
 495   3                              
 496   3                      }else
 497   2                      if((counter_tipsColor > (COLORGRAY_MAX * 1)) && (counter_tipsColor <= (COLORGRAY_MAX * 2))){
 498   3                      
 499   3                               //Ö¸Ê¾¿ÉÓÃºË×¼
 500   3                              if(cnt_relay1_Tips.colorGray_G && (DEV_actReserve & 0x01)){cnt_relay1_Tips.colorGray_G --; PIN_TIPS_REL
             -AY1_G = 0;}
 501   3                              else PIN_TIPS_RELAY1_G = 1;
 502   3                              if(cnt_relay2_Tips.colorGray_G && (DEV_actReserve & 0x02)){cnt_relay2_Tips.colorGray_G --; PIN_TIPS_REL
             -AY2_G = 0;}
 503   3                              else PIN_TIPS_RELAY2_G = 1;
 504   3                              if(cnt_relay3_Tips.colorGray_G && (DEV_actReserve & 0x04)){cnt_relay3_Tips.colorGray_G --; PIN_TIPS_REL
             -AY3_G = 0;}
 505   3                              else PIN_TIPS_RELAY3_G = 1;
 506   3                              if(cnt_zigbNwk_Tips.colorGray_G){cnt_zigbNwk_Tips.colorGray_G --; PIN_TIPS_ZIGBNWK_G = 0;}
 507   3                              else PIN_TIPS_ZIGBNWK_G = 1;
 508   3                              
 509   3                      }else
 510   2                      if((counter_tipsColor > (COLORGRAY_MAX * 2)) && (counter_tipsColor <= (COLORGRAY_MAX * 3))){
 511   3                      
 512   3                               //Ö¸Ê¾¿ÉÓÃºË×¼
 513   3                              if(cnt_relay1_Tips.colorGray_B && (DEV_actReserve & 0x01)){cnt_relay1_Tips.colorGray_B --; PIN_TIPS_REL
             -AY1_B = 0;}
 514   3                              else PIN_TIPS_RELAY1_B = 1;
 515   3                              if(cnt_relay2_Tips.colorGray_B && (DEV_actReserve & 0x02)){cnt_relay2_Tips.colorGray_B --; PIN_TIPS_REL
             -AY2_B = 0;}
 516   3                              else PIN_TIPS_RELAY2_B = 1;
 517   3                              if(cnt_relay3_Tips.colorGray_B && (DEV_actReserve & 0x04)){cnt_relay3_Tips.colorGray_B --; PIN_TIPS_REL
             -AY3_B = 0;}
 518   3                              else PIN_TIPS_RELAY3_B = 1;
 519   3                              if(cnt_zigbNwk_Tips.colorGray_B){cnt_zigbNwk_Tips.colorGray_B --; PIN_TIPS_ZIGBNWK_B = 0;}
 520   3                              else PIN_TIPS_ZIGBNWK_B = 1;
 521   3                      }
 522   2              }
 523   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1665    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =     19    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
