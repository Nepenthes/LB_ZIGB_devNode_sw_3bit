C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DATATRANS
OBJECT MODULE PLACED IN .\Output\dataTrans.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE dataTrans\dataTrans.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Usr;.\Usr_l
                    -ib;.\std_Lib;.\dataTrans;.\Actuator;.\Sensor;.\hwDriver) DEBUG PRINT(.\Listings\dataTrans.lst) OBJECT(.\Output\dataTrans
                    -.obj)

line level    source

   1          #include "dataTrans.h"
   2          
   3          #include "string.h"
   4          #include "stdio.h"
   5          
   6          #include "eeprom.h"
   7          #include "USART.h"
   8          #include "delay.h"
   9          #include "Relay.h"
  10          
  11          #include "timerAct.h"
  12          #include "pars_Method.h"
  13          #include "dataManage.h"
  14          #include "Tips.h"
  15          
  16          /**********************±¾µØÎÄ¼ş±äÁ¿¶¨ÒåÇø************************/
  17          datsAttr_datsTrans xdata datsSend_request = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ
  18          datsAttr_dtCtrlEach xdata datsSend_requestEx[3] = {0}; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ£¨³ÖĞø·¢ËÍ£¬ÎŞĞèÔ¶¶ËÏìÓ
             -¦£©
  19          u16 xdata dtReqEx_counter = 0; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇóÊı¾İ·¢ËÍ¼ä¸ô¼ÆÊ±Öµ µ¥Î»£ºms
  20          datsAttr_datsTrans xdata datsRcv_respond = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇóµÈ´ıÏìÓ¦»º´æ»º´æ
  21          remoteDataReq_method xdata devRemoteDataReqMethod = {0}; //Ô¶¶ËÊı¾İÇëÇó·½Ê½
  22          
  23          stt_devOpreatDataPonit xdata dev_currentDataPoint = {0}; //ÖÜÆÚÑ¯·ÃÊı¾İµã
  24          stt_agingDataSet_bitHold xdata  dev_agingCmd_rcvPassive = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --±»¶¯½ÓÊÕ
  25          stt_agingDataSet_bitHold xdata  dev_agingCmd_sndInitative = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --Ö÷¶¯ÉÏ´«
  26          u8 dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR; //Êı¾İ´«ÊäÎª¶¨Ê±Ñ¯·ÃÄ£Ê½Ê±£¬Ğ¯´øÑ¯·ÃÖ¸ÁîÖµ£¬
             -ĞèÒªÖ÷¶¯ÉÏ´«Ê±Ôò¸ü¸Ä´ËÖµ
  27          
  28          //zigbeeÔËĞĞ×´Ì¬ÇĞ»»±êÖ¾
  29          stt_statusChange xdata devStatus_switch = {0, status_NULL};
  30          //Êı¾İÇëÇóÍê³ÉºóÊÇ·ñĞèÒªÖØÆôÍøÂç
  31          bit reConnectAfterDatsReq_IF = 0; //ÓÃÓÚ»¥¿ØÍ¨Ñ¶´Ø¼´¿Ì×¢²áÌØÊâÇé¿öÏÂÊ¹ÓÃ
  32          
  33          bit coordinatorOnline_IF = 0; //Ğ­µ÷Æ÷ÔÚÏß±êÖ¾
  34          
  35          //zigbÍøÂç¶¯×÷×¨ÓÃÊ±¼ä¼ÆÊı
  36          u16 xdata zigbNwkAction_counter = 0;
  37          
  38          //zigbÉè±¸ÍøÂç¹ÒÆğÊôĞÔ²ÎÊı
  39          attr_devNwkHold xdata devNwkHoldTime_Param = {0};
  40          
  41          //ĞÄÌø
  42          bit heartBeatCycle_FLG                  = 0; //ĞÄÌøÖÜÆÚ´¥·¢
  43          u8      xdata heartBeatCount            = 0; //ĞÄÌøÖÜÆÚ¼ÆÊı
  44          u8      xdata heartBeatPeriod           = PERIOD_HEARTBEAT_ASR; //ĞÄÌø¼ÆÊıÖÜÆÚ
  45          u8      xdata heartBeatHang_timeCnt = 0; //ĞÄÌø¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ·¢ËÍĞÄÌø£¬·ñÔòĞÄÌø¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  46          
  47          //¼¯ÈºÊÜ¿ØÖÜÆÚÂÖÑ¯-<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>
  48          u8      xdata colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÑ¯²é¼ÆÊ±¼ÆÊıÖµ
  49          u8      xdata colonyCtrlGet_statusLocalEaCtrl[clusterNum_usr] = {0}; //¼¯Èº¿ØÖÆ-±¾µØ»¥¿Ø×´Ì¬Î»¼ÇÂ¼
  50          u8      xdata localDataRecord_eaCtrl[clusterNum_usr] = {0}; //±¾µØ¾²Ì¬Êı¾İ¼ÇÂ¼£º»¥¿ØÊµ¼ÊÖµ
  51          u8      xdata colonyCtrlGet_statusLocalScene = 0; //¼¯Èº¿ØÖÆ-±¾µØ³¡¾°×´Ì¬Î»¼ÇÂ¼
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 2   

  52          u8      xdata colonyCtrlGetHang_timeCnt = 0; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÂÖÑ¯¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ½øĞĞÖÜÆÚÑ¯²é£¬·ñ
             -ÔòÑ¯²é¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  53          
  54          //´®¿Ú½ÓÊÕ³¬Ê±±êÖ¾
  55          bit uartRX_toutFLG      = 0;
  56          //´®¿Ú½ÓÊÕ³¬Ê±¼ÆÊı
  57          bit rxTout_count_EN = 0;
  58          u8  rxTout_count        = 0;
  59          //´®¿ÚÊı¾İ»º´æ
  60          u8      datsRcv_length  = 0;
  61          uartTout_datsRcv xdata datsRcv_ZIGB = {{0}, 0};
  62          
  63          //zigbeeÍ¨ĞÅÏß³Ìµ±Ç°ÔËĞĞ×´Ì¬±êÖ¾
  64          threadRunning_Status devRunning_Status = status_NULL;
  65          
  66          //zigbeeĞ­µ÷Æ÷¶ªÊ§¼ì²â¼ÆÊ±±äÁ¿
  67          u8 xdata timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM;
  68          
  69          u8      xdata factoryRecover_HoldTimeCount = 0; //»Ö¸´³ö³§µÈ´ıÊ±¼ä
  70          bit idata factoryRecover_standBy_FLG = 0; //»Ö¸´³ö³§Ô¤ÖÃ±êÖ¾
  71          
  72          void zigbUart_pinInit(void){
  73   1      
  74   1              //TXÍÆÍìÊä³ö
  75   1              P3M1 &= 0xFD;   
  76   1              P3M0 |= 0x02;   
  77   1              
  78   1              //RX¸ß×èÊäÈë
  79   1              P3M1 |= 0x01;
  80   1              P3M0 &= 0xFE;
  81   1              
  82   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                      
                      P2M1 &= ~0x40;
                      P2M0 |= 0x40;
              #else
  87   1              
  88   1              P2M1 &= ~0x08;
  89   1              P2M0 |= 0x08;
  90   1      #endif
  91   1      }
  92                  
  93          /*--------------------------------------------------------------*/
  94          void uartObjZigb_Init(void){
  95   1      
  96   1              EA = 0;
  97   1      
  98   1              PS = 0;
  99   1              SCON = (SCON & 0x3f) | UART_8bit_BRTx;
 100   1      
 101   1      {
 102   2              u32 j = (MAIN_Fosc / 4) / ZIGB_BAUND;   //°´1T¼ÆËã
 103   2                      j = 65536UL - j;
 104   2              
 105   2              TH2 = (u8)(j>>8);
 106   2              TL2 = (u8)j;
 107   2      }
 108   1              AUXR &= ~(1<<4);        //Timer stop
 109   1              AUXR |= 0x01;           //S1 BRT Use Timer2;
 110   1              AUXR &= ~(1<<3);        //Timer2 set As Timer
 111   1              AUXR |=  (1<<2);        //Timer2 set as 1T mode
 112   1      
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 3   

 113   1              IE2  &= ~(1<<2);        //½ûÖ¹ÖĞ¶Ï
 114   1              AUXR &= ~(1<<3);        //¶¨Ê±
 115   1              AUXR |=  (1<<4);        //Timer run enable
 116   1      
 117   1              ES        = 1;
 118   1              REN   = 1;
 119   1              P_SW1 = (P_SW1 & 0x3f) | (UART1_SW_P30_P31 & 0xc0);
 120   1              
 121   1              memset(TX1_Buffer, 0, sizeof(char) * COM_TX1_Lenth);
 122   1      
 123   1              EA = 1;
 124   1      
 125   1              PrintString1("i'm UART1 for wifi data translate !!!\n");
 126   1              PrintString1_logOut("i'm UART1 for datsLog !!!\n");
 127   1      }
 128          
 129          ///*----------------------------
 130          //·¢ËÍ´®¿ÚÊı¾İ
 131          //----------------------------*/
 132          //void uartObjWIFI_Send_Byte(u8 dat)    //´®¿Ú1
 133          //{
 134          //      TX1_write2buff(dat);
 135          //}
 136          
 137          //void uartObjWIFI_Send_String(char *s,unsigned char ucLength){  //´®¿Ú1
 138          //      
 139          //      uart1_datsSend(s, ucLength);
 140          //}
 141          
 142          //void rxBuff_WIFI_Clr(void){
 143          
 144          //      memset(rxBuff_WIFI, 0xff, sizeof(char) * COM_RX1_Lenth);
 145          //      COM1.RX_Cnt = 0;
 146          //}
 147          
 148          /********************* UART1(WIIF)ÖĞ¶Ïº¯Êı_×Ô¶¨ÒåÖØ¹¹************************/
 149          void UART1_Rountine (void) interrupt UART1_VECTOR
 150          {
 151   1              
 152   1              if(RI)
 153   1              {
 154   2                      RI = 0;
 155   2                      if(COM1.B_RX_OK == 0)
 156   2                      {
 157   3                              
 158   3      //                      if(COM1.RX_Cnt >= COM_RX1_Lenth)        COM1.RX_Cnt = 0;
 159   3      //                      RX1_Buffer[COM1.RX_Cnt++] = SBUF;
 160   3      //                      COM1.RX_TimeOut = TimeOutSet1;
 161   3                              
 162   3                              if(!rxTout_count_EN){
 163   4                              
 164   4                                      rxTout_count_EN = 1;
 165   4                                      rxTout_count    = 0;
 166   4                                      datsRcv_length  = 0;
 167   4                                      
 168   4                                      memset(RX1_Buffer, 0xff, sizeof(char) * COM_RX1_Lenth);
 169   4                              }
 170   3                                              
 171   3                              RX1_Buffer[datsRcv_length ++] = SBUF;
 172   3                              rxTout_count = 0;
 173   3                      }
 174   2              }
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 4   

 175   1      
 176   1              if(TI)
 177   1              {
 178   2                      TI = 0;
 179   2                      if(COM1.TX_read != COM1.TX_write)
 180   2                      {
 181   3                              SBUF = TX1_Buffer[COM1.TX_read];
 182   3                              if(++COM1.TX_read >= COM_TX1_Lenth)     COM1.TX_read = 0;
 183   3                      }
 184   2                      else COM1.B_TX_busy = 0;
 185   2              }
 186   1      }
 187          
 188          /* ×Ô¶¨ÒåĞ£Ñé*///×Ô¼Ò²úÆ·Ğ­Òé²ã
 189          static 
 190          unsigned char frame_Check(unsigned char frame_temp[], u8 check_num){
 191   1        
 192   1              unsigned char loop              = 0;
 193   1              unsigned char val_Check = 0;
 194   1              
 195   1              for(loop = 0; loop < check_num; loop ++){
 196   2              
 197   2                      val_Check += frame_temp[loop];
 198   2              }
 199   1              
 200   1              val_Check  = ~val_Check;
 201   1              val_Check ^= 0xa7;
 202   1              
 203   1              return val_Check;
 204   1      }
 205          
 206          /*´ËÊı¾İ·â×°±ØĞëÔÚÊı¾İ°ü·¢ËÍÇ°×îºóµ÷ÓÃ£¬×Ô¶¨Òå¶ÔÏó½øĞĞÊı¾İ·â×°*///±ÜÃâĞ£Ñé±»ÌáÇ°¶ø³ö´í
 207          static 
 208          u8 dtasTX_loadBasic_CUST(bit ifRemoteDats,
 209                                                       u8 dats_Tx[],
 210                                                       u8 datsLen_TX,
 211                                                       u8 frame_Type,
 212                                                       u8 frame_CMD,
 213                                                       bit ifSpecial_CMD){
 214   1                                                         
 215   1              dats_Tx[2]      = frame_Type;
 216   1              dats_Tx[3]      = frame_CMD;
 217   1              
 218   1              if(!ifSpecial_CMD)dats_Tx[10] = SWITCH_TYPE;    //¿ª¹ØÀàĞÍÌî³ä
 219   1              
 220   1              memcpy(&dats_Tx[5], &MAC_ID[1], 5);     //MACÌî³ä
 221   1                                                        
 222   1              dats_Tx[4]      = frame_Check(&dats_Tx[5], 28);
 223   1                                                                 
 224   1              if(ifRemoteDats){
 225   2                      
 226   2                      u8 xdata dats_Temp[64] = {0};
 227   2              
 228   2                      dats_Tx[0] = ZIGB_FRAMEHEAD_CTRLREMOTE;
 229   2                      dats_Tx[1]      = datsLen_TX + 12;
 230   2                      
 231   2                      memcpy(dats_Temp, &dats_Tx[1], datsLen_TX - 13);
 232   2                      memset(&dats_Tx[1], 0, datsLen_TX - 1);
 233   2                      memcpy(&dats_Tx[13], dats_Temp, datsLen_TX - 13);
 234   2                      memcpy(&dats_Tx[1], MAC_ID_DST, 6);
 235   2                      memcpy(&dats_Tx[8], &MAC_ID[1], 5);
 236   2                      
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 5   

 237   2                      return 45;
 238   2                      
 239   2              }else{
 240   2              
 241   2                      dats_Tx[0]      = ZIGB_FRAMEHEAD_CTRLLOCAL;
 242   2                      dats_Tx[1]      = datsLen_TX;
 243   2                      
 244   2                      return 33;
 245   2              }
 246   1      }
 247          
 248          /*Êı¾İÒì»òĞ£Ñé*///ZNPĞ­Òé²ã
 249          static 
 250          u8 XORNUM_CHECK(u8 buf[], u8 length){
 251   1      
 252   1              u8 loop = 0;
 253   1              u8 valXOR = buf[0];
 254   1              
 255   1              for(loop = 1;loop < length;loop ++)valXOR ^= buf[loop];
 256   1              
 257   1              return valXOR;
 258   1      }
 259          
 260          /*zigbeeÊı¾İÖ¡¼ÓÔØ*/
 261          static 
 262          u8 ZigB_TXFrameLoad(u8 frame[],u8 cmd[],u8 cmdLen,u8 dats[],u8 datsLen){                
 263   1      
 264   1              const u8 frameHead = ZIGB_FRAME_HEAD;   //ZNP,SOFÖ¡Í·
 265   1              u8 xor_check = datsLen;                                 //Òì»òĞ£Ñé£¬Ö¡Î²
 266   1              u8 loop = 0;
 267   1              u8 ptr = 0;
 268   1              
 269   1              frame[ptr ++] = frameHead;
 270   1              frame[ptr ++] = datsLen;
 271   1              
 272   1              memcpy(&frame[ptr],cmd,cmdLen);
 273   1              ptr += cmdLen;
 274   1              for(loop = 0;loop < cmdLen;loop ++)xor_check ^= cmd[loop];
 275   1      
 276   1              memcpy(&frame[ptr],dats,datsLen);
 277   1              ptr += datsLen;
 278   1              for(loop = 0;loop < datsLen;loop ++)xor_check ^= dats[loop];    
 279   1              
 280   1              frame[ptr ++] = xor_check;
 281   1              
 282   1              return ptr;
 283   1      }
 284          
 285          /*ÖÜÆÚĞÔÖ÷¶¯·¢ÂëÍ¨ĞÅ¹ÒÆğ£¬Í¨ĞÅÇåÕÏ*/
 286          void periodDataTrans_momentHang(u8 hangTime){ //¹ÒÆğÊ±¼ä µ¥Î»£ºs
 287   1      
 288   1              heartBeatCount = 0;
 289   1              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
 290   1              
 291   1              heartBeatHang_timeCnt = colonyCtrlGetHang_timeCnt = hangTime;
 292   1      }
 293          
 294          /*zigbeeµ¥Ö¸ÁîÊı¾İÇëÇó£¬·µ»ØÓ¦´ğÊı¾İ³¤¶È*/
 295          static 
 296          u8 zigb_datsRequest( u8 frameREQ[],             //ÇëÇóÖ¡
 297                                                   u8 frameREQ_Len,       //ÇëÇóÖ¡³¤
 298                                                   u8 resp_cmd[2],        //ËùĞèÓ¦´ğÖ¸Áî
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 6   

 299                                                   u8 resp_dats[],        //Ó¦´ğÊı¾İ»º´æ
 300                                                   u8 loopReapt,u16 timeWait){    //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 301   1                                                
 302   1              u16 Local_Delay = timeWait;             
 303   1              u8      loop = 0;
 304   1                                                       
 305   1              for(loop = 0;loop < loopReapt;loop ++){
 306   2              
 307   2                      uartRX_toutFLG = 0;
 308   2                      zigbNwkAction_counter = timeWait;       
 309   2                  uartZigB_datsSend(frameREQ, frameREQ_Len);
 310   2                      
 311   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 312   3      
 313   3                              if(uartRX_toutFLG){
 314   4                              
 315   4                                      uartRX_toutFLG = 0;
 316   4                                      
 317   4                                      if(!memcmp(&(datsRcv_ZIGB.rcvDats[2]), resp_cmd, 2)){
 318   5                                      
 319   5                                              memcpy(resp_dats, datsRcv_ZIGB.rcvDats, datsRcv_ZIGB.rcvDatsLen);
 320   5                                              return datsRcv_ZIGB.rcvDatsLen;
 321   5                                              
 322   5                                      }
 323   4                              }
 324   3                      }
 325   2              }       
 326   1      
 327   1              return 0;
 328   1      }
 329          
 330          /*zigbeeµ¥Ö¸ÁîÏÂ·¢¼°ÏìÓ¦ÑéÖ¤*///×èÈû
 331          bit zigb_VALIDA_INPUT(u8 REQ_CMD[2],            //Ö¸Áî
 332                                                    u8 REQ_DATS[],                //Êı¾İ
 333                                                    u8 REQdatsLen,                //Êı¾İ³¤¶È
 334                                                    u8 ANSR_frame[],              //ÏìÓ¦Ö¡
 335                                                    u8 ANSRdatsLen,               //ÏìÓ¦Ö¡³¤¶È
 336                                                    u8 times,u16 timeDelay){      //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 337   1                                                 
 338   1      #define dataLen_validaInput     96
 339   1              u8 xdata dataTXBUF[dataLen_validaInput] = {0};
 340   1              u8      loop = 0;
 341   1              u8      datsTX_Len;
 342   1      
 343   1              datsTX_Len = ZigB_TXFrameLoad(dataTXBUF,REQ_CMD, 2, REQ_DATS, REQdatsLen);
 344   1      
 345   1              for(loop = 0;loop < times;loop ++){
 346   2              
 347   2                      uartRX_toutFLG = 0;
 348   2                      zigbNwkAction_counter = timeDelay;
 349   2                      uartZigB_datsSend(dataTXBUF, datsTX_Len);
 350   2                      
 351   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 352   3                              
 353   3                              if(uartRX_toutFLG){
 354   4                              
 355   4                                      uartRX_toutFLG = 0;
 356   4                                      
 357   4                                      if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ANSR_frame, ANSRdatsLen)){
 358   5                                      
 359   5                                              delayMs(2);
 360   5                                              return 1;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 7   

 361   5                                      }
 362   4                              }
 363   3                      }
 364   2              }
 365   1              
 366   1              return 0;
 367   1      }
 368          
 369          ///*zigbeeÍ¨ĞÅ´ØÉèÖÃ*///×èÈû
 370          //bit zigb_clusterSet(u16 deviveID, u8 endPoint){
 371          
 372          //      datsAttr_ZigbInit code default_param = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x01,0x00,0x00,
             -0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,300};       //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 373          //      u8 code frameResponse_Subs[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾­×¢²á
 374          //              
 375          //#define       dataLen_zigbClusterSet  64
 376          //      u8 xdata paramTX_temp[dataLen_zigbClusterSet] = {0};
 377          //      
 378          //      bit setResult = 0;
 379          //      
 380          //      memcpy(paramTX_temp, default_param.zigbInit_reqDAT, default_param.reqDAT_num);
 381          //      paramTX_temp[0] = endPoint;
 382          //      paramTX_temp[3] = (u8)((deviveID & 0x00ff) >> 0);
 383          //      paramTX_temp[4] = (u8)((deviveID & 0xff00) >> 8);
 384          //      
 385          //      setResult =  zigb_VALIDA_INPUT( (u8 *)default_param.zigbInit_reqCMD,
 386          //                                                                      (u8 *)paramTX_temp,
 387          //                                                                      default_param.reqDAT_num,
 388          //                                                                      (u8 *)default_param.zigbInit_REPLY,
 389          //                                                                      default_param.REPLY_num,
 390          //                                                                      2,              //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 391          //                                                                      default_param.timeTab_waitAnsr);
 392          //      
 393          //      if(setResult)return setResult;
 394          //      else{
 395          //      
 396          //              return zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 397          //                                                               (u8 *)paramTX_temp,
 398          //                                                               default_param.reqDAT_num,
 399          //                                                               (u8 *)frameResponse_Subs,
 400          //                                                               6,
 401          //                                                               2,             //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 402          //                                                               default_param.timeTab_waitAnsr);
 403          //      }
 404          //}
 405          
 406          ///*zigbeeÖØĞÂÈëÍø*///×èÈûº¯Êı£¬½ö¹©²âÊÔÊ¹ÓÃ
 407          //bit ZigB_NwkJoin(u16 PANID, u8 CHANNELS){
 408          
 409          //#define       cmdNum_zigbNwkJoin      8       
 410          //      
 411          //#define        loop_PANID             5
 412          //#define        loop_CHANNELS  6
 413          
 414          //      datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkJoin] = {
 415          //              
 416          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 417          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 418          //              {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³
             -õÊ¼»¯£¬È«²¿Çå¿Õ
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 8   

 419          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¶ş´Î¸´Î»
 420          //              
 421          ////            {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨Ğ­µ÷Æ÷£©
 422          //              {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Â·ÓÉÆ÷£©
 423          ////            {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨ÖÕ¶Ë£©
 424          //              
 425          //              {       {0x27,0x02},    {0x34,0x12},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ
             -÷ÉèÖÃ
 426          //              {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµ
             -À¼Ä´æÆ÷ÅäÖÃ
 427          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 428          //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 429          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 430          //      };
 431          //      
 432          //#define       dataLen_zigbNwkJoin 64
 433          //      u8 xdata paramTX_temp[dataLen_zigbNwkJoin] = {0};
 434          //      
 435          //      u8  loop;
 436          //      u32 chnl_temp = 0x00000800UL << CHANNELS;
 437          //      
 438          //      for(loop = 1; loop < cmdNum_zigbNwkJoin; loop ++){
 439          //              
 440          //              memset(paramTX_temp, 0, dataLen_zigbNwkJoin * sizeof(u8));
 441          //              
 442          //              switch(loop){   //×ÔÑ¡²ÎÊı&Ä¬ÈÏ²ÎÊı
 443          //              
 444          //                      case loop_PANID:{
 445          //                      
 446          //                              paramTX_temp[0] = (u8)((PANID & 0x00ff) >> 0);
 447          //                              paramTX_temp[1] = (u8)((PANID & 0xff00) >> 8);
 448          //                              
 449          //                      }break;
 450          //                      
 451          //                      case loop_CHANNELS:{
 452          //                      
 453          //                              paramTX_temp[0] = (u8)((chnl_temp & 0x000000ff) >>  0);
 454          //                              paramTX_temp[1] = (u8)((chnl_temp & 0x0000ff00) >>  8);
 455          //                              paramTX_temp[2] = (u8)((chnl_temp & 0x00ff0000) >> 16);
 456          //                              paramTX_temp[3] = (u8)((chnl_temp & 0xff000000) >> 24);
 457          //                              
 458          //                      }break;
 459          //                      
 460          //                      default:{
 461          //                      
 462          //                              memcpy(paramTX_temp,ZigbInit_dats[loop].zigbInit_reqDAT,ZigbInit_dats[loop].reqDAT_num);
 463          //                              
 464          //                      }break;
 465          //              }
 466          //      
 467          //              delayMs(100);
 468          //              if(0 == zigb_VALIDA_INPUT((u8 *)ZigbInit_dats[loop].zigbInit_reqCMD,
 469          //                                                                (u8 *)paramTX_temp,
 470          //                                                                ZigbInit_dats[loop].reqDAT_num,
 471          //                                                                (u8 *)ZigbInit_dats[loop].zigbInit_REPLY,
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 9   

 472          //                                                                ZigbInit_dats[loop].REPLY_num,
 473          //                                                                3,
 474          //                                                                ZigbInit_dats[loop].timeTab_waitAnsr)
 475          //                                                               )loop = 0;
 476          //      }
 477          //      
 478          //      return zigb_clusterSet(13, 13); //Éè±¸ID 13£¬ÖÕ¶Ëµã 13£»
 479          //}
 480          
 481          /*zigbee Ö÷¶¯¿ª·ÅÍøÂç*///×èÈû
 482          bit ZigB_nwkOpen(bit openIF, u8 openTime){
 483   1      
 484   1              datsAttr_ZigbInit code default_param = {{0x26,0x08}, {0xFC,0xFF,0x00}, 0x03, {0xFE,0x01,0x66,0x08,0x00,0x
             -6F}, 0x06, 150}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 485   1              
 486   1              bit resultSet = 0;
 487   1              
 488   1              u8 openTime_temp = 0;
 489   1              
 490   1      #define paramLen_zigbNwkOpen 3
 491   1              u8 xdata paramTX_temp[paramLen_zigbNwkOpen] = {0xFC,0xFF,0x00};
 492   1              
 493   1              (openIF)?(paramTX_temp[2] = openTime):(paramTX_temp[2] = 0);
 494   1              
 495   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 496   1                                                                        (u8 *)paramTX_temp,
 497   1                                                                        default_param.reqDAT_num,
 498   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 499   1                                                                        default_param.REPLY_num,
 500   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 501   1                                                                        default_param.timeTab_waitAnsr);
 502   1      
 503   1      #if(DEBUG_LOGOUT_EN == 1)       
 504   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 505   1      //              u8 xdata log_buf[64];
 506   1      //              
 507   1      //              sprintf(log_buf, "nwkOpen result:%d.\n", (int)resultSet);
 508   1      //              PrintString1_logOut(log_buf);
 509   1      //      }
 510   1      #endif
 511   1              
 512   1              return resultSet;
 513   1      }
 514          
 515          /*zigbee PANID»ñÈ¡*///×èÈû
 516          static u16 ZigB_getPanIDCurrent(void){
 517   1      
 518   1              u16 PANID_temp = 0;
 519   1              
 520   1      #define paramLen_zigbPanIDGet 32
 521   1              u8 xdata paramTX_temp[paramLen_zigbPanIDGet] = {0};
 522   1              
 523   1              u8 code frameREQ_zigbPanIDGet[6] = {0xFE, 0x01, 0x26, 0x06, 0x06, 0x27};        //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 524   1              u8 code cmdResp_zigbPanIDGet[2]  = {0x66, 0x06};        //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 525   1              u8 datsResp_Len = 0;
 526   1      
 527   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbPanIDGet, 6, cmdResp_zigbPanIDGet, paramTX_temp, 2, 300);
 528   1      
 529   1              if(datsResp_Len){
 530   2      
 531   2                      PANID_temp |= (((u16)(paramTX_temp[5]) << 0) & 0x00FF);
 532   2                      PANID_temp |= (((u16)(paramTX_temp[6]) << 8) & 0xFF00);
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 10  

 533   2      
 534   2      //              printf_datsHtoA("[Tips_uartZigb]: resultDats:", local_datsParam->frameResp, local_datsParam->frameResp
             -Len);
 535   2              }
 536   1      
 537   1              return PANID_temp;
 538   1      }
 539          
 540          /*zigbeeÏµÍ³Ê±¼ä»ñÈ¡²¢¸üĞÂ*///×èÈû
 541          static bit getSystemTime_reales(void){
 542   1              
 543   1              bit resultOpreat = 0;
 544   1      
 545   1      #define paramLen_zigbSystimeGet 32
 546   1              u8 xdata paramTX_temp[paramLen_zigbSystimeGet] = {0};
 547   1              
 548   1              u8 code frameREQ_zigbSystimeGet[5] = {0xFE, 0x00, 0x21, 0x11, 0x30};    //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 549   1              u8 code cmdResp_zigbSystimeGet[2]  = {0x61, 0x11};      //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 550   1              u8 datsResp_Len = 0;
 551   1      
 552   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbSystimeGet, 5, cmdResp_zigbSystimeGet, paramTX_temp, 2, 300)
             -;
 553   1              
 554   1              if(!datsResp_Len)resultOpreat = 0;
 555   1              else{
 556   2                      
 557   2                      u16 Y_temp16 = ((u16)paramTX_temp[13] << 0) | ((u16)paramTX_temp[14] << 8);
 558   2                      u8  Y_temp8 = 0;
 559   2                      u8  M_temp8 = 0;
 560   2                      
 561   2                      u8 Y = (u8)(Y_temp16 % 2000);
 562   2                      u8 M = paramTX_temp[11];
 563   2                      u8 D = paramTX_temp[12];
 564   2                      u8 W = 0;
 565   2                      
 566   2                      /*¼ÆËã»º´æ¸³Öµ*/
 567   2                      Y_temp8 = Y;
 568   2                      if(M == 1 || M == 2){ //Ò»ÔÂºÍ¶şÔÂµ±×÷ÉÏÒ»ÄêÊ®ÈıÔÂºÍÊ®ËÄÔÂ
 569   3                      
 570   3                              M_temp8 = M + 12;
 571   3                              Y_temp8 --;
 572   3                      }
 573   2                      else M_temp8 = M;
 574   2                      
 575   2                      /*¿ªÊ¼¼ÆËã*/
 576   2                      W =      Y_temp8 + (Y_temp8 / 4) + 5 - 40 + (26 * (M_temp8 + 1) / 10) + D - 1;  //²ÌÀÕ¹«Ê½
 577   2                      W %= 7; 
 578   2                      
 579   2                      /*¼ÆËã½á¹û¸³Öµ*/
 580   2                      W?(systemTime_current.time_Week = W):(systemTime_current.time_Week = 7);
 581   2                      
 582   2                      systemTime_current.time_Month =         M;
 583   2                      systemTime_current.time_Day =           D;
 584   2                      systemTime_current.time_Year =          Y;
 585   2                      
 586   2                      systemTime_current.time_Hour =          paramTX_temp[8];
 587   2                      systemTime_current.time_Minute =        paramTX_temp[9];
 588   2                      systemTime_current.time_Second =        paramTX_temp[10];
 589   2                      
 590   2                      /*±¾µØÊ±¼äÎ¬³Ö¼ÆÊıÖµĞ£×¼¸üĞÂ*/
 591   2                      sysTimeKeep_counter = systemTime_current.time_Minute * 60 + systemTime_current.time_Second; //ÏµÍ³Ê±¼äÎ¬
             -³Ö¼ÆÊıÖµ¸üĞÂ
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 11  

 592   2                      
 593   2                      resultOpreat = 1;
 594   2              }
 595   1              
 596   1      #if(DEBUG_LOGOUT_EN == 1)       
 597   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 598   1      //              u8 xdata log_buf[64];
 599   1      //              
 600   1      //              sprintf(log_buf, "sysTime reales result:%d.\n", (int)resultOpreat);
 601   1      //              PrintString1_logOut(log_buf);
 602   1      //      }
 603   1      #endif
 604   1              
 605   1              return resultOpreat;
 606   1      }
 607          
 608          /*zigbeeÏµÍ³Ê±¼äÉèÖÃ*///×èÈû
 609          static
 610          bit zigB_sysTimeSet(u32 timeStamp, bit timeZoneAdjust_IF){
 611   1      
 612   1              datsAttr_ZigbInit code default_param = {{0x21,0x10},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00},0x0B,{0xFE,0x01,0x61,0x10,0x00},0x05,100}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 613   1              u8 xdata timeStampArray[0x0B] = {0};
 614   1              bit resultSet = 0;
 615   1              u32 timeStamp_temp = timeStamp;
 616   1              
 617   1              if(timeZoneAdjust_IF){ //ÊÇ·ñĞèÒªÊ±Çøµ÷Õû
 618   2              
 619   2                      if(sysTimeZone_H <= 12){
 620   3                      
 621   3                              timeStamp_temp += (3600UL * (long)sysTimeZone_H + 60UL * (long)sysTimeZone_M); //Ê±ÇøÕı
 622   3                              
 623   3                      }else
 624   2                      if(sysTimeZone_H > 12 && sysTimeZone_H <= 24){
 625   3                      
 626   3                              timeStamp_temp -= (3600UL * (long)(sysTimeZone_H - 12) + 60UL * (long)sysTimeZone_M); //Ê±Çø¸º
 627   3                              
 628   3                      }else
 629   2                      if(sysTimeZone_H >= 30){
 630   3                      
 631   3                              timeStamp_temp += (3600UL * (long)(sysTimeZone_H - 17) + 60UL * (long)sysTimeZone_M); //Ê±ÇøÌØÊâ
 632   3                      }
 633   2              }
 634   1      
 635   1              timeStampArray[0] = (u8)((timeStamp_temp & 0x000000ff) >> 0);
 636   1              timeStampArray[1] = (u8)((timeStamp_temp & 0x0000ff00) >> 8);
 637   1              timeStampArray[2] = (u8)((timeStamp_temp & 0x00ff0000) >> 16);
 638   1              timeStampArray[3] = (u8)((timeStamp_temp & 0xff000000) >> 24);
 639   1              
 640   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 641   1                                                                        (u8 *)timeStampArray,
 642   1                                                                        default_param.reqDAT_num,
 643   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 644   1                                                                        default_param.REPLY_num,
 645   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 646   1                                                                        default_param.timeTab_waitAnsr);
 647   1              
 648   1      #if(DEBUG_LOGOUT_EN == 1)       
 649   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 650   1      //              u8 xdata log_buf[64];
 651   1      //              
 652   1      //              sprintf(log_buf, "sysTime set result:%d.\n", (int)resultSet);
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 12  

 653   1      //              PrintString1_logOut(log_buf);
 654   1      //      }
 655   1      #endif
 656   1              
 657   1              return resultSet;
 658   1      }
 659          
 660          ///*zigbeeÓ²¼ş¸´Î»³õÊ¼»¯*///×èÈû
 661          //bit ZigB_resetInit(void){
 662          
 663          //#define zigbInit_loopTry              3
 664          //#define zigbInit_onceWait     5000
 665          
 666          //      u8 code initCmp_Frame[11] = {0xFE, 0x06, 0x41, 0x80, 0x01, 0x02, 0x00, 0x02, 0x06, 0x03, 0xC3};
 667          //      
 668          //      u8      loop = 0;
 669          //      u16 timeWait = 0;
 670          //      
 671          //      for(loop = 0; loop < zigbInit_loopTry; loop ++){
 672          //      
 673          //              zigbPin_RESET = 0;
 674          //              delayMs(100);
 675          //              zigbPin_RESET = 1;
 676          //              
 677          //              timeWait = zigbInit_onceWait;
 678          //              while(timeWait --){
 679          //              
 680          //                      delayMs(2);     //±ØĞëÑÓÊ±
 681          //                      if(uartRX_toutFLG){
 682          //                      
 683          //                              uartRX_toutFLG = 0;
 684          //                              
 685          //                              if(!memcmp(datsRcv_ZIGB.rcvDats, initCmp_Frame, 11)){
 686          //                              
 687          //                                      return 1;
 688          //                                      
 689          //                              }else{
 690          //                                      
 691          //                                      delayMs(1);     //±ØĞëÑÓÊ±
 692          //                              }
 693          //                      }
 694          //              }
 695          //      }
 696          //      
 697          //      return 0;
 698          //}
 699          
 700          ///*zigbee³õÊ¼»¯×Ô¼ì*///×èÈû
 701          //bit ZigB_inspectionSelf(void){        
 702          //      
 703          //#define       paramLen_zigbInspection 64
 704          //      u8 xdata paramTX_temp[paramLen_zigbInspection] = {0};
 705          //      
 706          ////    bit REQResult = 0;
 707          //      
 708          ////    u8 code frameREQ_zigbStatusCheck[5] = {0xFE, 0x00, 0x27, 0x00, 0x27};   //zigb×´Ì¬²éÑ¯Ö¸ÁîÖ¡
 709          ////    u8 code cmdResp_zigbStatusCheck[2]      = {0x67, 0x00}; //zigb×´Ì¬²éÑ¯ÏìÓ¦Ö¸Áî
 710          //      u8 code frameREQ_zigbJoinNWK[5]         = {0xFE, 0x00, 0x26, 0x00, 0x26};       //zigb¼¤»îÍøÂçÖ¸ÁîÖ¡
 711          //      u8 code cmdResp_zigbJoinNWK[2]          = {0x45, 0xC0}; //zigb¼¤»îÍøÂçÏìÓ¦Ö¸Áî
 712          //      u8 datsResp_Len = 0;
 713          //      
 714          ////    datsResp_Len = zigb_datsRequest(frameREQ_zigbStatusCheck, 5, cmdResp_zigbStatusCheck, paramTX_temp, 2
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 13  

             -, 500);
 715          ////    if(paramTX_temp[16] == 0x07)REQResult
 716          //      
 717          //      datsResp_Len = zigb_datsRequest(frameREQ_zigbJoinNWK, 5, cmdResp_zigbJoinNWK, paramTX_temp, 2, 5000);
 718          //      if(paramTX_temp[4] == 0x07)return (zigb_clusterSet(13, 13) & zigb_clusterSet(13, 14));  //Éè±¸ID 13£¬ÖÕ¶
             -Ëµã 13£»        
 719          //      else{
 720          //      
 721          //              return 0;
 722          //      }
 723          //}
 724          
 725          /*zigbee·Ç×èÈûÈëÍøÇëÇó×´Ì¬»ú*///·Ç×èÈû ---ĞÅµÀÄ¬ÈÏµÚËÄĞÅµÀ
 726          static 
 727          void zigB_nwkJoinRequest(bit reJoin_IF){
 728   1      
 729   1      #define cmdNum_zigbNwkREQ       9       
 730   1      
 731   1              datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkREQ] = {
 732   1      
 733   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Ó²¼ş)
 734   1      //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x00,0x02,0x00,0x02,0x06,0x03,0xC2},       0x0B,   4000    },      
             -//¸´Î»(Ìæ²¹)
 735   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Èí¼ş)
 736   1                      {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³õÊ
             -¼»¯£¬È«²¿Çå¿Õ
 737   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¶ş´Î¸´Î»(Èí¼ş)
 738   1                      
 739   1      //              {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Ğ­µ÷Æ÷£©
 740   1                      {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖÃ£
             -¨Â·ÓÉÆ÷£©
 741   1      //              {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨ÖÕ¶Ë£©
 742   1                      
 743   1                      {       {0x27,0x02},    {0xFF,0xFF},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ÷É
             -èÖÃ
 744   1                      {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµÀ¼
             -Ä´æÆ÷ÅäÖÃ
 745   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 746   1                      {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   8000    },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨½ÇÉ
             -«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 747   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 748   1                      {       {0x26,0x08},    {0xFC,0xFF,0x00},               0x03,   {0xFE,0x01,0x66,0x08,0x00,0x6F},                                                        0x06,   150             },  //¹Ø±Õ
             -ÍøÂç
 749   1              };
 750   1              
 751   1              datsAttr_ZigbInit code defaultParam_clusterRegister = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x
             -01,0x00,0x00,0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,500};  //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 752   1              u8 code frameResponseSubs_clusterRegister[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾
             -­×¢²á
 753   1              
 754   1      #define clusterNum_default 3
 755   1              datsAttr_clusterREG code cluster_Default[clusterNum_default] = {
 756   1              
 757   1                      {ZIGB_ENDPOINT_CTRLSECENARIO, zigbDatsDefault_ClustID}, 
 758   1                      {ZIGB_ENDPOINT_CTRLNORMAL, zigbDatsDefault_ClustID}, 
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 14  

 759   1                      {ZIGB_ENDPOINT_CTRLSYSZIGB, zigbDatsDefault_ClustID}
 760   1              };
 761   1              
 762   1      #define dataLen_zigbNwkREQ 64
 763   1              u8 xdata paramTX_temp[dataLen_zigbNwkREQ] = {0};
 764   1              
 765   1              static u8 xdata step_CortexA = 0, //×´Ì¬»ú-Ö÷²½Öè
 766   1                                xdata step_CortexB = 0; //×´Ì¬»ú-×Ó²½Öè
 767   1              static u8 xdata reactionLoop = 0; //ÖØ¸´´ÎÊı»º´æ
 768   1                         u8 xdata actionReaptDefine_normal = 2; //ÖØ¸´´ÎÊı¶¨Òå_³£¹æÖ¸ÁîÏÂ
 769   1              
 770   1              u8 datsTX_Len = 0;
 771   1              
 772   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
 773   2              
 774   2                      devStatus_switch.statusChange_IF = 0;
 775   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
 776   2                      
 777   2                      step_CortexA = 0;
 778   2                      step_CortexB = 0;
 779   2                      reactionLoop = 0;
 780   2                      zigbPin_RESET = 1;
 781   2                      
 782   2                      return;
 783   2              }
 784   1              
 785   1              if(step_CortexA > (cmdNum_zigbNwkREQ + clusterNum_usr + clusterNum_default)){ //ÅĞ¶Ïµ±Ç°×´Ì¬»úÄÚ²¿×´Ì¬Á÷³
             -ÌÊÇ·ñÍê³É
 786   2              
 787   2                      step_CortexA = 0;
 788   2                      step_CortexB = 0;
 789   2                      reactionLoop = 0;
 790   2                      zigbPin_RESET = 1;
 791   2                      
 792   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES; //systime¸üĞÂÖÜÆÚÖØÖÃ£¬·ÀÖ¹¶àÖ¸Áî¶ÂÈû³åÍ»
 793   2                      
 794   2                      devRunning_Status = status_passiveDataRcv; //Íâ²¿×´Ì¬ÇĞ»»
 795   2                      devTips_status = status_Normal; //Éè±¸ÏµÍ³tips×´Ì¬ÇĞ»»
 796   2                      
 797   2                      dev_currentPanid = ZigB_getPanIDCurrent(); //¸üĞÂÒ»´ÎPANID,±ÜÃâ¶ş´ÎÖØĞÂ¼ÓÍø²ĞÁôÀÏµÄPANID
 798   2                      
 799   2      #if(DEBUG_LOGOUT_EN == 1)
 800   2                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 801   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 802   3                              sprintf(log_buf, "nwkZigb connect/rejoin all complete.\n");
 803   3                              PrintString1_logOut(log_buf);
 804   3                      }                       
 805   2      #endif
 806   2                      
 807   2                      return;
 808   2              }
 809   1              
 810   1              if(!reJoin_IF)if(step_CortexA == 0)step_CortexA = 7; //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔò²»½øĞĞÓ²¼ş¸´Î»(Ó²¼ş¸
             -´Î»½«µ¼ÖÂ±¾µØÊ±¼ä±»ÖØÖÃ)
 811   1              if((step_CortexA == 7) || (step_CortexA == 0))sysTimeReales_counter     = PERIOD_SYSTIMEREALES; //·Ç×èÈû¹Ø¼üÖ
             -¸Áî²»ÄÜ±»×èÈûÖ¸Áî´ò¶Ï£¨Ó²¼ş¸´Î» ºÍ ÈëÍøÊ± ÖĞ¶Ï×èÈûÖ¸ÁîÏÂ´ï£©
 812   1              
 813   1      #if(DEBUG_LOGOUT_EN == 1)
 814   1              {//Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 815   2              #define STATUSMACHINE_NWKREQ_DISPINITVAL 255
 816   2                      static u8 xdata stepDisp_CortexA = STATUSMACHINE_NWKREQ_DISPINITVAL;
 817   2                      
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 15  

 818   2                      if(stepDisp_CortexA != step_CortexA){
 819   3                      
 820   3                              stepDisp_CortexA = step_CortexA;
 821   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 822   3                              sprintf(log_buf, "nwkZigb connect/rejoin mainStep-%02d@method:%d complete.\n", (int)stepDisp_CortexA, (
             -int)reJoin_IF);
 823   3                              PrintString1_logOut(log_buf);
 824   3                      }
 825   2              }
 826   1      #endif
 827   1              
 828   1              if(step_CortexA == 0){ //ÌØÊâÖ¸Áî_Ó²¼ş¸´Î»:<0>
 829   2              
 830   2                      switch(step_CortexA){
 831   3                      
 832   3                              case 0:{ //Ê×ÌõÖ¸Áî£¬Ó²¼ş¸´Î»
 833   4                              
 834   4                                      switch(step_CortexB){
 835   5                                      
 836   5                                              case 0:{ //²½ÖèÒ»£ºÓ²¼şÀ­µÍ100ms
 837   6                                              
 838   6                                                      zigbPin_RESET = 0;
 839   6                                                      zigbNwkAction_counter = 200;
 840   6                                                      step_CortexB = 1;
 841   6                                              
 842   6                                              }break;
 843   5                                      
 844   5                                              case 1:{ //²½Öè¶ş£ºÓ²¼şÀ­µÍÍê±ÏºóÈ·ÈÏÓ¦´ğÖ¡Ê±³¤
 845   6                                              
 846   6                                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı6000ms
 847   7                                                      
 848   7                                                              zigbPin_RESET = 1;
 849   7                                                              zigbNwkAction_counter = 6000;
 850   7                                                              step_CortexB = 2;
 851   7                                                      }
 852   6                                                      
 853   6                                              }break;
 854   5                                              
 855   5                                              case 2:{ //²½Öè¶ş£ºÈ·ÈÏÓ¦´ğÖ¡
 856   6                                                      
 857   6                                                      if(!zigbNwkAction_counter)step_CortexB = 0; //·Ç×èÈûµÈ´ıÏìÓ¦
 858   6                                              
 859   6                                                      if(uartRX_toutFLG){
 860   7                                                      
 861   7                                                              uartRX_toutFLG = 0;
 862   7                                                              
 863   7                                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[0].zigbInit_REPLY, ZigbInit_dats[0].RE
             -PLY_num)){
 864   8                              
 865   8                                                                      step_CortexB = 0;
 866   8                                                                      reactionLoop = 0;
 867   8                                                                      step_CortexA ++;
 868   8                                                              }
 869   7                                                      }
 870   6                                                      
 871   6                                              }break;
 872   5                                      }
 873   4                                      
 874   4                              }break;
 875   3                      }
 876   2              }else
 877   1              if(step_CortexA > 0 && step_CortexA < cmdNum_zigbNwkREQ){ //³£¹æÖ¸Áî:<1 - 9>
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 16  

 878   2                      
 879   2      //              if(!reJoin_IF)if(step_CortexA == 2)step_CortexA = 7;    //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔòÖ»½øĞĞ±»¶¯ÍøÂç¼¤»
             -î
 880   2      
 881   2                      switch(step_CortexB){
 882   3                      
 883   3                              case 0:{
 884   4                                      
 885   4                                      (step_CortexA == 7)?(actionReaptDefine_normal = 12):(actionReaptDefine_normal =  2); //ÓÉÓÚÈëÍø¹ı³Ì½Ï¸
             -´ÔÓ£¬ÈëÍøÖ¸ÁîµÈ´ıÊ±¼ä·Å³¤
 886   4                                      
 887   4                                      if(reactionLoop > actionReaptDefine_normal){
 888   5                                              
 889   5                                              reactionLoop = 0;
 890   5                                              step_CortexA = 0;
 891   5                                              break;
 892   5                                      }
 893   4                                      
 894   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 895   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqCMD, 
 896   4                                                                                                2, 
 897   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqDAT, 
 898   4                                                                                                ZigbInit_dats[step_CortexA].reqDAT_num);
 899   4                                      
 900   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 901   4                                      
 902   4                                      zigbNwkAction_counter = ZigbInit_dats[step_CortexA].timeTab_waitAnsr;
 903   4                                      step_CortexB = 1;
 904   4                                      
 905   4                              }break;
 906   3                                      
 907   3                              case 1:{
 908   4                                      
 909   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 910   5                                      
 911   5                                              reactionLoop ++;
 912   5                                              step_CortexB = 0;
 913   5                                      }
 914   4                                      else
 915   4                                      if(uartRX_toutFLG){
 916   5                                      
 917   5                                              uartRX_toutFLG = 0;
 918   5                                              
 919   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[step_CortexA].zigbInit_REPLY, ZigbInit_d
             -ats[step_CortexA].REPLY_num)){
 920   6                                              
 921   6                                                      step_CortexB = 0;
 922   6                                                      reactionLoop = 0;
 923   6                                                      step_CortexA ++;
 924   6                                              }
 925   5                                      }
 926   4                                      
 927   4                              }break;
 928   3                      }
 929   2                      
 930   2              }else
 931   1              if(step_CortexA >= cmdNum_zigbNwkREQ){ //ÌØÊâÖ¸Áî_³£¹æÍ¨ĞÅ´Ø×¢²á:<10 - n>
 932   2                      
 933   2                      u8 datsREG_cluster[16] = {0};
 934   2                      memcpy(datsREG_cluster, defaultParam_clusterRegister.zigbInit_reqDAT, defaultParam_clusterRegister.reqDA
             -T_num);
 935   2                      if(step_CortexA < (cmdNum_zigbNwkREQ + clusterNum_default)){ //Ä¬ÈÏ×¨ÓÃÍ¨ĞÅ´Ø²ÎÊıÌî×°
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 17  

 936   3                      
 937   3                              datsREG_cluster[0] = cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].endpoint;
 938   3                              datsREG_cluster[3] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0x00ff) >> 0);
 939   3                              datsREG_cluster[4] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0xff00) >> 8);
 940   3                              
 941   3                      }else{  //ÓÃ»§Í¨ĞÅ´Ø£¨»¥¿Ø£©×¢²á²ÎÊıÌî×°
 942   3                      
 943   3                              if((CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] >= 0x10) && (CTRLEATHER_PORT[ste
             -p_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] < 255)){ //Í¨ĞÅ´Ø¶Ë¿ÚºÏ·¨ĞÔÅĞ¶Ï
 944   4                              
 945   4                                      datsREG_cluster[0] = CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr];
 946   4                                      datsREG_cluster[3] = zigbDatsDefault_ClustID; //Ä¬ÈÏ´ØID <LSB>
 947   4                                      datsREG_cluster[4] = 0; //Ä¬ÈÏ´ØID <MSB>
 948   4                                      
 949   4                              }else{
 950   4                              
 951   4                                      step_CortexA ++;
 952   4                                      return;
 953   4                              }
 954   3                      }
 955   2              
 956   2                      switch(step_CortexB){
 957   3                      
 958   3                              case 0:{
 959   4                                      
 960   4                                      if(reactionLoop > 2){
 961   5                                              
 962   5                                              reactionLoop = 0;
 963   5                                              step_CortexA = 0;
 964   5                                              break;
 965   5                                      }
 966   4                                      
 967   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 968   4                                                                                                defaultParam_clusterRegister.zigbInit_reqCMD, 
 969   4                                                                                                2, 
 970   4                                                                                                datsREG_cluster, 
 971   4                                                                                                defaultParam_clusterRegister.reqDAT_num);
 972   4                                      
 973   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 974   4                                      
 975   4                                      zigbNwkAction_counter = defaultParam_clusterRegister.timeTab_waitAnsr;
 976   4                                      step_CortexB = 1;
 977   4                                      
 978   4                              }break;
 979   3                                      
 980   3                              case 1:{
 981   4                                      
 982   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 983   5                                      
 984   5                                              reactionLoop ++;
 985   5                                              step_CortexB = 0;
 986   5                                      }
 987   4                                      else
 988   4                                      if(uartRX_toutFLG){
 989   5                                      
 990   5                                              uartRX_toutFLG = 0;
 991   5                                              
 992   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, defaultParam_clusterRegister.zigbInit_REPLY, defaultPa
             -ram_clusterRegister.REPLY_num) || //Ô¤ÆÚÏìÓ¦
 993   5                                                 memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, frameResponseSubs_clusterRegister, 6)){ //Ìæ²¹ÏìÓ¦
 994   6                                              
 995   6                                                      step_CortexB = 0;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 18  

 996   6                                                      reactionLoop = 0;
 997   6                                                      step_CortexA ++;
 998   6                                              }
 999   5                                      }
1000   4                                      
1001   4                              }break;
1002   3                      }
1003   2              }
1004   1      }
1005          
1006          /*zigbeeÍøÂçÊı¾İ·¢ËÍ¸ñÊ½»¯Ìî×°*/
1007          static 
1008          u8 zigb_datsLoad_datsSend(u8  frame_Temp[NORMALDATS_DEFAULT_LENGTH],
1009                                                            u16 DstAddr,
1010                                                            u8  portPoint,
1011                                                            u8  dats[],
1012                                                            u8  datsLen){
1013   1              
1014   1              u8 code zigbCMD_DatsSend[2] = {0x24, 0x01};
1015   1              
1016   1      #define zigbDatsSend_datsTransLen       (128 + 25)
1017   1              u8 xdata buf_datsLOAD[zigbDatsSend_datsTransLen] = {0};
1018   1              u8 datsTX_Len = 0;
1019   1                                                                
1020   1              memset(frame_Temp, 0, NORMALDATS_DEFAULT_LENGTH * sizeof(u8));  
1021   1      
1022   1              //·¢ËÍÖ¡Ìî×°
1023   1              buf_datsLOAD[0] = (u8)((DstAddr & 0x00ff) >> 0);
1024   1              buf_datsLOAD[1] = (u8)((DstAddr & 0xff00) >> 8);
1025   1              buf_datsLOAD[2] = portPoint;
1026   1              buf_datsLOAD[3] = portPoint;
1027   1              buf_datsLOAD[4] = zigbDatsDefault_ClustID;
1028   1              buf_datsLOAD[6] = zigbDatsDefault_TransID;
1029   1              buf_datsLOAD[7] = zigbDatsDefault_Option;
1030   1              buf_datsLOAD[8] = zigbDatsDefault_Radius;
1031   1              buf_datsLOAD[9] = datsLen;
1032   1              memcpy(&buf_datsLOAD[10], dats, datsLen);       
1033   1              
1034   1              return ZigB_TXFrameLoad(frame_Temp, (u8 *)zigbCMD_DatsSend, 2, buf_datsLOAD, datsLen + 10);
1035   1      }
1036          
1037          /*zigbeeÎŞÊÓÏìÓ¦»Ø¸´Ö±½Ó·¢ËÍÊı¾İ*///×èÈû
1038          static
1039          void dataSendRemote_straightforward( u16 DstAddr, //Ô¶¶ËÍøÂç¶ÌµØÖ·
1040                                                                                    u8 port,       //¶Ëµã¿Ú
1041                                                                                    u8 dats[], //Êı¾İ
1042                                                                                    u8 datsLen ){ //Êı¾İ³¤¶È
1043   1                                                                                                                                                
1044   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1045   1              u8 datsTX_Len = 0;
1046   1              
1047   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, DstAddr, port, dats, datsLen);
1048   1              
1049   1              uartZigB_datsSend(buf_datsTX, datsTX_Len);
1050   1      }
1051          
1052          /*zigbeeÍøÂçÊı¾İ·¢ËÍÇëÇó×´Ì¬»ú*///·Ç×èÈû
1053          static
1054          void dataTransRequest_datsSend(void){
1055   1      
1056   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1057   1              u8 datsTX_Len = 0;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 19  

1058   1              
1059   1      #define zigbDatsSend_datsRespLen        64
1060   1              u8 xdata buf_datsRX[zigbDatsSend_datsRespLen] = {0};
1061   1              u8 datsRX_Len = 0;
1062   1              
1063   1      #define zigbDatsSend_ASR_datsLen        3
1064   1              u8              ASR_dats[zigbDatsSend_ASR_datsLen] = {0};
1065   1              u8 code ASR_cmd[2] = {0x44,0x80};       //±¾µØZNPĞ­Òé²ãÈ·ÈÏ·¢ËÍÏìÓ¦
1066   1              
1067   1      #define resCODE_datsSend_NOROUTER 0xCD  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-Â·ÓÉÊ§Áª£¬Í¨Ñ¶Ã½½é¶ªÊ§
1068   1      #define resCODE_datsSend_NOREMOTE 0xE9  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-¶Ô·½²»ÔÚÏß£¬Ä¿±êµØÖ·½ÚµãÉè±¸²»´æÔÚ
1069   1      #define resCODE_datsSend_TIMEOUT  0x01  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³¬Ê±
1070   1      #define resCODE_datsSend_SUCCESS  0x00  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³É¹¦
1071   1              static u8 datsTrans_respondCode = 0; //·¢ËÍÍê³ÉÏìÓ¦Âë
1072   1              
1073   1              static u8 step = 0;
1074   1              static u8 reactionLoop = 0;
1075   1              
1076   1              if(devStatus_switch.statusChange_IF){   //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1077   2              
1078   2                      devStatus_switch.statusChange_IF = 0;
1079   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1080   2                      
1081   2                      step = 0;
1082   2                      reactionLoop = 0;
1083   2                      
1084   2                      return;
1085   2              }
1086   1              
1087   1              //½ÓÊÕÖ¡Ìî×°_±¾µØ
1088   1              ASR_dats[0] = resCODE_datsSend_SUCCESS; //·¢ËÍ³É¹¦ÏìÓ¦´úÂë
1089   1              ASR_dats[1] = datsSend_request.portPoint;
1090   1              ASR_dats[2] = zigbDatsDefault_TransID;
1091   1              datsRX_Len = ZigB_TXFrameLoad(buf_datsRX, (u8 *)ASR_cmd, 2, ASR_dats, zigbDatsSend_ASR_datsLen);
1092   1              
1093   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, datsSend_request.nwkAddr, datsSend_request.portPoint, dat
             -sSend_request.datsTrans.dats, datsSend_request.datsTrans.datsLen);
1094   1              
1095   1              switch(step){
1096   2              
1097   2                      case 0:{ //ÏìÓ¦½ÓÊÕ¾ÍĞ÷£¬ÉèÖÃÏìÓ¦Ê±¼ä
1098   3                              
1099   3                              if(reactionLoop > 3){ //ÖØ·¢´ÎÊıÒÑ³¬³ö
1100   4                                      
1101   4                                      datsTrans_respondCode = resCODE_datsSend_TIMEOUT; //ÏìÓ¦Âë¸ÄÎª³¬Ê±
1102   4                                      
1103   4                                      reactionLoop = 0;
1104   4                                      step = 4;
1105   4                                      
1106   4                                      break;
1107   4                              }
1108   3                      
1109   3                              zigbPin_RESET = 1; //±£ÏÕÆğ¼û£¬¸´Î»À­¸ß
1110   3                              if(!devRemoteDataReqMethod.keepTxUntilCmp_IF)uartZigB_datsSend(buf_datsTX, datsTX_Len); //·ÇËÀ¿Ä£¬·¢Ò»´
             -Î¾ÍĞĞ
1111   3                              zigbNwkAction_counter = REMOTE_DATAREQ_TIMEOUT; //Ä¬ÈÏĞ­Òé²ãÏìÓ¦Ê±¼ä<Ê±¼äÌ«¶ÌÎŞ·¨ÊÕµ½ºóÃæµÄ½ÓÊÕ×´Ì¬ÏìÓ¦
             -Ö¸Áî£¬Ö»ÄÜÊÕµ½ÏµÍ³ÏìÓ¦>
1112   3                              step = 1;
1113   3                              
1114   3                      }break;
1115   2                      
1116   2                      case 1:{ //·Ç×èÈûµÈ´ıÏµÍ³ÏìÓ¦
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 20  

1117   3                              
1118   3                              static u8 xdata local_funRecord = 0; //±¾µØ ³ı´Î±È ÅĞ¶Ï
1119   3                                         u8 xdata funRecord_temp = zigbNwkAction_counter / devRemoteDataReqMethod.datsTxKeep_Period; //³ı´Î±
             -È£¬ÓÃÓÚÖÜÆÚÅĞ¶Ï
1120   3                      
1121   3                              if(!zigbNwkAction_counter){ //³¬Ê±ÅĞ¶Ï
1122   4                              
1123   4                                      reactionLoop ++;
1124   4                                      step = 0;
1125   4                                      local_funRecord = 0;
1126   4                              }
1127   3                              else{
1128   4                                      
1129   4                                      if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //ËÀ¿Ä·½Ê½ÏÂ£¬³¬Ê±Ê±¼äÄÚ£¬ÖÜÆÚÑ­»·ÏÂ·¢Ö¸Áî
1130   5                                              
1131   5                                              if(local_funRecord != funRecord_temp){ //°´³ÖĞøÆµÂÊ³ÖĞø·¢ËÍ
1132   6                                              
1133   6                                                      local_funRecord = funRecord_temp; //±¾µØ³ı´Î±È¸üĞÂ
1134   6                                                      
1135   6                                                      uartZigB_datsSend(buf_datsTX, datsTX_Len);
1136   6                                              }
1137   5                                      }
1138   4                                      
1139   4                                      if(uartRX_toutFLG){
1140   5                                      
1141   5                                              uartRX_toutFLG = 0;
1142   5      
1143   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, buf_datsRX, datsRX_Len)){ //Ó¦´ğÖ¸ÁîºÍÓ¦´ğÂë¶¼ÕıÈ·
1144   6                                              
1145   6                                                      if(datsRcv_respond.datsTrans.datsLen == 0){ //ÅĞ¶ÏÌõ¼şÊÇ·ñĞèÒªÔ¶¶ËÏìÓ¦
1146   7                                                      
1147   7                                                              step = 3;
1148   7                                                              
1149   7                                                      }else{
1150   7                                                      
1151   7                                                              step = 2;
1152   7                                                              zigbNwkAction_counter = REMOTE_RESPOND_TIMEOUT; //Ä¬ÈÏÔ¶¶ËÏìÓ¦Ê±¼ä<¶Ô·½½ÚµãÏìÓ¦>
1153   7                                                      }
1154   6                                                      
1155   6                                                      local_funRecord = 0; //±¾µØ³ı´Î±È¸´Î»
1156   6                                                      
1157   6                                              }else{  
1158   6                                                      
1159   6                                                      if(!memcmp(&datsRcv_ZIGB.rcvDats[2], ASR_cmd, 2)){ //Ó¦´ğÖ¸ÁîÕıÈ·£¬µ«Ó¦´ğÂë´íÎó£¬ÔòÈ¡³ö´íÎóÂë
1160   7                                                      
1161   7                                                              datsTrans_respondCode = datsRcv_ZIGB.rcvDats[4]; //´íÎóÏìÓ¦Âë×°ÔØ
1162   7                                                              
1163   7                                                              if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //·¢ËÍ·½Ê½ÅĞ¶Ï-ÊÇ·ñÎªËÀ¿Ä·½Ê½
1164   8                                                              
1165   8                                                                      
1166   8                                                                      
1167   8                                                              }else{
1168   8                                                              
1169   8                                                                      step = 4; //·ÇËÀ¿Ä·½Ê½£¬ÔòÓĞÓ¦´ğÖ¸Áî£¬µ«Ó¦´ğÊı¾İ´íÎó£¬ÌøÖÁÊ§°Ü²½Öè
1170   8                                                              }
1171   7                                                      }
1172   6                                                      
1173   6      //#if(DEBUG_LOGOUT_EN == 1)
1174   6      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1175   6      //                                                      u8 xdata log_buf[64]; //Êı¾İ´«ÊäÊ§°ÜĞ­Òé²ãÏìÓ¦´úÂë´òÓ¡
1176   6      //                                                      
1177   6      //                                                      sprintf(log_buf, "dats_TX fail code: %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[2], (int)datsR
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 21  

             -cv_ZIGB.rcvDats[3], (int)datsRcv_ZIGB.rcvDats[4]);
1178   6      //                                                      PrintString1_logOut(log_buf);
1179   6      //                                              }       
1180   6      //#endif                                
1181   6                                              }
1182   5                                      }
1183   4                              }
1184   3                              
1185   3                      }break;
1186   2                      
1187   2                      case 2:{ //·Ç×èÈûµÈ´ıÔ¶¶ËÏìÓ¦
1188   3      
1189   3                              if(!zigbNwkAction_counter){
1190   4                              
1191   4                                      reactionLoop ++;
1192   4                                      step = 0;
1193   4                              }
1194   3                              else{
1195   4                                      
1196   4                                      if(uartRX_toutFLG){
1197   5                                              
1198   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
1199   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë  
1200   5                                              
1201   5                                              uartRX_toutFLG = 0;
1202   5                                              
1203   5                                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
1204   6                                              
1205   6      #if(DEBUG_LOGOUT_EN == 1)
1206   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1207   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1208   7                                                              sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
1209   7                                                              PrintString1_logOut(log_buf);
1210   7                                                      }                       
1211   6      #endif  
1212   6                                              }
1213   5      
1214   5                                              if(!memcmp(&(datsRcv_ZIGB.rcvDats[21]), datsRcv_respond.datsTrans.dats, datsRcv_respond.datsTrans.dat
             -sLen) && 
1215   5                                                 (datsRcv_respond.nwkAddr == datsFrom_addr) &&
1216   5                                                      (datsRcv_respond.portPoint == dstPoint)){
1217   6                                              
1218   6                                                      step = 3;
1219   6                                                              
1220   6                                              }else{
1221   6                                              
1222   6      #if(DEBUG_LOGOUT_EN == 1)
1223   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1224   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1225   7      //                                                      sprintf(log_buf, "data remoteRcv is %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[21], (int)datsR
             -cv_ZIGB.rcvDats[22], (int)datsRcv_ZIGB.rcvDats[23]);
1226   7                                                              sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)dstPoint, (int)datsFrom_addr);
1227   7      //                                                      sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)datsRcv_respond.portPoint, (int)d
             -atsRcv_respond.nwkAddr);
1228   7                                                              PrintString1_logOut(log_buf);
1229   7                                                      }       
1230   6      #endif  
1231   6                                              }
1232   5                                      }
1233   4                              }
1234   3                              
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 22  

1235   3                      }break;
1236   2                      
1237   2                      case 3:{ //ÏìÓ¦³É¹¦
1238   3                      
1239   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1240   4                              
1241   4                                      reConnectAfterDatsReq_IF = 0;
1242   4                                      devRunning_Status = status_nwkReconnect;
1243   4                                      
1244   4                              }else{ 
1245   4                              
1246   4                                      devRunning_Status = status_passiveDataRcv;
1247   4                              }
1248   3                              
1249   3                              reactionLoop = 0;
1250   3                              step = 0;
1251   3                              
1252   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1253   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1254   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1255   3                              
1256   3                      }break;
1257   2                      
1258   2                      case 4:{ //ÏìÓ¦Ê§°Ü
1259   3                      
1260   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1261   4                              
1262   4                                      reConnectAfterDatsReq_IF = 0;
1263   4                                      devRunning_Status = status_nwkReconnect;
1264   4                                      
1265   4                              }else{ 
1266   4                              
1267   4                                      devRunning_Status = status_passiveDataRcv;
1268   4                              }
1269   3                              
1270   3                              //Õë¶ÔÊı¾İ´«ÊäÊ§°ÜÏìÓ¦´úÂëÇé¿ö½øĞĞÑ¡ÔñĞÔÖØÁ¬£¬·ñÔò½öÊ±ÇøĞ­µ÷Æ÷Éè±¸¾Ígg
1271   3                              if(datsTrans_respondCode){ 
1272   4                                      
1273   4      #if(DEBUG_LOGOUT_EN == 1)                               
1274   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1275   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1276   5                                              sprintf(log_buf, "remote dataRequest fail, code:[0x%02X].\n", (int)datsTrans_respondCode);
1277   5                                              PrintString1_logOut(log_buf);
1278   5                                      }
1279   4      #endif  
1280   4                                      if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //ÈôÅÜÂíµÆÕıÔÚÔËĞĞÔòÖĞ¶ÏÅÜÂíµÆ
1281   4                                      
1282   4                                      switch(datsTrans_respondCode){ //ÏìÓ¦Ê§°ÜÂë·ÖÎö
1283   5                                      
1284   5                                              case resCODE_datsSend_NOROUTER:
1285   5                                              case resCODE_datsSend_NOREMOTE:
1286   5                                              case resCODE_datsSend_SUCCESS:{
1287   6                                              
1288   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1289   6                                                      
1290   6                                              }break;
1291   5                                              
1292   5                                              default:{
1293   6                                              
1294   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1295   6                                                      
1296   6                                              }break;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 23  

1297   5                                      }
1298   4                                      
1299   4                                      datsTrans_respondCode = 0;
1300   4                              }
1301   3                              
1302   3                              reactionLoop = 0;
1303   3                              step = 0;
1304   3                              
1305   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1306   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1307   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1308   3                              
1309   3                      }break;
1310   2                              
1311   2                      default:{
1312   3                      
1313   3                              step = 4;
1314   3                              
1315   3                      }break;
1316   2              }
1317   1      }
1318          
1319          /*Éè±¸Êı¾İ´«ÊäÖ÷×´Ì¬ÇĞ»»ÖÁÍøÂç¹ÒÆğ*/
1320          void devStatusChangeTo_devHold(bit zigbNwkSysNote_IF){ //Éè±¸ÍøÂç¹ÒÆğ
1321   1      
1322   1              devNwkHoldTime_Param.devHoldTime_counter = DEVHOLD_TIME_DEFAULT;
1323   1              if(zigbNwkSysNote_IF)devNwkHoldTime_Param.zigbNwkSystemNote_IF = 1;
1324   1              
1325   1              devStatus_switch.statusChange_standBy = status_devNwkHold; //Êı¾İ´«Êä×´Ì¬»ú¸ü±ä
1326   1              devStatus_switch.statusChange_IF = 1;
1327   1              
1328   1              devTips_status = status_devHold; //tips¸ü±ä
1329   1              thread_tipsGetDark(0x0F);
1330   1              
1331   1      #if(DEBUG_LOGOUT_EN == 1)                               
1332   1              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1333   2                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1334   2                      sprintf(log_buf, "devHold start right now.\n");
1335   2                      PrintString1_logOut(log_buf);
1336   2              }
1337   1      #endif  
1338   1      }
1339          
1340          /*Éè±¸ÍøÂç¹ÒÆğÍ£Ö¹£¬Ê¹ÌáÇ°½áÊø*/
1341          void devHoldStop_makeInAdvance(void){ //Í£Ö¹Éè±¸ÍøÂç¹ÒÆğ£¨ÌáÇ°£©
1342   1      
1343   1              if(devNwkHoldTime_Param.devHoldTime_counter)devNwkHoldTime_Param.devHoldTime_counter = 0;
1344   1      }
1345          
1346          /*zigbeeÉè±¸ÍøÂç¹ÒÆğ×´Ì¬»ú*///·Ç×èÈû
1347          static 
1348          void function_devNwkHold(void){
1349   1              
1350   1              static status_Step = 0; //µ±Ç°×´Ì¬»ú²½Öè×´Ì¬Ö¸Ê¾
1351   1              
1352   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1353   2              
1354   2                      devStatus_switch.statusChange_IF = 0;
1355   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1356   2                      
1357   2                      status_Step = 0;
1358   2                      zigbNwkAction_counter = 0;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 24  

1359   2                      
1360   2                      zigbPin_RESET = 1;
1361   2                      
1362   2                      return;
1363   2              }
1364   1              
1365   1              if(devNwkHoldTime_Param.devHoldTime_counter){ //Ö±µ½¹ÒÆğÊ±¼ä½áÊø
1366   2              
1367   2                      if(devNwkHoldTime_Param.zigbNwkSystemNote_IF){ //Í¨Öªµ±Ç°ÍøÂçÄÚ×ÓÉè±¸¹ÒÆğ,±¨Ò»´Î
1368   3                              
1369   3                              u8 xdata dats_Note[3] = {ZIGB_SYSCMD_DEVHOLD, 1, 0}; //ÃüÁî¡¢Êı¾İ³¤¶È¡¢Êı¾İ
1370   3                      
1371   3                              devNwkHoldTime_Param.zigbNwkSystemNote_IF = 0; //Í¨ÖªÊ¹ÄÜ¸´Î»
1372   3                              
1373   3                              dataSendRemote_straightforward( 0xFFFF, //¹ã²¥Í¨ÖªÍøÄÚËùÓĞ×ÓÉè±¸¹ÒÆğ
1374   3                                                                                              ZIGB_ENDPOINT_CTRLSYSZIGB,
1375   3                                                                                              dats_Note,
1376   3                                                                                              3 );
1377   3                              
1378   3                              delayMs(50); //±ØĞèÑÓÊ±£¬·ñÔòÊı¾İ»¹Ã»·¢ËÍ³öÈ¥£¬¾ÍÅÜµ½ÏÂÒ»²½¸´Î»ÁË
1379   3                      }
1380   2                      
1381   2                      { //Éè±¸¹ÒÆğ,Ñ­»·¸´Î»
1382   3                              
1383   3                              switch(status_Step){
1384   4                              
1385   4                                      case 0:{ //¸´Î»200ms
1386   5                                      
1387   5                                              zigbPin_RESET = 0;
1388   5                                              zigbNwkAction_counter = 200;
1389   5                                              status_Step = 1;
1390   5                                      
1391   5                                      }break;
1392   4                                              
1393   4                                      case 1:{ //Ã¿6s¸´Î»Ò»´Î
1394   5                                      
1395   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1396   6                                              
1397   6                                                      zigbPin_RESET = 1;
1398   6                                                      zigbNwkAction_counter = 6000;
1399   6                                                      status_Step = 2;
1400   6                                              }
1401   5                                      
1402   5                                      }break;
1403   4                                      
1404   4                                      case 2:{
1405   5                                      
1406   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1407   6                                              
1408   6                                                      status_Step = 0;
1409   6                                                      
1410   6      #if(DEBUG_LOGOUT_EN == 1)                               
1411   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1412   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1413   7                                                              sprintf(log_buf, "devHold time count remind: %02d s.\n", (int)devNwkHoldTime_Param.devHoldTime_coun
             -ter);
1414   7                                                              PrintString1_logOut(log_buf);
1415   7                                                      }
1416   6      #endif
1417   6                                              }
1418   5                                      
1419   5                                      }break;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 25  

1420   4                                      
1421   4                                      default:{
1422   5                                              
1423   5                                              status_Step = 0;
1424   5                                              
1425   5                                      }break;
1426   4                              }
1427   3                      }
1428   2      
1429   2              }else{
1430   2              
1431   2                      //¹ÒÆğÊ±¼ä½áÊø,Ö÷×´Ì¬»Ö¸´ÖÁÖØÁ¬£¬±¾µØ×´Ì¬»Ö¸´
1432   2                      status_Step = 0;
1433   2                      zigbPin_RESET = 1;
1434   2                      
1435   2                      devRunning_Status = status_nwkReconnect; //Ö±½Ó½«Ö÷×´Ì¬ÇĞ»»ÖÁÍøÂçÖØÁ¬,²»×ßstandbyÁ÷³Ì
1436   2                      devTips_status = status_Normal; //tips¸ü±ä
1437   2              
1438   2      #if(DEBUG_LOGOUT_EN == 1)                               
1439   2                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1440   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1441   3                              sprintf(log_buf, "devHold stop.\n");
1442   3                              PrintString1_logOut(log_buf);
1443   3                      }
1444   2      #endif  
1445   2              }
1446   1      }
1447          
1448          /*zigbee¼¯Èº¿ØÖÆÊı¾İ½âÎö*/
1449          static 
1450          void dataParing_scenarioCtrl(u8 datsFrame[]){
1451   1      
1452   1              u8 dataTX_temp = CTRLSECENARIO_RESPCMD_SPECIAL;
1453   1              
1454   1              swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
1455   1              swCommand_fromUsr.actMethod = relay_OnOff;
1456   1              
1457   1              colonyCtrlGet_statusLocalScene = datsFrame[0]; //±¾µØ³¡¾°¿ØÖÆÂÖÑ¯Öµ¸üĞÂ(³¡¾°¿ØÖÆ½öÀ´×ÔÓÚÊÖ»ú¿ØÖÆ)
1458   1              
1459   1              dataSendRemote_straightforward(0, ZIGB_ENDPOINT_CTRLSECENARIO, &dataTX_temp, 1); //³¡¾°¿ØÖÆÔ¶¶Ë»Ø¸´
1460   1              
1461   1      #if(DEBUG_LOGOUT_EN == 1)
1462   1              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1463   2                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1464   2                      sprintf(log_buf, "cmdScenarioCtrl comming, statusData:%02X.\n", (int)datsFrame[0]);
1465   2                      PrintString1_logOut(log_buf);
1466   2              }                       
1467   1      #endif          
1468   1      }
1469          
1470          /*zigbeeÏµÍ³½»»¥Êı¾İ½âÎö*/
1471          static 
1472          void dataParing_zigbSysCtrl(u8 datsFrame[]){
1473   1      
1474   1              /*>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<*/
1475   1              /*----------------------------------------------*/
1476   1              /*  frame_CMD   |       frame_dataLen|  frame_data      |
1477   1              /*----------------------------------------------*/
1478   1              /*      1byte           |       1byte            |      < 256byte       |       
1479   1              /*----------------------------------------------*/
1480   1              
1481   1              frame_zigbSysCtrl xdata dats = {0};
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 26  

1482   1              
1483   1              dats.command = datsFrame[0];
1484   1              memcpy(dats.dats, &datsFrame[2], datsFrame[1]);
1485   1              dats.datsLen = datsFrame[1];
1486   1              
1487   1              switch(dats.command){
1488   2              
1489   2                      case ZIGB_SYSCMD_NWKOPEN:{ //ÍøÂç¿ª·Å
1490   3                              
1491   3                              bit resultSet = 0;
1492   3                              
1493   3                              resultSet = ZigB_nwkOpen(1, dats.dats[0]); //¹¦ÄÜ´¥·¢
1494   3                              tips_statusChangeToZigbNwkOpen(dats.dats[0]); //tips´¥·¢
1495   3                              
1496   3      #if(DEBUG_LOGOUT_EN == 1)
1497   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1498   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1499   4                                      sprintf(log_buf, "master cmdComing:nwkOpen:%02ds.\n", (int)dats.dats[0]);
1500   4                                      PrintString1_logOut(log_buf);
1501   4                              }                       
1502   3      #endif          
1503   3                              
1504   3                      }break;
1505   2                      
1506   2                      case ZIGB_SYSCMD_TIMESET:{ //ÏµÍ³Ê±¼äÉè¶¨
1507   3                      
1508   3                              bit resultSet = 0;
1509   3                              bit timeZoneAdjust_needIF = 0;
1510   3                              u32 time_Temp = 0UL;
1511   3                              
1512   3                              time_Temp |= (u32)dats.dats[0] << 0;
1513   3                              time_Temp |= (u32)dats.dats[1] << 8;
1514   3                              time_Temp |= (u32)dats.dats[2] << 16;
1515   3                              time_Temp |= (u32)dats.dats[3] << 24;
1516   3                              if((sysTimeZone_H != dats.dats[4]) || (sysTimeZone_M != dats.dats[5])){ //Ê±ÇøÍ¬²½
1517   4                              
1518   4                                      sysTimeZone_H = dats.dats[4];
1519   4                                      sysTimeZone_M = dats.dats[5];
1520   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1521   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
1522   4                              }
1523   3                              
1524   3                              if(dats.dats[6])timeZoneAdjust_needIF = 1; //Ê±Çø²¹³¥Ê¹ÄÜÅĞ¶Ï
1525   3                              if(time_Temp > ZIGB_UTCTIME_START)resultSet = zigB_sysTimeSet(time_Temp - ZIGB_UTCTIME_START, timeZoneA
             -djust_needIF); //zigbee ±¾µØÏµÍ³Ê±¼äÉèÖÃ<UTC¸º²¹³¥>
1526   3                              
1527   3      #if(DEBUG_LOGOUT_EN == 1)
1528   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1529   4                                      u8 xdata log_buf[64];
1530   4                                      
1531   4                                      sprintf(log_buf, "master UTC coming:[0x%02X%02X%02X%02X].\n", (int)dats.dats[3], (int)dats.dats[2], (i
             -nt)dats.dats[1], (int)dats.dats[0]);
1532   4                                      PrintString1_logOut(log_buf);
1533   4                              }                       
1534   3      #endif  
1535   3                      }break;
1536   2                      
1537   2                      case ZIGB_SYSCMD_DEVHOLD:{ //ÍøÂç¹ÒÆğ£¨ÓÃ×÷Íø¹ØÇĞ»»£©
1538   3                              
1539   3      #if(DEBUG_LOGOUT_EN == 1)
1540   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1541   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 27  

1542   4                                      sprintf(log_buf, "node cmdComing:devNwk hold.\n");
1543   4                                      PrintString1_logOut(log_buf);
1544   4                              }                       
1545   3      #endif  
1546   3                              devStatusChangeTo_devHold(0); //Éè±¸ÍøÂç±»¶¯¹ÒÆğ,²»½øĞĞÍøÂçÍ¨Öª
1547   3                              
1548   3                      }break;
1549   2                      
1550   2                      case ZIGB_SYSCMD_DATATRANS_HOLD:{ //Í¨ĞÅÖ÷¶¯±ÜÕÏ£¬½«ÖÜÆÚĞÔÍ¨ĞÅ¹ÒÆğ
1551   3                              
1552   3      #if(DEBUG_LOGOUT_EN == 1)
1553   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1554   4                                      u8 xdata log_buf[64];
1555   4                                      
1556   4                                      sprintf(log_buf, "master cmd: dtPeriod hold, time:%d.\n", (int)dats.dats[0]);
1557   4                                      PrintString1_logOut(log_buf);
1558   4                              }                       
1559   3      #endif  
1560   3                              if(!heartBeatHang_timeCnt && !colonyCtrlGetHang_timeCnt){ //ÓĞĞ§ÖÜÆÚÄÚ£¬¸¨Öú²¹³ä¹ã²¥Ò»´Î£¬·ÀÖ¹ÆäËû½ÚµãÃ
             -»ÊÕµ½
1561   4                                      
1562   4      //                              PrintString1_logOut("dtPeriod hold one more time.\n");
1563   4      //                              dataSendRemote_straightforward(0xffff, ZIGB_ENDPOINT_CTRLSYSZIGB, datsFrame, datsFrame[1] + 2);
1564   4                                      
1565   4                              }else{
1566   4                              
1567   4      //#if(DEBUG_LOGOUT_EN == 1)
1568   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1569   4      //                                      u8 xdata log_buf[64];
1570   4      //                                      
1571   4      //                                      sprintf(log_buf, "dtPeriod holdAdd err, parm1: %d, parm2: %d.\n", (int)heartBeatHang_timeCnt, (int)
             -colonyCtrlGetHang_timeCnt);
1572   4      //                                      PrintString1_logOut(log_buf);
1573   4      //                              }                       
1574   4      //#endif        
1575   4                              }
1576   3                              
1577   3                              periodDataTrans_momentHang(dats.dats[0]);  //±ÜÕÏÊ±¼ä¼ÓÔØ£¬¶¯×÷Ö´ĞĞ
1578   3                              
1579   3                      }break;
1580   2      
1581   2      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                              case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ¹ÄÜ*///¸üĞÂ¼¯ÈºĞÅÏ¢²¢¶¯×÷
                              
                                      /*>>>>>>>>>>>>>>>>>>>frame_data reference<<<<<<<<<<<<<<<*/
                                      /*------------------------------------------------------*/
                                      /*  frame_data[0]                       |       frame_data[1...3]               |
                                      /*------------------------------------------------------*/
                                      /*      ×î½üÒ»´Î³¡¾°¿ØÖÆ×´Ì¬Öµ  |       ×î½üÒ»´Î»¥¿Ø¸üĞÂ×´Ì¬Öµ  |
                                      /*------------------------------------------------------*/
                                      
                                      u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
                                      
              //#if(DEBUG_LOGOUT_EN == 1)
              //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
              //                                      u8 xdata log_buf[64];
              //                                      
              //                                      sprintf(log_buf, "curRealy_Val:%02X, dataQuery result:%02X %02X %02X %02X.\n",
              //                                                                       (int)status_Relay,
              //                                                                       (int)dats.dats[0],
              //                                                                       (int)dats.dats[1],
              //                                                                       (int)dats.dats[2],
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 28  

              //                                                                       (int)dats.dats[3]);
              //                                      PrintString1_logOut(log_buf);
              //                              }                       
              //#endif                
                                      if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ scene detect from poling.\n");
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              
                                              //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              colonyCtrlGet_statusLocalScene = dats.dats[0];
                                              
                                              if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
                                              }
                                      }
                                      
                                      if(memcmp(&dats.dats[1], colonyCtrlGet_statusLocalEaCtrl, clusterNum_usr)){ //»¥¿Ø×´Ì¬ÖµÖµÂÖÑ¯¸üĞÂ
                                              
                                              u8 idata loop;
                                              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ eachCtrl detect from poling, currentVal is: %02X %02X %02X.\n", (int)colonyC
             -trlGet_statusLocalEaCtrl[0],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[1],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[2]);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif
                                              //ÉÏÒ»´Î»¥¿ØÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              memcpy(colonyCtrlGet_statusLocalEaCtrl, &dats.dats[1], clusterNum_usr);
                                              
                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //ÑÚÂëÅĞ¶Ï²Ù×÷Î»£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_ON)statusRelay_temp |= (
             -1 << loop);
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_OFF)statusRelay_temp &= 
             -~(1 << loop);
                                                      
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = statusRelay_temp;
                                              }
                                      }
                                      
                              }break;
              #else /*ºêÅĞÖĞ*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1654   2                      case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ§ÄÜ*///½ö½ÓÊÕ³¡¾°¿ØÖÆĞÅÏ¢²¢¶¯×÷
1655   3                      
1656   3                              u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
1657   3                              
1658   3                              if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
1659   4                              
1660   4      #if(DEBUG_LOGOUT_EN == 1)
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 29  

1661   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1662   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1663   5                                              sprintf(log_buf, "differ scene detect from poling.\n");
1664   5                                              PrintString1_logOut(log_buf);
1665   5                                      }                       
1666   4      #endif  
1667   4                                      
1668   4                                      //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
1669   4                                      colonyCtrlGet_statusLocalScene = dats.dats[0];
1670   4                                      
1671   4                                      if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
1672   5                                      
1673   5                                              swCommand_fromUsr.actMethod = relay_OnOff;
1674   5                                              swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
1675   5                                      }
1676   4                              }
1677   3                              
1678   3                      }break;
1679   2      #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1680   2                      default:break;
1681   2              }
1682   1      }
1683          
1684          /*zigbee³£¹æ¿ØÖÆ×ª·¢Êı¾İ½âÎö*/
1685          static 
1686          void dataParing_Nomal(u8 datsParam[], u16 nwkAddr_from, u8 port_from){
1687   1              
1688   1      #define dataLen_dataParingNomal (128 + 25)
1689   1              u8 xdata paramTX_temp[dataLen_dataParingNomal] = {0};
1690   1              
1691   1              bit dataFromRemote_IF = 0;      //ÊÇ·ñÎª·şÎñÆ÷¶ËÊı¾İ±êÖ¾
1692   1      
1693   1              /*²úÆ·¶ş¼¶Ğ­ÒéºË¶Ô_³£¹æ¿ØÖÆ*///¿ØÖÆÏÂ´ï
1694   1              switch(datsParam[0]){
1695   2              
1696   2                      /*Ô¶¶Ë*/
1697   2                      case ZIGB_FRAMEHEAD_CTRLREMOTE:{
1698   3                              
1699   3                              dataFromRemote_IF = 1;
1700   3                              
1701   3                              memcpy(MAC_ID_DST, &datsParam[7], 6);
1702   3                              memcpy(&datsParam[1], &datsParam[13], datsRcv_ZIGB.rcvDats[20] - 13);
1703   3                      }
1704   2                      
1705   2                      /*±¾µØ*/
1706   2                      case ZIGB_FRAMEHEAD_CTRLLOCAL:{
1707   3                              
1708   3                              bit frameCheck_Done = 0; //Êı¾İ¼ì²âºÏ¸ñ±êÖ¾
1709   3                              
1710   3                              {
1711   4                                      bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
1712   4                                      bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
1713   4                                      
1714   4                                      if(datsParam[4] == frame_Check(&datsParam[5], 28))frameCodeCheck_PASS = 1; //Ğ£ÑéÂë¼ì²â
1715   4                                      if(!memcmp(&datsParam[5], &MAC_ID[1], 5))frameMacCheck_PASS = 1; //MAC¼ì²â
1716   4      
1717   4                                      if(datsParam[3] == FRAME_MtoZIGBCMD_cmdConfigSearch){ //ÌØÊâÖ¸Áî²»×öMAC¼ì²â
1718   5                                      
1719   5                                              frameMacCheck_PASS = 1;
1720   5                                              
1721   5                                      }else
1722   4                                      if((datsParam[3] == FRAME_MtoZIGBCMD_cmdCfg_swTim) || //ÌØÊâÖ¸Áî²»×öĞ£ÑéÂë¼ì²â
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 30  

1723   4                                         (datsParam[3] == FRAME_MtoZIGBCMD_cmdswTimQuery)){
1724   5                                         
1725   5                                              frameCodeCheck_PASS = 1;
1726   5                                      }
1727   4                                         
1728   4                                      if(frameCodeCheck_PASS && frameCodeCheck_PASS)frameCheck_Done = 1;
1729   4                              }
1730   3                                 
1731   3                              if(frameCheck_Done){ //Ö¡¼ì²éÍ¨¹ı£¬¿ªÊ¼½âÎö¡¢¶¯×÷¼°ÏìÓ¦
1732   4                                      
1733   4                                      bit respond_IF          = 0;    //ÊÇ·ñ»Ø¸´
1734   4                                      bit specialCmd_IF       = 0;    //ÊÇ·ñÎªÌØÊâÖ¸Áî£¨ÌØÊâÖ¸ÁîÕ¼ÓÃ¿ª¹ØÀàĞÍÄÇÒ»¸ö×Ö½Ú£©
1735   4                                      
1736   4      #if(DEBUG_LOGOUT_EN == 1)
1737   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1738   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1739   5                                              sprintf(log_buf, "cmdComing:%02X.\n", (int)datsParam[3]);
1740   5                                              PrintString1_logOut(log_buf);
1741   5                                      }                       
1742   4      #endif          
1743   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_dataParingNomal);
1744   4                              
1745   4                                      switch(datsParam[3]){
1746   5                                      
1747   5                                              case FRAME_MtoZIGBCMD_cmdConfigSearch:{
1748   6                                                      
1749   6                                                      if(!deviceLock_flag){ //Éè±¸ÊÇ·ñÉÏËø
1750   7                                                              
1751   7                                                              tips_statusChangeToNormal();
1752   7                                                              if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //´¥ÃşÊÍ·Å¼ÆÊ±Ê§ÄÜ
1753   7                                                              
1754   7                                                              paramTX_temp[11] = status_Relay; //¿ª¹Ø×´Ì¬»Ø¸´Ìî×°
1755   7                                                              paramTX_temp[12] = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
1756   7                                                              
1757   7                                                              paramTX_temp[14] = (u8)((dev_currentPanid & 0xFF00) >> 8); //ÍøÂçPANID»Ø¸´Ìî×°
1758   7                                                              paramTX_temp[15] = (u8)((dev_currentPanid & 0x00FF) >> 0);
1759   7                                                              
1760   7                                                              sysTimeZone_H = datsParam[12];
1761   7                                                              sysTimeZone_M = datsParam[13];
1762   7                                                              coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1763   7                                                              coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
1764   7                                                              
1765   7                                                              periodDataTrans_momentHang(10); //½ÓÊÕµ½ËÑË÷Âëºó ½«ÆäËûÖÜÆÚÖ÷¶¯·¢ÂëÍ¨ĞÅ½øĞĞ±ÜÈÃ ÎªËÑË÷ÏìÓ¦ÇåÂ· 10s
1766   7                                                      
1767   7                                                              respond_IF              = 1; //ÏìÓ¦»Ø¸´
1768   7                                                              specialCmd_IF   = 0;
1769   7                                                              
1770   7                                                      }else{
1771   7                                                      
1772   7                                                              
1773   7                                                      }
1774   6                                                      
1775   6                                              }break;
1776   5                                              
1777   5                                              case FRAME_MtoZIGBCMD_cmdControl:{
1778   6      
1779   6                                                      paramTX_temp[11] = 0;
1780   6                                                      paramTX_temp[11] |= (datsParam[11] & 0x07);     //×´Ì¬Î»Ìî×°
1781   6                                                      if(             (datsParam[11] & 0x01) != (status_Relay & 0x01))paramTX_temp[11] |= 0x20; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ»>µ
             -ÚÒ»Î»
1782   6                                                      else if((datsParam[11] & 0x02) != (status_Relay & 0x02))paramTX_temp[11] |= 0x40; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚ¶şÎ»
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 31  

1783   6                                                      else if((datsParam[11] & 0x04) != (status_Relay & 0x04))paramTX_temp[11] |= 0x80; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚÈıÎ»
1784   6                                                      
1785   6                                                      swCommand_fromUsr.objRelay = datsParam[11];
1786   6                                                      swCommand_fromUsr.actMethod = relay_OnOff;
1787   6      
1788   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1789   6                                                      specialCmd_IF   = 0;                                                    
1790   6                                                      
1791   6                                              }break;
1792   5                                                      
1793   5                                              case FRAME_MtoZIGBCMD_cmdQuery:{
1794   6                                              
1795   6                                                      paramTX_temp[11] = status_Relay & 0x07;
1796   6                                                      paramTX_temp[12] = 0;
1797   6                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1798   6                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1799   6                                                      
1800   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1801   6                                                      specialCmd_IF   = 0;    
1802   6                                              
1803   6                                              }break;
1804   5                                                      
1805   5                                              case FRAME_MtoZIGBCMD_cmdInterface:{}break;
1806   5                                                      
1807   5                                              case FRAME_MtoZIGBCMD_cmdReset:{}break;
1808   5                                                      
1809   5                                              case FRAME_MtoZIGBCMD_cmdDevLockON:{
1810   6                                              
1811   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1812   6                                                      {
1813   7                                                              u8 deviceLock_IF = 1;
1814   7                                                              
1815   7                                                              deviceLock_flag  = 1;
1816   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1817   7                                                      }               
1818   6                                                      
1819   6                                              }break;
1820   5                                                      
1821   5                                              case FRAME_MtoZIGBCMD_cmdDevLockOFF:{
1822   6                                              
1823   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1824   6                                                      {
1825   7                                                              u8 deviceLock_IF = 0;
1826   7                                                              
1827   7                                                              deviceLock_flag  = 0;
1828   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1829   7                                                      }       
1830   6                                              
1831   6                                              }break;
1832   5                                                      
1833   5                                              case FRAME_MtoZIGBCMD_cmdswTimQuery:{
1834   6                                              
1835   6                                                      //·ÖÀà»Ø¸´
1836   6                                                      switch(datsParam[13]){ //×ÓÃüÁî½âÎö
1837   7                                                      
1838   7                                                              case 0: /*ÉÏÎ»»úÔÚ¶¨Ê±µÄÊ±ºò¸ø0£¬´ıĞ­ÉÌ*/
1839   7                                                              case cmdConfigTim_normalSwConfig:{
1840   8                                                              
1841   8                                                                      u8 loop = 0;
1842   8                                                              
1843   8                                                                      //Êı¾İÏìÓ¦¼°»Ø¸´
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 32  

1844   8                                                                      EEPROM_read_n(EEPROM_ADDR_swTimeTab, &paramTX_temp[14], 12);    //¶¨Ê±±í»Ø¸´Ìî×°
1845   8                                                                      
1846   8                                                                      //»Ø¸´Êı¾İ¶ş´Î´¦Àí£¨Õë¶ÔÒ»´ÎĞÔ¶¨Ê±Êı¾İ£©
1847   8                                                                      for(loop = 0; loop < 4; loop ++){
1848   9                                                                      
1849   9                                                                              if(swTim_oneShoot_FLAG & (1 << loop)){
1850  10                                                                                      
1851  10                                                                                      paramTX_temp[14 + loop * 3] &= 0x80;
1852  10                                                                              }
1853   9                                                                      }
1854   8                                                                                      
1855   8                                                                      specialCmd_IF = 1; //ÌØÊâÕ¼Î»Ö¸Áî
1856   8                                                                      
1857   8      #if(DEBUG_LOGOUT_EN == 1)
1858   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1859   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1860   9                                                                              sprintf(log_buf, ">>>>>>>>timer_tab3 respond:[%02X-%02X-%02X].\n", (int)paramTX_temp[20], (int)pa
             -ramTX_temp[21], (int)paramTX_temp[22]);
1861   9                                                                              PrintString1_logOut(log_buf);
1862   9                                                                      }                       
1863   8      #endif  
1864   8                                                                      
1865   8                                                              }break;
1866   7                                                              
1867   7                                                              case cmdConfigTim_onoffDelaySwConfig:{
1868   8                                                              
1869   8                                                                      if(!delayCnt_onoff)paramTX_temp[14] = 0;
1870   8                                                                      else paramTX_temp[14] = delayPeriod_onoff - (u8)(delayCnt_onoff / 60);
1871   8                                                                      paramTX_temp[15] = delayUp_act;
1872   8                                                                      
1873   8                                                              }break;
1874   7                                                              
1875   7                                                              case cmdConfigTim_closeLoopSwConfig:{
1876   8                                                              
1877   8                                                                      paramTX_temp[14] = delayPeriod_closeLoop;
1878   8                                                                      
1879   8                                                              }break;
1880   7                                                              
1881   7                                                              case cmdConfigTim_nightModeSwConfig:{  
1882   8                                                              
1883   8                                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &paramTX_temp[14], 6);      //Ò¹¼äÄ£Ê½¶¨Ê±±í»Ø¸´Ìî×°
1884   8                                                                      
1885   8                                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1886   8                                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1887   8                                                                      
1888   8                                                              }break;
1889   7                                                              
1890   7                                                              default:break;
1891   7                                                      }
1892   6                                                      
1893   6                                                      paramTX_temp[13] = datsParam[13]; //¶¨Ê±×ÓÃüÁîÍ¬²½»Ø¸´
1894   6                                                      
1895   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1896   6                                                      
1897   6                                              }break;
1898   5                                                      
1899   5                                              case FRAME_MtoZIGBCMD_cmdConfigAP:{}break;
1900   5                                                      
1901   5                                              case FRAME_MtoZIGBCMD_cmdBeepsON:{ //Ò¹¼äÄ£Ê½¹Ø
1902   6                                              
1903   6                                                      u8 datsTemp = 0;
1904   6                                                      
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 33  

1905   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1906   6                                                      datsTemp &= ~0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,È¡ÏûÍ·×Ö½ÚÈ«Õ¼Âú,Ê§ÄÜÈ«Ìì
1907   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1908   6                                                      
1909   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1910   6                                                      
1911   6                                              }break;
1912   5                                                      
1913   5                                              case FRAME_MtoZIGBCMD_cmdBeepsOFF:{ //Ò¹¼äÄ£Ê½¿ª
1914   6                                              
1915   6                                                      u8 datsTemp = 0;
1916   6                                                      
1917   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1918   6                                                      datsTemp |= 0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,Í·×Ö½ÚÈ«Õ¼Âú,Ç¿ÖÆÈ«Ìì
1919   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);        
1920   6                                                      
1921   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1922   6                                                      
1923   6                                              }break;
1924   5                                                      
1925   5                                              case FRAME_MtoZIGBCMD_cmdftRecoverRQ:{
1926   6                                              
1927   6                                                      respond_IF = 1;
1928   6                                                      
1929   6                                              }break;
1930   5                                                      
1931   5                                              case FRAME_MtoZIGBCMD_cmdRecoverFactory:{
1932   6                                              
1933   6                                                      Factory_recover();
1934   6                                              
1935   6                                              }break;
1936   5                                                      
1937   5                                              case FRAME_MtoZIGBCMD_cmdCfg_swTim:{
1938   6                                                      
1939   6                                                      u8 loop = 0;
1940   6                                                      
1941   6                                                      switch(datsParam[13]){ //¶¨Ê±Êı¾İ´¦Àí¼°¸üĞÂ,·ÖÀà´¦Àí
1942   7                                                      
1943   7                                                              case cmdConfigTim_normalSwConfig:{      /*ÆÕÍ¨¶¨Ê±*/
1944   8                                                                      
1945   8                                                                      for(loop = 0; loop < 4; loop ++){
1946   9                                                                      
1947   9                                                                              if(datsParam[14 + loop * 3] == 0x80){   /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±»´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞ
             -Ô
1948  10                                                                              
1949  10                                                                                      swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
1950  10                                                                                      datsParam[14 + loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½øĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´
             -ÎÖ´ĞĞÍê±ÏºóÇå³ı
1951  10                                                                                      
1952  10                                                                              }else{
1953  10                                                                              
1954  10                                                                                      swTim_oneShoot_FLAG &= ~(1 << loop);//Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
1955  10                                                                              }
1956   9                                                                      }
1957   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, &datsParam[14], 4 * 3);      //¶¨Ê±±í
1958   8                                                                      itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
1959   8      #if(DEBUG_LOGOUT_EN == 1)
1960   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1961   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1962   9                                                                              sprintf(log_buf, ">>>>>>>>timer_tab3 has been set:[%02X-%02X-%02X].\n", (int)datsParam[20], (int)
             -datsParam[21], (int)datsParam[22]);
1963   9                                                                              PrintString1_logOut(log_buf);
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 34  

1964   9                                                                      }                       
1965   8      #endif  
1966   8                                                              
1967   8                                                              }break;
1968   7                                                              
1969   7                                                              case cmdConfigTim_onoffDelaySwConfig:{  /*¿ª¹ØÑÓÊ±*/
1970   8                                                              
1971   8                                                                      if(datsParam[14]){
1972   9                                                                      
1973   9                                                                              ifDelay_sw_running_FLAG |= (1 << 1);
1974   9                                                                              delayPeriod_onoff               = datsParam[14];
1975   9                                                                              
1976   9                                                                              delayUp_act                             = datsParam[15];
1977   9                                                                              
1978   9                                                                              delayCnt_onoff                  = 0;
1979   9                                                                              
1980   9                                                                      }else{
1981   9                                                                      
1982   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 1);
1983   9                                                                              delayPeriod_onoff               = 0;
1984   9                                                                              delayCnt_onoff                  = 0;
1985   9                                                                      }
1986   8                                                                      
1987   8                                                              }break;
1988   7                                                              
1989   7                                                              case cmdConfigTim_closeLoopSwConfig:{   /*ÂÌÉ«¹¦ÄÜ(×Ô¶¯Ñ­»·¹Ø±Õ)*/
1990   8                                                              
1991   8                                                                      if(datsParam[14]){
1992   9                                                                      
1993   9                                                                              ifDelay_sw_running_FLAG |= (1 << 0);
1994   9                                                                              delayPeriod_closeLoop   = datsParam[14];
1995   9                                                                              delayCnt_closeLoop              = 0;
1996   9                                                                              
1997   9                                                                      }else{
1998   9                                                                      
1999   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 0);
2000   9                                                                              delayPeriod_closeLoop   = 0;
2001   9                                                                              delayCnt_closeLoop              = 0;
2002   9                                                                      }
2003   8                                                                      
2004   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1);
2005   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2006   8                                                                      
2007   8                                                              }break;         
2008   7      
2009   7                                                              case cmdConfigTim_nightModeSwConfig:{  /*Ò¹¼äÄ£Ê½ ±³¹â°ëÁÁ*/
2010   8                                                              
2011   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsParam[14], 6);   //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢
2012   8                                                                      itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2013   8                                                                      
2014   8                                                              }break;
2015   7                                                              
2016   7                                                              default:break;
2017   7                                                      }
2018   6                                                      
2019   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2020   6                                                      
2021   6                                              }break;
2022   5                                              
2023   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ctrlEachO:{
2024   6                                              
2025   6                                                      u8 loop = 0;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 35  

2026   6                                                      u8 effective_oprate = datsParam[12]; //ÓĞĞ§²Ù×÷Êı¾İÕ¼Î»»ñÈ¡
2027   6                                                      
2028   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2029   7                                                      
2030   7                                                              if((effective_oprate >> loop) & 0x01){ //ÓĞĞ§Êı¾İÅĞ¶Ï
2031   8                                                              
2032   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &datsParam[14 + loop], 1);
2033   8                                                                      CTRLEATHER_PORT[loop] = datsParam[14 + loop];
2034   8                                                                      reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2035   8                                                              }
2036   7                                                      }
2037   6                                                      
2038   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2039   6                                              
2040   6                                              }break;
2041   5                                              
2042   5                                              case FRAME_MtoZIGBCMD_cmdQue_ctrlEachO:{
2043   6                                              
2044   6                                                      u8 loop = 0;
2045   6                                                      
2046   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2047   7                                                      
2048   7                                                              EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther + loop, &paramTX_temp[14 + loop], 1);
2049   7                                                      }
2050   6                                                      
2051   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2052   6                                              
2053   6                                              }break;
2054   5                                                      
2055   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ledBackSet:{
2056   6                                              
2057   6                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, &datsParam[14], 1);
2058   6                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround + 1, &datsParam[15], 1);
2059   6                                                      tipsInsert_swLedBKG_ON  = datsParam[14];
2060   6                                                      tipsInsert_swLedBKG_OFF = datsParam[15];
2061   6                                                      
2062   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2063   6                                              
2064   6                                              }break;
2065   5                                              
2066   5                                              case FRAME_MtoZIGBCMD_cmdQue_ledBackSet:{
2067   6                                              
2068   6                                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround, &paramTX_temp[14], 1);
2069   6                                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround + 1, &paramTX_temp[15], 1);
2070   6                                                      
2071   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2072   6                                              
2073   6                                              }break;
2074   5                                              
2075   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioSet:{
2076   5      //                                              
2077   5      //                                              u16 xdata panid_Temp = ZigB_getPanIDCurrent(); //ÅäÖÃ»Ø¸´Ìí¼ÓPANID
2078   5      //                                      
2079   5      //                                              bit opt_result = swScenario_oprateSave(datsParam[12], datsParam[14]);
2080   5      //                                              if(opt_result)paramTX_temp[12] = 0;
2081   5      //                                              else paramTX_temp[12] = 0x0A; //³¡¾°ÉèÖÃÎŞĞ§»Ø¸´£¨³¡¾°´æ´¢ÒÑÂú£©
2082   5      //                                              
2083   5      //                                              paramTX_temp[14] = (u8)((panid_Temp & 0xFF00) >> 8);
2084   5      //                                              paramTX_temp[15] = (u8)((panid_Temp & 0x00FF) >> 0);
2085   5      //                                              
2086   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ£¨±¾µØ´æ´¢ÒÑ±»Õ¼Âú£©
2087   5      //                                      
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 36  

2088   5      //                                      }break;
2089   5      //                                      
2090   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioCtl:{
2091   5      //                                              
2092   5      //                                              u8 sw_Act = swScenario_oprateCheck(datsParam[12]);
2093   5      //                                              if(sw_Act != SW_SCENCRAIO_ACTINVALID){ //ÈôË÷Òıµ½ÓĞĞ§²Ù×÷Î»
2094   5      //                                                      
2095   5      //                                                      swCommand_fromUsr.actMethod = relay_OnOff;
2096   5      //                                                      swCommand_fromUsr.objRelay = sw_Act;
2097   5      //                                              
2098   5      //                                                      paramTX_temp[12] = 0;
2099   5      //                                                      
2100   5      //                                              }else{ //ÈôÎŞ·¨Ë÷Òıµ½ÓĞĞ§²Ù×÷Î»
2101   5      //                                              
2102   5      //                                                      paramTX_temp[12] = 0x0A; //³¡¾°¿ØÖÆÎŞĞ§»Ø¸´£¨³¡¾°ºÅÎŞ·¨±»Ë÷Òı£©
2103   5      //                                              }
2104   5      //                                      
2105   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2106   5      //                                      
2107   5      //                                      }break;
2108   5      //                                      
2109   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioDel:{
2110   5      //                                              
2111   5      //                                              swScenario_oprateDele(datsParam[12]);
2112   5      //                                              paramTX_temp[12] = 0;
2113   5      //                                      
2114   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2115   5      //                                      
2116   5      //                                      }break;
2117   5                                              
2118   5                                              default:{
2119   6                                              
2120   6                                                      respond_IF = 0;
2121   6                                              
2122   6                                              }break;
2123   5                                      }
2124   4                                      
2125   4                                      /*»Ø¸´ÏìÓ¦*/
2126   4                                      if(respond_IF){ //Êı¾İ°ü»Ø¸´ÏìÓ¦¶¯×÷
2127   5                                      
2128   5                                              u8 datsTX_Len = 0;
2129   5                                              
2130   5                                              respond_IF = 0;
2131   5                                              
2132   5                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
2133   5                                                                                                                 paramTX_temp,
2134   5                                                                                                                 33,
2135   5                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
2136   5                                                                                                                 datsParam[3],
2137   5                                                                                                                 specialCmd_IF);
2138   5                                              
2139   5                                              heartBeatCount += 1; //ÑÓÊ±ĞÔĞ­µ÷ĞÄÌøÖÍºó 1s
2140   5                                              
2141   5                                              datsSend_request.nwkAddr = nwkAddr_from;
2142   5                                              datsSend_request.portPoint = port_from;
2143   5                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
2144   5                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
2145   5                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
2146   5                                              datsRcv_respond.datsTrans.datsLen = 0;
2147   5                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
2148   5                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 8; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆ
             -ÚÄÚ ·¢ 8 ´Î
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 37  

2149   5                                              devRunning_Status = status_dataTransRequestDatsSend;
2150   5                                              
2151   5      //#if(DEBUG_LOGOUT_EN == 1)
2152   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2153   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2154   5      //                                              sprintf(log_buf, ">>>>>>>>standby dataTX_buf_tab3:[%02X-%02X-%02X].\n", (int)datsSend_request.dats
             -Trans.dats[20], (int)datsSend_request.datsTrans.dats[21], (int)datsSend_request.datsTrans.dats[22]);
2155   5      //                                              PrintString1_logOut(log_buf);
2156   5      //                                      }                       
2157   5      //#endif        
2158   5                                      }
2159   4                              }
2160   3                      }break;
2161   2                      
2162   2                      /*ĞÄÌø_Íø¹ØÔÚÏß*/
2163   2                      case ZIGB_FRAMEHEAD_HEARTBEAT:{
2164   3                      
2165   3                              
2166   3                              
2167   3                      }break;
2168   2                      
2169   2                      /*ĞÄÌø_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2170   2                      case ZIGB_FRAMEHEAD_HBOFFLINE:{
2171   3                      
2172   3                              
2173   3                              
2174   3                      }break;
2175   2                      
2176   2      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) /*ºêÅĞÍ·*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2177   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2178   2                      case DTMODEKEEPACESS_FRAMEHEAD_OFFLINE:{
2179   3                              
2180   3                              periodDataTrans_momentHang(6); //internetÀëÏßÇé¿öÏÂ£¬ÖÜÆÚÍ¨Ñ¶¾ÍÃ»ÓÃÁË£¬Í¨ĞÅÆµ´ÎÏÂ½µµ½ 6s/´Î
2181   3      #if(DEBUG_LOGOUT_EN == 1)
2182   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2183   4                                      
2184   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2185   4                                      sprintf(log_buf, ">>>>>>>>internet offline.\n");
2186   4                                      PrintString1_logOut(log_buf);
2187   4                              }       
2188   3      #endif
2189   3                      } /*²»×öbreak*///internetÀëÏßÇé¿öÏÂ£¬Êı¾İ°ü»Ø·¢¸ø×ÓÉè±¸£¬·ÀÖ¹×ÓÉè±¸×öÎŞÒâÒåĞÄÌøÖØ·¢
2190   2                      
2191   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÔÚÏß*/
2192   2                      case DTMODEKEEPACESS_FRAMEHEAD_ONLINE:{
2193   3                      
2194   3                              stt_agingDataSet_bitHold code   agingCmd_Temp = {0};
2195   3                              stt_devOpreatDataPonit xdata    dev_dataPointTemp = {0};
2196   3                              
2197   3                              bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
2198   3                              bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
2199   3                              
2200   3      //#if(DEBUG_LOGOUT_EN == 1)
2201   3      //                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2202   3      //                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2203   3      //                              sprintf(log_buf, "periodKeepAcess respondRcv, cmd[%02X], dataLen[%02d].\n", (int)datsParam[8], (int)
             -datsParam[1]);
2204   3      //                              PrintString1_logOut(log_buf);
2205   3      //                      }                       
2206   3      //#endif        
2207   3                              
2208   3                              if(datsParam[datsParam[1] - 1] == frame_Check(&datsParam[1], datsParam[1] - 2))frameCodeCheck_PASS = 1;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 38  

2209   3                              if(!memcmp(&datsParam[2], &MAC_ID[1], 5))frameMacCheck_PASS = 1;
2210   3                              
2211   3                              if(frameCodeCheck_PASS && frameMacCheck_PASS){ 
2212   4                      
2213   4                                      memcpy(&dev_dataPointTemp, &datsParam[15], sizeof(stt_devOpreatDataPonit)); //Êı¾İ½á¹¹»¯
2214   4                                      
2215   4      //#if(DEBUG_LOGOUT_EN == 1)
2216   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2217   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2218   4      //                                      sprintf(log_buf, "agingCmd[%02X], swAging[%d], val[%02X].\n", (int)datsParam[8],
2219   4      //                                                                                                                                                                (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat, 
2220   4      //                                                                                                                                                                (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2221   4      //                                      PrintString1_logOut(log_buf);
2222   4      //                              }                       
2223   4      //#endif        
2224   4                              
2225   4                                      switch(datsParam[8]){ //Ö¡ÃüÁî
2226   5                                      
2227   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
2228   6                                                      
2229   6                                                      static bit local_ftyRecover_standbyFLG = 0; //»Ö¸´³ö³§ÉèÖÃ²Ù×÷Ô¤¶¯×÷±êÖ¾
2230   6                                      
2231   6                                                      /*·ÇÊ±Ğ§ĞÔÃüÁîÅĞ¶Ï*///Êı¾İ²»Ò»ÖÂÊ±£¬¸üĞÂ»º´æºóÖ´ĞĞ¶¯×÷¼´¿É£¨·ÇÊ±Ğ§ÔòÃ¿´Î»ñÈ¡Êı¾İÊ±¶¼ÒªÓë±¾µØÊı¾İ×÷±È
             -½Ï£©
2232   6      //                                              { //ÆÕÍ¨¿ª¹Ø²Ù×÷£¬ÎŞĞèÊ±Ğ§
2233   6      //                                              
2234   6      //                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2235   6      //                                                      
2236   6      //                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2237   6      //                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2238   6      //                                                              
2239   6      //#if(DEBUG_LOGOUT_EN == 1)
2240   6      //                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2241   6      //                                                                      
2242   6      //                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2243   6      //                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x0
             -7, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2244   6      //                                                                      PrintString1_logOut(log_buf);
2245   6      //                                                              }                       
2246   6      //#endif        
2247   6      //                                                      }
2248   6      //                                              }
2249   6                                                      
2250   6      //                                              { //¿ª¹Ø¶¨Ê±²Ù×÷£¬ÎŞĞèÊ±Ğ§
2251   6      //                                              
2252   6      //                                                      timing_Dats xdata timDatsTemp_CalibrateTab[TIMEER_TABLENGTH] = {0};
2253   6      //                                                      
2254   6      //                                                      datsTiming_read_eeprom(timDatsTemp_CalibrateTab);
2255   6      //                                                      if(memcmp(timDatsTemp_CalibrateTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) * TIMEER
             -_TABLENGTH)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2256   6      //                                                      
2257   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) 
             -* TIMEER_TABLENGTH);
2258   6      //                                                      }
2259   6      //                                              }
2260   6                                                      
2261   6      //                                              { //ÂÌÉ«Ä£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2262   6      //                                              
2263   6      //                                                      if(delayPeriod_closeLoop != dev_dataPointTemp.devData_greenMode){
2264   6      //                                                      
2265   6      //                                                              
2266   6      //                                                      }
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 39  

2267   6      //                                              }
2268   6                                                      
2269   6      //                                              { //Ò¹¼äÄ£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2270   6      //                                                      
2271   6      //                                                      timing_Dats xdata nightDatsTemp_CalibrateTab[2];
2272   6      //                                                      
2273   6      //                                                      datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
2274   6      //                                                      if(memcmp(nightDatsTemp_CalibrateTab, dev_dataPointTemp.devData_nightMode, sizeof(timing_Dats) * 
             -2)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2275   6      //                                                      
2276   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dev_dataPointTemp.devData_nightMode, sizeof(ti
             -ming_Dats) * 2);
2277   6      //                                                      }       
2278   6      //                                              }
2279   6                                                      
2280   6      //                                              { //±³¹âµÆÉèÖÃ²Ù×÷£¬ÎŞĞèÊ±Ğ§
2281   6      //                                              
2282   6      //                                                      if(tipsInsert_swLedBKG_ON != dev_dataPointTemp.devData_bkLight[0]){ //¿ªÉ«
2283   6      //                                                      
2284   6      //                                                              
2285   6      //                                                      }
2286   6      //                                                      
2287   6      //                                                      if(tipsInsert_swLedBKG_OFF != dev_dataPointTemp.devData_bkLight[1]){ //¹ØÉ«
2288   6      //                                                      
2289   6      //                                                              
2290   6      //                                                      }
2291   6      //                                              }
2292   6                                                      
2293   6                                                      /*Ê±Ğ§ĞÔÃüÁîÅĞ¶Ï*///¸üĞÂÊ±Ğ§²Ù×÷ºó£¬Çå¿ÕÊ±Ğ§²Ù×÷Î»£¨Ê±Ğ§ÊÇÎªÁË½ÚÔ¼ĞÔÄÜ²»ÓÃÃ¿´Î²éÑ¯Ê±¶¼×÷±È½Ï£©
2294   6                                                      if(memcmp(&agingCmd_Temp, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_agingDataSet_
             -bitHold))){ //Ò»µ©ÓĞÊ±Ğ§Ö¸ÁîÎ»ÖÃ 1 £¬Ö»ÒªÓĞÊ±Ğ§Õ¼Î»£¬¾ÍÔ­Î»»Ø·¢
2295   7                                                              
2296   7                                                              heartBeatCount = PERIOD_HEARTBEAT_ASR; //ÓĞÊ±Ğ§¿ØÖÆ£¬Ç¿ĞĞÌáÇ°ĞÄÌøÁ¢¼´»ØÂë
2297   7                                                              
2298   7                                                              beeps_usrActive(3, 50, 1);
2299   7                                                              
2300   7                                                              memcpy(&dev_agingCmd_rcvPassive, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_aging
             -DataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬ÓÃÓÚÔ­Î»»Ø·¢
2301   7                                                      
2302   7                                                              /*Ê±Ğ§²Ù×÷½âÎö*/                
2303   7      
2304   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat){ //¿ª¹Ø×´Ì¬²Ù×÷£¬ĞèÒªÊ±Ğ§
2305   8                                                                      
2306   8      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                                                                              
                                                                              if(status_Relay != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){
                                                                              
                                                                                      swCommand_fromUsr.objRelay = datsParam[21]; //Õû×Ö½Ú±íÊ¾ÁÁ¶È
                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                              
                                                                                      if((SWITCH_TYPE == SWITCH_TYPE_SWBIT1) || //¶àÎ»¿ª¹Ø²Å´æÔÚÍÆËÍ
                                                                                         (SWITCH_TYPE == SWITCH_TYPE_SWBIT2) ||
                                                                                         (SWITCH_TYPE == SWITCH_TYPE_SWBIT3)){
              
                                                                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
                                                                                      }
                                                                                              
               #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay, (int)
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 40  

             -datsParam[21]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }                       
               #endif 
                                                                              }
              #else
2330   8                                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2331   9                                                                      
2332   9                                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2333   9                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2334   9                                                                              
2335   9                                                                              devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
2336   9       #if(DEBUG_LOGOUT_EN == 1)
2337   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2338  10                                                                                      
2339  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2340  10                                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x07
             -, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2341  10                                                                                      PrintString1_logOut(log_buf);
2342  10                                                                              }                       
2343   9       #endif 
2344   9                                                                      }
2345   8      #endif
2346   8                                                              }
2347   7                                                              
2348   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_delaySetOpreat){ //ÑÓÊ±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±
             -Ğ§
2349   8                              
2350   8                                                                      if(dev_dataPointTemp.devData_delayer){ //ÑÓÊ±Ê±¼ä´óÓÚ0¾ÍÊÇ¿ª
2351   9                                                                      
2352   9                                                                              ifDelay_sw_running_FLAG |= (1 << 1); //ÑÓÊ±±êÖ¾¸üĞÂ£¬Æô¶¯
2353   9                                                                              delayPeriod_onoff               = dev_dataPointTemp.devData_delayer; //ÑÓÊ±Ê±¼ä
2354   9                                                                              delayUp_act                             = dev_dataPointTemp.devData_delayUpStatus; //ÑÓÊ±µ½´ïÊ±£¬¿ª¹ØÏìÓ¦×´Ì¬
2355   9                                                                              delayCnt_onoff                  = 0; //ÑÓÊ±¼ÆÊıÇåÁã
2356   9      #if(DEBUG_LOGOUT_EN == 1)
2357   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2358  10                                                                                      
2359  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2360  10                                                                                      sprintf(log_buf, ">>>>>>>>delayPeriod:[%d], delayUpAct:[%02X].\n", (int)delayPeriod_onoff, (int)
             -delayUp_act);
2361  10                                                                                      PrintString1_logOut(log_buf);
2362  10                                                                              }                       
2363   9      #endif  
2364   9                                                                              
2365   9                                                                      }else{
2366   9                                                                      
2367   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 0); //ÑÓÊ±±êÖ¾¸üĞÂ
2368   9                                                                              delayPeriod_onoff               = 0; 
2369   9                                                                              delayCnt_onoff                  = 0; 
2370   9                                                                      }
2371   8                                                              }
2372   7                                                              
2373   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devResetOpreat){ //³ö³§ÉèÖÃ¸´Î»¶¯×÷£¬Ğè
             -ÒªÊ±Ğ§
2374   8                                                                      
2375   8                                                                      local_ftyRecover_standbyFLG = 1; //½ÓÊÕµ½»Ö¸´³ö³§¶¯×÷ºó£¬½«»Ö¸´³ö³§ÉèÖÃ¶¯×÷½øĞĞ¾ÍĞ÷Ì¬¼ÇÂ¼£¬µÈ´ıÊ±Ğ
             -§±êÖ¾ÖÃÁãºóÔÙ½øĞĞÊµ¼Ê¶¯×÷                                     
2376   8      #if(DEBUG_LOGOUT_EN == 1)
2377   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2378   9                                                      
2379   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2380   9                                                                              sprintf(log_buf, ">>>>>>>>factory recover standBy!.\n");
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 41  

2381   9                                                                              PrintString1_logOut(log_buf);
2382   9                                                                      }                       
2383   8      #endif          
2384   8                                                              }
2385   7                                                              
2386   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devLock){ //Éè±¸ËøÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2387   8                                                              
2388   8                                                                      u8 deviceLock_IF = 0; //²Ù×÷×Ö½Ú»º´æ
2389   8                                                                      
2390   8      #if(DEBUG_LOGOUT_EN == 1)
2391   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2392   9                                                                              
2393   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2394   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd devLock coming, lockIf:[%d].\n", (int)dev_dataPointTemp.devSta
             -tus_Reference.statusRef_devLock);
2395   9                                                                              PrintString1_logOut(log_buf);
2396   9                                                                      }                       
2397   8      #endif  
2398   8                                                                      
2399   8                                                                      if(dev_dataPointTemp.devStatus_Reference.statusRef_devLock){ //Êı¾İ·ÅÔÚ×´Ì¬Àï
2400   9                                                                      
2401   9                                                                              deviceLock_flag = deviceLock_IF = 1; //ÔËĞĞ»º´æ¸üĞÂ
2402   9                                                                              
2403   9                                                                      }else{
2404   9                                                                      
2405   9                                                                              deviceLock_flag = deviceLock_IF = 0; //ÔËĞĞ»º´æ¸üĞÂ
2406   9                                                                      }
2407   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2408   8                                                              }
2409   7                                                              
2410   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_timerSetOpreat){ //¶¨Ê±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±
             -Ğ§
2411   8                                                                      
2412   8                                                                      u8 loop = 0;
2413   8      #if(DEBUG_LOGOUT_EN == 1)
2414   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2415   9                                                                              
2416   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2417   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd timer coming, dataTab1:[%02X-%02X-%02X].\n", (int)dev_dataPoin
             -tTemp.devData_timer[0],
2418   9                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_timer[1],
2419   9                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_timer[2]);
2420   9                                                                              PrintString1_logOut(log_buf);
2421   9                                                                      }                       
2422   8      #endif  
2423   8                                                                      for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //ÔËĞĞ»º´æ¸üĞÂ
2424   9                                                                      
2425   9                                                                              if(dev_dataPointTemp.devData_timer[loop * 3] == 0x80){  /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±»
             -´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞÔ
2426  10                                                                              
2427  10                                                                                      swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
2428  10                                                                                      dev_dataPointTemp.devData_timer[loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½ø
             -ĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´ÎÖ´ĞĞÍê±ÏºóÇå³ı
2429  10                                                                                      
2430  10                                                                              }else{
2431  10                                                                              
2432  10                                                                                      swTim_oneShoot_FLAG &= ~(1 << loop); //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
2433  10                                                                              }
2434   9                                                                      }
2435   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) * 
             -TIMEER_TABLENGTH); //Ö±½Ó¸üĞÂeepromÊı¾İ
2436   8                                                                      itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 42  

2437   8                                                              }
2438   7                                                              
2439   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_greenModeSetOpreat){ //ÂÌÉ«Ä£Ê½ÉèÖÃ²Ù×÷
             -£¬ĞèÒªÊ±Ğ§
2440   8                                                                      
2441   8      #if(DEBUG_LOGOUT_EN == 1)
2442   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2443   9                                                                              
2444   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2445   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd greenMode coming, timeSet:%d.\n", (int)dev_dataPointTemp.devDa
             -ta_greenMode);
2446   9                                                                              PrintString1_logOut(log_buf);
2447   9                                                                      }                       
2448   8      #endif  
2449   8              
2450   8                                                                      (dev_dataPointTemp.devData_greenMode)?(ifDelay_sw_running_FLAG |= (1 << 0)):(ifDelay_sw_running_FL
             -AG &= ~(1 << 0)); //¸üĞÂÔËĞĞ»º´æ
2451   8                                                                      delayPeriod_closeLoop = dev_dataPointTemp.devData_greenMode;
2452   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2453   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2454   8                                                              }
2455   7                                                              
2456   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_nightModeSetOpreat){ //Ò¹¼äÄ£Ê½ÉèÖÃ²Ù×÷
             -£¬ĞèÒªÊ±Ğ§
2457   8                                                                      
2458   8                                                                      u8 dataTemp[sizeof(timing_Dats) * 2] = {0};
2459   8      #if(DEBUG_LOGOUT_EN == 1)
2460   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2461   9                                                                              
2462   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2463   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd nightMode coming with dats:[%02X %02X %02X", (int)dev_dataPoin
             -tTemp.devData_nightMode[0],
2464   9                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[1],
2465   9                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[2]);
2466   9                                                                              PrintString1_logOut(log_buf);
2467   9                                                                                                                                                                                                                                              
2468   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2469   9                                                                              sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_dataPointTemp.devData_nightMode[3],
2470   9                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[4],
2471   9                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[5]);
2472   9                                                                              PrintString1_logOut(log_buf);
2473   9                                                                      }                       
2474   8      #endif  
2475   8                                                                      (dev_dataPointTemp.devData_nightMode[0])?(dataTemp[0] |= 0x7f):(dataTemp[0] &= ~0x7f); //È«ÌìÒ¹¼ä
2476   8                                                                      (dev_dataPointTemp.devData_nightMode[1])?(dataTemp[0] |= 0x80):(dataTemp[0] &= ~0x80); //Ê±¶ÎÒ¹¼ä
2477   8                                                                      dataTemp[1] = dev_dataPointTemp.devData_nightMode[2]; //×Ö½ÚÏÂ±ê2 µÍ5Î» Ê±
2478   8                                                                      dataTemp[2] = dev_dataPointTemp.devData_nightMode[3]; //×Ö½ÚÏÂ±ê3 È«8Î» ·Ö
2479   8                                                                      dataTemp[4] = dev_dataPointTemp.devData_nightMode[4]; //×Ö½ÚÏÂ±ê4 µÍ5Î» Ê±
2480   8                                                                      dataTemp[5] = dev_dataPointTemp.devData_nightMode[5]; //×Ö½ÚÏÂ±ê5 È«8Î» ·Ö
2481   8                                                                      
2482   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dataTemp, sizeof(timing_Dats) * 2); //Ö±½Ó¸üĞÂee
             -promÊı¾İ
2483   8                                                                      itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2484   8                                                              }
2485   7                                                              
2486   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_bkLightSetOpreat){ //±³¹âµÆÉèÖÃ²Ù×÷£¬Ğè
             -ÒªÊ±Ğ§
2487   8                                                                      
2488   8      #if(DEBUG_LOGOUT_EN == 1)
2489   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2490   9                                                                              
2491   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 43  

2492   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd bkLight coming, on-Isrt:%02d, off-Isrt:%02d.\n", (int)dev_data
             -PointTemp.devData_bkLight[0], (int)dev_dataPointTemp.devData_bkLight[1]);
2493   9                                                                              PrintString1_logOut(log_buf);
2494   9                                                                      }                       
2495   8      #endif  
2496   8                                                              
2497   8                                                                      tipsInsert_swLedBKG_ON  = dev_dataPointTemp.devData_bkLight[0]; //¸üĞÂÔËĞĞ»º´æ
2498   8                                                                      tipsInsert_swLedBKG_OFF = dev_dataPointTemp.devData_bkLight[1]; //Ö±½Ó¸üĞÂeepromÊı¾İ
2499   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, dev_dataPointTemp.devData_bkLight, 2);
2500   8                                                              }
2501   7                                                              
2502   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_horsingLight){ //ÅÜÂíµÆÉèÖÃ²Ù×÷£¬ĞèÒªÊ±
             -Ğ§
2503   8                                                              
2504   8      #if(DEBUG_LOGOUT_EN == 1)
2505   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2506   9                                                                              
2507   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2508   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd horsingLight coming, opreatData:%02X.\n", (int)dev_dataPointTe
             -mp.devStatus_Reference.statusRef_horsingLight);
2509   9                                                                              PrintString1_logOut(log_buf);
2510   9                                                                      }       
2511   8      #endif  
2512   8                                                                      
2513   8                                                                      ifHorsingLight_running_FLAG = dev_dataPointTemp.devStatus_Reference.statusRef_horsingLight;
2514   8                                                                      if(ifHorsingLight_running_FLAG)counter_ifTipsFree = 0;
2515   8                                                                      else tips_statusChangeToNormal();
2516   8                                                              }
2517   7                                                              
2518   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat){ //¿ª¹ØÎ»»¥¿Ø°ó
             -¶¨²Ù×÷ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2519   8                                                              
2520   8                                                                      u8 xdata loop = 0;
2521   8      #if(DEBUG_LOGOUT_EN == 1)
2522   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2523   9                                                                              
2524   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2525   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd switchBindSet coming, opreatBitHold:%02X bindData:%02X %02X %0
             -2X.\n", (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat,
2526   9                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[0], 
2527   9                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[1], 
2528   9                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[2]);
2529   9                                                                              PrintString1_logOut(log_buf);
2530   9                                                                      }       
2531   8      #endif  
2532   8                                                                      
2533   8                                                                      for(loop = 0; loop < 3; loop ++){
2534   9                                                                      
2535   9                                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat & (1 << loop))
             -{
2536  10                                                                              
2537  10                                                                                      coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &dev_dataPointTemp.devData_switchBitBi
             -nd[loop], 1);
2538  10                                                                                      CTRLEATHER_PORT[loop] = dev_dataPointTemp.devData_switchBitBind[loop];
2539  10                                                                              }
2540   9                                                                      }
2541   8                                                                      
2542   8                                                                      reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2543   8                                                              }
2544   7                                                              
2545   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_curtainOpPeriodSetOpreat){ //´°Á±¹ìµÀÖÜ
             -ÆÚÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 44  

2546   8                                                              
2547   8      #if(DEBUG_LOGOUT_EN == 1)
2548   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2549   9                                                                              
2550   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2551   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd curtainOrbitalSet coming, valSet:%d .\n", (int)dev_dataPointTe
             -mp.union_devParam.curtain_param.orbital_Period);
2552   9                                                                              PrintString1_logOut(log_buf);
2553   9                                                                      }       
2554   8      #endif  
2555   8                                                                      curtainAct_Param.act_period = dev_dataPointTemp.union_devParam.curtain_param.orbital_Period;
2556   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_curtainOrbitalPeriod, &(curtainAct_Param.act_period), 1);
2557   8                                                                      if(!curtainAct_Param.act_period)curtainAct_Param.act_period = 240;
2558   8                                                                      else
2559   8                                                                      if(curtainAct_Param.act_period == 0xff)curtainAct_Param.act_period = 10;
2560   8                                                              }
2561   7                                                      
2562   7                                                      }else{
2563   7                                                      
2564   7                                                              memset(&dev_agingCmd_rcvPassive, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2565   7                                                              
2566   7                                                              if(local_ftyRecover_standbyFLG){ //µ±Ê±Ğ§±êÖ¾ÖÃÁãºó²ÅÖ´ĞĞ»Ö¸´³ö³§¶¯×÷£¬·ñÔòÉÏÎ»»ú»áÒ»Ö±ÍùÏÂ·¢¸´Î»
2567   8                                                                      
2568   8      #if(DEBUG_LOGOUT_EN == 1)
2569   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2570   9                                                                              
2571   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2572   9                                                                              sprintf(log_buf, ">>>>>>>>factory recover doing now!.\n");
2573   9                                                                              PrintString1_logOut(log_buf);
2574   9                                                                      }                       
2575   8      #endif  
2576   8                                                                      local_ftyRecover_standbyFLG = 0;
2577   8                                                                      Factory_recover();
2578   8                                                              }
2579   7                                                      }
2580   6                                                      
2581   6                                              }break;
2582   5                                                      
2583   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
2584   6                                                      
2585   6                                                      if(memcmp(&dev_agingCmd_sndInitative, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_a
             -gingDataSet_bitHold))){ //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬Ê±Ğ§Õ¼Î»Óë±¾µØ²»Ò»ÖÂ Ñ¯·ÃÃüÁî¾ÍÒ»Ö±ÎªÖ÷¶¯
2586   7                                                      
2587   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
2588   7                                                              
2589   7                                                      }else{
2590   7                                                      
2591   7                                                              heartBeatPeriod = PERIOD_HEARTBEAT_ASR; //ÇĞ»»Îª±»¶¯Ñ¯·Ã£¬ĞÄÌøÖÜÆÚ¸ÄÎª±»¶¯
2592   7                                                              memset(&dev_agingCmd_sndInitative, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2593   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR;
2594   7                                                      }
2595   6                                                      
2596   6                                              }break;
2597   5                                                      
2598   5                                              default:{}break;
2599   5                                      }
2600   4                              }
2601   3                              
2602   3                      }break;
2603   2      
2604   2      #endif /*ºêÅĞÎ²*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2605   2                      
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 45  

2606   2                      default:{}break;
2607   2              }
2608   1      }
2609          
2610          /*»Ö¸´³ö³§Ô¤ÖÃ¶¯×÷*/
2611          void fun_factoryRecoverOpreat(void){
2612   1      
2613   1              devStatus_switch.statusChange_standBy = status_devFactoryRecoverStandBy;
2614   1              devStatus_switch.statusChange_IF = 1;
2615   1              
2616   1              factoryRecover_HoldTimeCount = 6;
2617   1              factoryRecover_standBy_FLG = 1;
2618   1              tips_statusChangeToFactoryRecover(6);
2619   1      }
2620          
2621          /*zigbeeÖ÷Ïß³Ì*///¶¯×÷×èÈû´óÓÚ200msµÄº¯Êı¶¼ÉèÎª×´Ì¬»úÔËĞĞ£¬ÆäËüĞ¡ÓÚ200msº¯Êı£¬×èÈûÎ¬³Ö£¬·ñÔò×´Ì¬»ú¸´ÔÓ¶È¼Ó
             -´ó
2622          void thread_dataTrans(void){
2623   1              
2624   1              u8 code cmd_datsComing[2] = {0x44, 0x81}; //Ô¶¶ËÊı¾İÖ¡Ö¸Áî
2625   1              u8 code cmd_nwkOpenNote[2] = {0x45, 0xCB}; //ÍøÂç¿ª·ÅÍ¨Öª
2626   1      
2627   1      #define dataLen_zigbDatsTrans (128 + 25)
2628   1              u8 xdata paramTX_temp[dataLen_zigbDatsTrans] = {0};
2629   1              u8 xdata paramRX_temp[dataLen_zigbDatsTrans] = {0};
2630   1              
2631   1              static bit heartBeat_cmdFLG = 0; //ĞÄÌøÆæÅ¼±êÖ¾
2632   1              
2633   1              /*zigbÖ÷Ïß³ÌÏµÍ³Ê±¼ä¸üĞÂ*/
2634   1              if(!sysTimeReales_counter){ 
2635   2              
2636   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES;
2637   2                      getSystemTime_reales();
2638   2              }
2639   1              
2640   1              /*zigbÖ÷Ïß³Ì×´Ì¬»ú£º¸ù¾İ×´Ì¬±êÖ¾ÔËĞĞ*/
2641   1              switch(devRunning_Status){
2642   2              
2643   2                      case status_passiveDataRcv:{
2644   3                              
2645   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
2646   4                              
2647   4                                      devStatus_switch.statusChange_IF = 0;
2648   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
2649   4                                      
2650   4                                      break;
2651   4                              }
2652   3                              
2653   3                              {/*³õÊ¼»¯Ê±¼ä¸³Öµ*///½ö¿ª»ú¸³ÖµÒ»´Î£¬²»×öÊ±Çøµ÷Õû
2654   4                                      static bit FLG_timeSetInit = 1;
2655   4                                      
2656   4                                      if(FLG_timeSetInit){
2657   5                                      
2658   5                                              FLG_timeSetInit = 0;
2659   5                                              zigB_sysTimeSet(1533810700UL - 946713600UL, 0); //zigbeeÊ±¼ä´Á´Óunix¼ÍÔª946713600<2000/01/01 00:00:00
             ->¿ªÊ¼¼ÆËã
2660   5                                              
2661   5                                              dev_currentPanid = ZigB_getPanIDCurrent(); //¿ª»úºó»ñÈ¡Ò»´ÎPINID
2662   5      #if(DEBUG_LOGOUT_EN == 1)
2663   5                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2664   6                                                      
2665   6                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 46  

2666   6                                                      sprintf(log_buf, "currentPain get is :%04X.\n", dev_currentPanid);
2667   6                                                      PrintString1_logOut(log_buf);
2668   6                                              }       
2669   5      #endif
2670   5                                      }
2671   4                              }
2672   3                              
2673   3                              if(devTips_status == status_tipsNwkFind)tips_statusChangeToNormal(); //tips¸´Ô­(ÍøÂçÒÑ¼ÓÈë£¬»Ö¸´Õı³£tip
             -s)
2674   3                              
2675   3                              {/*Íø¹ØÖ÷»ú¶ªÊ§¼ì²â*///¼´Ê±¸üĞÂtips
2676   4                              
2677   4                                      if(!timeCounter_coordinatorLost_detecting)devTips_nwkZigb = nwkZigb_outLine; //Íø¹Ø¶ªÊ§tipsÓëµôÏßtipsÅ
             -ĞÎªÒ»Àà
2678   4                              }
2679   3                              
2680   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ³ÖĞø·¢ËÍ»úÖÆÖ´ĞĞ£¨ÎŞÊÓ»ØÂë£©-------------------------
             ----//Ö÷ÒªÓÃÓÚÕë¶Ô»¥¿ØÒµÎñ
2681   3                              {
2682   4                                      
2683   4                                      u16 code DTREQ_EXATTR_ONCEPERIOD = 251; //µ¥´Î·¢ËÍ¼ä¸ôÊ±¼ä¶¨Òå µ¥Î»£ºms
2684   4                                      u16 idata constandLoop_reserve = datsSend_requestEx[0].constant_Loop + datsSend_requestEx[1].constant_
             -Loop + datsSend_requestEx[2].constant_Loop;
2685   4                                      
2686   4                                      if(constandLoop_reserve){
2687   5                                      
2688   5                                              if(!dtReqEx_counter){
2689   6                                              
2690   6                                                      u16 idata current_Insert = constandLoop_reserve % 3; //´ÎĞòÂÖÁ÷
2691   6                                                      
2692   6      #if(DEBUG_LOGOUT_EN == 1)
2693   6                                                      if((constandLoop_reserve % 3) == 0){ //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä(3¸öloop´òÓ¡Ò»´Î
             -)
2694   7                                                              
2695   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2696   7                                                              sprintf(log_buf, ">>>dtCtrlEach loopParam:%d %d %d.\n", (int)datsSend_requestEx[0].constant_Loop,
2697   7                                                                                                                                                                              (int)datsSend_requestEx[1].constant_Loop,
2698   7                                                                                                                                                                              (int)datsSend_requestEx[2].constant_Loop);
2699   7                                                              PrintString1_logOut(log_buf);
2700   7                                                      }       
2701   6      #endif
2702   6                                                      
2703   6                                                      while(!datsSend_requestEx[current_Insert].constant_Loop){ //´ÎĞòÂÖÁ÷Ç°ÌáÏÂ£¬É¸Ñ¡¿ÉÓÃ
2704   7                                                      
2705   7                                                              current_Insert ++;
2706   7                                                              current_Insert %= 3;
2707   7                                                      }
2708   6                                                      
2709   6                                                      datsSend_requestEx[current_Insert].constant_Loop --;
2710   6                                                      
2711   6                                                      datsSend_requestEx[current_Insert].dats[1] = datsSend_requestEx[current_Insert].constant_Loop; //ÊµÊ
             -±¸üĞÂ³ÖĞø·¢ËÍÊ£Óà´ÎÊıÖµ
2712   6                                                      dataSendRemote_straightforward(datsSend_requestEx[current_Insert].nwkAddr, datsSend_requestEx[curren
             -t_Insert].portPoint, datsSend_requestEx[current_Insert].dats, datsSend_requestEx[current_Insert].datsLen);
2713   6                                                      
2714   6                                                      dtReqEx_counter = DTREQ_EXATTR_ONCEPERIOD;
2715   6                                              }
2716   5                                      }
2717   4                              }
2718   3              
2719   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºĞÄÌø-----------------------------------------------------
             ----//
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 47  

2720   3                              if(heartBeatCycle_FLG && !heartBeatHang_timeCnt){ //ĞÄÌø´¥·¢±êÖ¾ ¼° ¹ÒÆğÊ±¼ä ÅĞ¶Ï
2721   4                                      
2722   4                                      u8 xdata frame_dataLen = 0; //´ı·¢ËÍÊı¾İÖ¡³¤¶È
2723   4                              
2724   4                                      heartBeatCycle_FLG = 0;
2725   4                                      heartBeat_cmdFLG = !heartBeat_cmdFLG;
2726   4                                      
2727   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
2728   4                                      
2729   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              frame_dataLen = 14;
                                              paramTX_temp[0] = ZIGB_FRAMEHEAD_HEARTBEAT;
                                              paramTX_temp[1] = frame_dataLen ;
                                              (heartBeat_cmdFLG)?(paramTX_temp[2] = FRAME_HEARTBEAT_cmdOdd):(paramTX_temp[2] = FRAME_HEARTBEAT_cmdEv
             -en);
                                              memcpy(&paramTX_temp[4], &MAC_ID[1], 5);
                                              
                                              if(heartBeat_cmdFLG){ //Ææ°ü
                                              
                                                      
                                              
                                              }else{ //Å¼°ü
                                              
                                                      
                                              }
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS)  //ĞÂÖÜÆÚÑ¯·Ã»úÖÆÑ¯·ÃÖÜÆÚ
2746   4                                      
2747   4                                      //×´Ì¬Ìî×°-ÊµÊ±Öµ
2748   4      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                      
                                              //Õû×Ö½ÚÌîÖµ
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = (status_Relay & 0x07) >> 0;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_reserve              = (status_Relay & 0x18) >> 3;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush               = (status_Relay & 0xE0) >> 5;
                                              
              #elif((SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SWBIT1) || (SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SWBIT2) || (SWI
             -TCH_TYPE_FORCEDEF == SWITCH_TYPE_SWBIT3)) //¶àÎ»¿ª¹Ø¸ßÎ»ÍÆËÍÇø·Ö
                                              
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İµã ¿ª¹Ø
             -×´Ì¬¸üĞÂ
                                              if(devActionPush_IF.push_IF){ //ÍÆËÍÊı¾İ¼ÓÔØ
                                              
                                                      devActionPush_IF.push_IF = 0;
                                                      dev_currentDataPoint.devStatus_Reference.statusRef_swPush = 0;
                                                      dev_currentDataPoint.devStatus_Reference.statusRef_swPush |= devActionPush_IF.dats_Push;
                                              }
                                                                      
              #else //ÆäËû¿ª¹ØÃ»ÓĞ¸ßÎ»ÍÆËÍÇø·Ö
2766   4                                      //Ö»×°×´Ì¬£¬±¾Éí¾ÍÊÇÍÆËÍ£¬ÆäËüÖµ¸ø0
2767   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay;
2768   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_reserve              = 0;
2769   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swPush               = 0;
2770   4                                      
2771   4      #endif
2772   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_timer                = ifTim_sw_running_FLAG; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İ
             -µã ¶¨Ê±Æ÷×´Ì¬¸üĞÂ
2773   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_devLock              = deviceLock_flag;
2774   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_delay                = (ifDelay_sw_running_FLAG & 0x02) >> 1;
2775   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_greenMode    = (ifDelay_sw_running_FLAG & 0x01) >> 0;
2776   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_nightMode    = ifNightMode_sw_running_FLAG;
2777   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_horsingLight = ifHorsingLight_running_FLAG;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 48  

2778   4                                      
2779   4                                      //ÊôĞÔÖµÌî×°-ÊµÊ±Öµ
2780   4                                      {
2781   5                                              u8 xdata loop = 0;
2782   5                                              EEPROM_read_n(EEPROM_ADDR_swTimeTab, &dev_currentDataPoint.devData_timer, sizeof(timing_Dats) * TIMEE
             -R_TABLENGTH); //¶¨Ê±Êı¾İ
2783   5                                              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //Ò»´ÎĞÔÖÜÕ¼Î»»Ö¸´
2784   6                                              
2785   6                                                      if(swTim_oneShoot_FLAG & (1 << loop))dev_currentDataPoint.devData_timer[3 * loop] = 0x80; //Õë¶ÔÒ»´Î
             -ĞÔ¶¨Ê±»ØÂëÖÜÕ¼Î»Çå¿Õ
2786   6                                              }
2787   5                                      }
2788   4                                      dev_currentDataPoint.devData_delayer            = delayPeriod_onoff - (delayCnt_onoff / 60); //ÑÓÊ±Êı¾İ
2789   4                                      dev_currentDataPoint.devData_delayUpStatus      = delayUp_act; //ÑÓÊ±ÏìÓ¦×´Ì¬Êı¾İ
2790   4                                      dev_currentDataPoint.devData_greenMode          = delayPeriod_closeLoop; //ÂÌÉ«Ä£Ê½×´Ì¬Êı¾İ
2791   4                                      { //Ò¹¼äÄ£Ê½Êı¾İÌØÊâ×ª»»
2792   5                                              
2793   5                                              timing_Dats xdata nightDatsTemp_CalibrateTab[2] = {0};
2794   5                                              
2795   5                                              datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
2796   5                                              ((nightDatsTemp_CalibrateTab[0].Week_Num & 0x7F) == 0x7F)?(dev_currentDataPoint.devData_nightMode[0] 
             -= 1):(dev_currentDataPoint.devData_nightMode[0] = 0);
2797   5                                              (nightDatsTemp_CalibrateTab[0].if_Timing)?(dev_currentDataPoint.devData_nightMode[1] = 1):(dev_curren
             -tDataPoint.devData_nightMode[1] = 0);
2798   5                                              dev_currentDataPoint.devData_nightMode[2] = nightDatsTemp_CalibrateTab[0].Hour;
2799   5                                              dev_currentDataPoint.devData_nightMode[3] = nightDatsTemp_CalibrateTab[0].Minute;
2800   5                                              dev_currentDataPoint.devData_nightMode[4] = nightDatsTemp_CalibrateTab[1].Hour;
2801   5                                              dev_currentDataPoint.devData_nightMode[5] = nightDatsTemp_CalibrateTab[1].Minute;
2802   5                                              
2803   5      #if(DEBUG_LOGOUT_EN == 1)
2804   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<Ò¹¼äÄ£Ê½ÂãÊı¾İ´òÓ¡
2805   5      //                                              
2806   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2807   5      //                                              sprintf(log_buf, ">>>nightMode dats upload: [%02X %02X %02X",   (int)dev_currentDataPoint.devData_n
             -ightMode[0],
2808   5      //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[1],
2809   5      //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[2]);
2810   5      //                                              PrintString1_logOut(log_buf);
2811   5      //                                                                                                                                                                              
2812   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2813   5      //                                              sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_currentDataPoint.devData_nightMode[3],
2814   5      //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[4],
2815   5      //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[5]);
2816   5      //                                              PrintString1_logOut(log_buf);
2817   5      //                                      }       
2818   5      
2819   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<¶¨Ê±ÔËĞĞ±êÖ¾´òÓ¡
2820   5      //                                      
2821   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2822   5      //                                              sprintf(log_buf, "ifTim_sw_running_FLAG:%d\n",  (int)ifTim_sw_running_FLAG);
2823   5      //                                              PrintString1_logOut(log_buf);
2824   5      //                                      }
2825   5      #endif  
2826   5                                      }
2827   4                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround, &dev_currentDataPoint.devData_bkLight, 2); //±³¾°µÆÊı¾İ
2828   4                                      dev_currentDataPoint.devData_devReset = 0;
2829   4                                      EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther, dev_currentDataPoint.devData_switchBitBind, clusterNum_us
             -r); //»¥¿Ø°ó¶¨Êı¾İ
2830   4                                      { //¸ù¾İÉè±¸ÀàĞÍ£¬·ÖÀàÌî×°Êı¾İ
2831   5                                      
2832   5                                              switch(SWITCH_TYPE){
2833   6                                              
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 49  

2834   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                                                              case SWITCH_TYPE_SOCKETS:{
                                                                      
                                                                      float code decimal_prtCoefficient = 10000.0F;
                                                              
                                                                      { //µçÁ¿Ìî×°
                                                                      u16 integer_prt = (u16)socket_eleDetParam.ele_Consum & 0x00FF;  //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.ele_Consum - (float)integer_prt) * decimal_prtCoefficie
             -nt);        //µçÁ¿Ğ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[0]      = (u8)((integer_prt & 0x00FF) >>
             - 0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[1]      = (u8)((decimal_prt & 0xFF00) >>
             - 8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[2]      = (u8)((decimal_prt & 0x00FF) >>
             - 0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                                      { //¹¦ÂÊÌî×°
                                                                      u16 integer_prt = (u16)socket_eleDetParam.eleParam_power & 0xFFFF;      //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.eleParam_power - (float)integer_prt) * decimal_prtCoeff
             -icient);        //µçÁ¿Ğ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[0]       = (u8)((integer_prt & 0xFF00) >> 
             -8);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[1]       = (u8)((integer_prt & 0x00FF) >> 
             -0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[2]       = (u8)((decimal_prt & 0xFF00) >> 
             -8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[3]       = (u8)((decimal_prt & 0x00FF) >> 
             -0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_corTime = systemTime_current.time_Hour; //¶ÔÓ
             -¦Ğ¡Ê±Çø¼äÌî×°
                                      
                                                                      { //DebugÊı¾İÌî×°-powerFreq<´Ë²¿·ÖÊı¾İµ÷ÊÔºóÈ¥³ı>
                                                                      u16 integer_prt = (u16)socket_eleDetParam.eleParamFun_powerFreqVal & 0xFFFF;    //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.eleParamFun_powerFreqVal - (float)integer_prt) * decima
             -l_prtCoefficient);    //powerFreqĞ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[0] = (u8)((integer_prt & 0xFF0
             -0) >> 8);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[1] = (u8)((integer_prt & 0x00F
             -F) >> 0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[2] = (u8)((decimal_prt & 0xFF0
             -0) >> 8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[3] = (u8)((decimal_prt & 0x00F
             -F) >> 0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                              }break;
              #else
2872   6                                                      case SWITCH_TYPE_CURTAIN:{
2873   7                                                      
2874   7                                                              dev_currentDataPoint.union_devParam.curtain_param.orbital_Period = curtainAct_Param.act_period;
2875   7                                                      
2876   7                                                      }break;
2877   6      #endif
2878   6                                                      default:{}break;
2879   6                                              }
2880   5                                      }
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 50  

2881   4                                      
2882   4                                      //Ê±Ğ§²Ù×÷Õ¼Î»Ö¸ÁîÌî×°
2883   4                                      switch(dtModeKeepAcess_currentCmd){
2884   5                                      
2885   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
2886   6                                              
2887   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_rcvPassive, sizeof(stt_agi
             -ngDataSet_bitHold));
2888   6                                              
2889   6                                              }break;
2890   5                                                      
2891   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
2892   6                                              
2893   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_sndInitative, sizeof(stt_a
             -gingDataSet_bitHold));
2894   6                                              
2895   6                                              }break;
2896   5                                                      
2897   5                                              default:{}break;
2898   5                                      }
2899   4                                      
2900   4                                      //Êı¾İÖ¡×ÜÊı¾İÌî×°
2901   4                                      frame_dataLen                                   = 0;
2902   4                                      paramTX_temp[frame_dataLen ++]  = DTMODEKEEPACESS_FRAMEHEAD_ONLINE; //Ö¡Í·
2903   4                                      paramTX_temp[frame_dataLen ++]  = 0;  //Ö¡³¤ÔİÌî0£¬×îºó¸üĞÂ
2904   4                                      memcpy(&paramTX_temp[frame_dataLen], &MAC_ID[1], 5); //MAC
2905   4                                      frame_dataLen += 6; //¿Õ³ö1Byte MAC
2906   4                                      paramTX_temp[frame_dataLen ++]  = dtModeKeepAcess_currentCmd; //ÃüÁî
2907   4                                      paramTX_temp[frame_dataLen ++]  = SWITCH_TYPE; //¿ª¹ØĞÅÏ¢
2908   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0xFF00) >> 8); //PANIDÌî×°
2909   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0x00FF) >> 0); 
2910   4                                      paramTX_temp[frame_dataLen ++]  = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
2911   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_H; //Ê±Çø_Ê±
2912   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_M; //Ê±Çø_·Ö
2913   4                                      memcpy(&paramTX_temp[frame_dataLen], &dev_currentDataPoint, sizeof(stt_devOpreatDataPonit)); //Ö±½ÓÊı¾
             -İÖ¸Õë¶ÔÆë,Êı¾İµãÏòÊı¾İÖ¡´ı·¢»º´æÇ¿í¡
2914   4                                      frame_dataLen += sizeof(stt_devOpreatDataPonit);
2915   4                                      frame_dataLen ++;
2916   4                                      paramTX_temp[1]                                 = frame_dataLen;
2917   4                                      paramTX_temp[frame_dataLen - 1] = frame_Check(&paramTX_temp[1], frame_dataLen - 2); //Ğ£ÑéÂë×îºóËã
2918   4                                      
2919   4      //#if(DEBUG_LOGOUT_EN == 1)
2920   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2921   4      //                                      u8 xdata log_buf[64];
2922   4      //                                      
2923   4      //                                      sprintf(log_buf, "package_num:[%02d], check_num[%02X].\n", (int)frame_dataLen, (int)paramTX_temp[fr
             -ame_dataLen - 1]);
2924   4      //                                      PrintString1_logOut(log_buf);
2925   4      //                              }                       
2926   4      //#endif        
2927   4                              
2928   4      #endif                          
2929   4                                      datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
2930   4                                      datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
2931   4                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
2932   4                                      memcpy(datsSend_request.datsTrans.dats, paramTX_temp, frame_dataLen );
2933   4                                      datsSend_request.datsTrans.datsLen = frame_dataLen ;
2934   4                                      datsRcv_respond.datsTrans.datsLen = 0;
2935   4                                      devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
2936   4                                      devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 4; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆÚ
             -ÄÚ ·¢ 4´Î
2937   4                                      devRunning_Status = status_dataTransRequestDatsSend;
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 51  

2938   4                                      
2939   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
2940   4                              }
2941   3                              
2942   3                              //------------------------------Ö÷×´Ì¬ÒµÎñ£º±¾µØ¿ª¹ØÊÜ¼¯Èº¿ØÖÆ×´Ì¬Î»ÖÜÆÚĞÔÂÖÑ¯<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>-------
             ---//
2943   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                                      if(!colonyCtrlGet_queryCounter && !colonyCtrlGetHang_timeCnt){ //ÖÜÆÚÑ¯²é ¼° ¹ÒÆğÊ±¼äÅĞ¶Ï
                                      
                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<<<<<<<<<<<<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2...6]       |       frame_data[7]                   |       frame_data[8...10]      |
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾»úMACµØÖ·                     |       ³¡¾°ËµÃ÷(ÔİÎŞËµÃ÷)              |       »¥¿ØËµÃ÷(µ±Ç°×éºÅ)      |               
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              paramTX_temp[0] = ZIGB_SYSCMD_COLONYPARAM_REQPERIOD; //ÃüÁî
                                              paramTX_temp[1] = clusterNum_usr + 5 + 1; //Êı¾İ³¤¶ÈËµÃ÷
                                              memcpy(&paramTX_temp[2], &MAC_ID[1], 5); //MACµØÖ·Ìî×°
                                              paramTX_temp[7] = 0; //³¡¾°ËµÃ÷×°ÔØ(ÎŞËµÃ÷£¬0Ìî³ä)
                                              memcpy(&paramTX_temp[8], CTRLEATHER_PORT, clusterNum_usr); //»¥¿ØËµÃ÷×°ÔØ(ËµÃ÷¶Ë¿ÚºÅ)
                                              
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLSYSZIGB; //zigbÏµÍ³½»»¥×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, paramTX_temp[1] + 2); 
                                              datsSend_request.datsTrans.datsLen = paramTX_temp[1] + 2;
                                              datsRcv_respond.datsTrans.datsLen = 0; //²»ĞèÒªÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend;
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
2972   3                              
2973   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İÍÆËÍ-------------------------------------------------
             ---//        
2974   3                              if(devActionPush_IF.push_IF){
2975   4                                      
2976   4                                      const bit dataFromRemote_IF = 1; //Ô¶³ÌÍÆËÍ
2977   4                                      const bit specialCmd_IF = 0; //·ÇÌØÊâÕ¼Î»
2978   4                                      
2979   4                                      u8 xdata datsTX_Len = 0;
2980   4                                      
2981   4                                      devActionPush_IF.push_IF = 0;
2982   4                                      
2983   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              
                                              paramTX_temp[11] = devActionPush_IF.dats_Push; //ÍÆËÍĞÅÏ¢Ìî×°
              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      u8 xdata log_buf[64];
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 52  

                                                      
                                                      sprintf(log_buf, "swData push:%02X.\n", (int)devActionPush_IF.dats_Push);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
                                                                                                                 paramTX_temp,
                                                                                                                 33,
                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
                                                                                                                 FRAME_MtoZIGBCMD_cmdControl,
                                                                                                                 specialCmd_IF);
                                      
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) //ÖÜÆÚÑ¯·Ã»úÖÆÎŞĞèÍÆËÍ£¬Ö»Ğè´¥·¢Ö÷¶¯Ê±Ğ§ÃüÁ
             -î¼´¿É
3013   4                                      
3014   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swPush = (devActionPush_IF.dats_Push & 0xE0) >> 5; 
             -//ÊôĞÔÖµÌî×°
3015   4                                      dev_agingCmd_sndInitative.agingCmd_swOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ğ§Õ¼Î»ÖÃÒ»
3016   4                                      dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
3017   4                                      
3018   4                                      heartBeatPeriod = PERIOD_HEARTBEAT_PST; //Ö÷¶¯Ñ¯·ÃÇĞ»»£¬ĞÄÌøÖÜÆÚ¸ÄÎªÖ÷¶¯
3019   4                                      heartBeatCount  = heartBeatPeriod; 
3020   4      #endif
3021   4      
3022   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3023   4                              }
3024   3                              
3025   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º»¥¿ØÍ¬²½-------------------------------------------------
             ---//
3026   3                              if(EACHCTRL_realesFLG){ //¹ã²¥»¥¿ØÖµ
3027   4                              
3028   4                                      if(devRunning_Status == status_passiveDataRcv){
3029   5                                      
3030   5                                              u8 idata loop;
3031   5                                              
3032   5                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //Èı¸ö¿ª¹ØÎ»·Ö±ğÅĞ¶¨
3033   6                                              
3034   6                                                      if(EACHCTRL_realesFLG & (1 << loop)){ //»¥¿ØÓĞĞ§Î»ÅĞ¶Ï
3035   7                                                      
3036   7                                                              EACHCTRL_realesFLG &= ~(1 << loop); //»¥¿ØÓĞĞ§Î»ÇåÁã
3037   7                                                              
3038   7                                                              paramTX_temp[0] = (status_Relay >> loop) & 0x01; //¿ª¹Ø×´Ì¬Ìî×°
3039   7                                                              
3040   7                                                              if((CTRLEATHER_PORT[loop] > CTRLEATHER_PORT_NUMSTART) && CTRLEATHER_PORT[loop] < CTRLEATHER_PORT_NU
             -MTAIL){ //ÊÇ·ñÎªÓĞĞ§»¥¿Ø¶Ë¿Ú
3041   8                                                                      
3042   8                                                                      (paramTX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_ON):(c
             -olonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
3043   8                                                                      localDataRecord_eaCtrl[loop] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3044   8                                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢
             -Î´¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3045   8                                                              
3046   8                                                                      /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 53  

3047   8                                                                      datsSend_requestEx[loop].nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3048   8                                                                      datsSend_requestEx[loop].portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3049   8                                                                      memset(datsSend_requestEx[loop].dats, 0, 10 * sizeof(u8));
3050   8                                                                      
3051   8                                                                      datsSend_requestEx[loop].dats[0] = paramTX_temp[0];
3052   8                                                                      datsSend_requestEx[loop].dats[1] = 0; //ÏÂ±ê2Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
3053   8                                                                      datsSend_requestEx[loop].datsLen = 2;
3054   8                                                                      datsSend_requestEx[loop].constant_Loop = 30; //ÎŞÊÓ»ØÂë£¬·¢30´Î
3055   8                                                                      
3056   8      //                                                              /*³£¹æ·¢ËÍ£¬ÊÕµ½Ğ­ÒéÕ»»ØÂëÏìÓ¦¾ÍÍ£Ö¹·¢ËÍ£¬ÇÒÓĞ³¬Ê±*///³£¹æ
3057   8      //                                                              datsSend_request.nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3058   8      //                                                              datsSend_request.portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3059   8      //                                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
3060   8      //                                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, 1);
3061   8      //                                                              datsSend_request.datsTrans.datsLen = 1;
3062   8      //                                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
3063   8      //                                                              
3064   8      //                                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
3065   8      //                                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 10; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³
             -¬Ê±ÖÜÆÚÄÚ ·¢ 10 ´Î
3066   8      //                                                              
3067   8      //                                                              EACHCTRL_reportFLG = 1; //ÏòÍø¹Ø»ã±¨
3068   8      //                                                              
3069   8      //                                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
3070   8      //                                                              
3071   8      //                                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬
             -±£³Ö£¬µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3072   8                                                              }
3073   7                                                      }
3074   6                                              }
3075   5                                      }       
3076   4                              }
3077   3      
3078   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ   
                                      if(EACHCTRL_reportFLG){ //ÏòÍø¹Øµ¥²¥µ±Ç°ËùÓĞ»¥¿Ø×éºÅ¶ÔÓ¦µÄ¿ª¹Ø×´Ì¬Öµ
                                      
                                              EACHCTRL_reportFLG = 0;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2/4/6]       |               frame_data[3/5/7]                       |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ          |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ¶ÔÓ¦¿ª¹Ø×´Ì¬Öµ    |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              {
                                                      u8 code remote_responseFrame[3] = {ZIGB_SYSCMD_EACHCTRL_REPORT, 0x01, 0x00}; //Ô¶¶ËÏìÓ¦Ö¡<È·±£Ö÷»úÊÕµ
             -½>
                                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                              u8 xdata log_buf[64];
                                                              
                                                              sprintf(log_buf, "current eaCtrl insrt[2] is: %02X.\n", (int)colonyCtrlGet_statusLocalEaCtrl[1]);
                                                              PrintString1_logOut(log_buf);
                                                      }                       
              #endif  
                                                      
                                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 54  

                                                      datsSend_request.datsTrans.dats[0]      = ZIGB_SYSCMD_EACHCTRL_REPORT;
                                                      datsSend_request.datsTrans.dats[1]      = 6;
                                                      datsSend_request.datsTrans.dats[2]      = CTRLEATHER_PORT[0];
                                                      datsSend_request.datsTrans.dats[3]      = colonyCtrlGet_statusLocalEaCtrl[0];
                                                      datsSend_request.datsTrans.dats[4]      = CTRLEATHER_PORT[1];
                                                      datsSend_request.datsTrans.dats[5]      = colonyCtrlGet_statusLocalEaCtrl[1];
                                                      datsSend_request.datsTrans.dats[6]      = CTRLEATHER_PORT[2];
                                                      datsSend_request.datsTrans.dats[7]      = colonyCtrlGet_statusLocalEaCtrl[2];
                                                      datsSend_request.datsTrans.datsLen      = 8;
                                                      datsSend_request.nwkAddr                        = 0;
                                                      datsSend_request.portPoint                      = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      memset(datsRcv_respond.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8)); //ĞèÒªÔ¶¶ËÏìÓ¦
                                                      memcpy(datsRcv_respond.datsTrans.dats, remote_responseFrame, 3); //Ô¶¶ËÏìÓ¦Ö¡¼ÓÔØ
                                                      datsRcv_respond.datsTrans.datsLen       = 3;
                                                      datsRcv_respond.nwkAddr                         = 0;
                                                      datsRcv_respond.portPoint                       = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              }
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
3126   3                              
3127   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ½âÎöÏìÓ¦---------------------------------------------
             ---//
3128   3                              if(uartRX_toutFLG){ //Êı¾İ½ÓÊÕ(Ö¡³¬Ê±)
3129   4                                      
3130   4                                      uartRX_toutFLG = 0;
3131   4                                      
3132   4      //                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
3133   4      //                              
3134   4      //#if(DEBUG_LOGOUT_EN == 1)
3135   4      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3136   4      //                                                      u8 xdata log_buf[64];
3137   4      //                                                      
3138   4      //                                                      sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
3139   4      //                                                      PrintString1_logOut(log_buf);
3140   4      //                                              }                       
3141   4      //#endif        
3142   4      //                              }
3143   4                                      
3144   4                                      /*ZigbeeÒ»¼¶Ğ­ÒéºË¶Ô½âÎö*/
3145   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3146   4                                              !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_datsComing, 2)){ //Ô¶¶ËÊı¾İµ½À´Ö¸Áî
3147   5                                              
3148   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
3149   5                                              u8      idata srcPoint =  datsRcv_ZIGB.rcvDats[10];     //Ô´¶Ë
3150   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë
3151   5                                                      
3152   5                                              if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //Êı¾İÀ´Ô´¶ÌµØÖ·¼ì²â£¬ÊÇ·ñÀ´×ÔÍø¹ØÖ÷»ú
3153   6                                              
3154   6                                                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //Íø¹ØÖ÷»úÊ§ÁªÈ·ÈÏ¼ì²â¼ÆÊ±Ö
             -ØÖÃ
3155   6                                                      if(devTips_nwkZigb != nwkZigb_nwkOpen)devTips_nwkZigb = nwkZigb_Normal; //zigbTips×´Ì¬ÏìÓ¦£¬Ö»Òª½ÓÊÕ
             -µ½Íø¹ØzigbÊı¾İ£¬tips×´Ì¬¾ÍÇĞ»»ÖÁÕı³£
3156   6                                              }
3157   5                                              
3158   5                                              memset(paramRX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans);
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 55  

3159   5                                              memcpy(paramRX_temp, &(datsRcv_ZIGB.rcvDats[21]), datsRcv_ZIGB.rcvDats[20]);
3160   5                                                      
3161   5                                              if(srcPoint > CTRLEATHER_PORT_NUMSTART && srcPoint < CTRLEATHER_PORT_NUMTAIL){ /*»¥¿Ø¶Ë¿Ú*/
3162   6                                                      
3163   6                                                      u8 idata statusRelay_temp = status_Relay; //µ±Ç°¿ª¹Ø×´Ì¬»º´æ
3164   6                                                      u8 idata localActLoop = 0;
3165   6                                                      
3166   6                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢Î´
             -¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3167   6                                                      
3168   6      #if(DEBUG_LOGOUT_EN == 1)
3169   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3170   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3171   7                                                              sprintf(log_buf, "ctrl eachOther cmd coming, cluster:%02d, val:%02d, loop:%02d.\n", (int)srcPoint, 
             -(int)paramRX_temp[0], (int)paramRX_temp[1]);
3172   7                                                              PrintString1_logOut(log_buf);
3173   7                                                      }                       
3174   6      #endif  
3175   6                                                      /*»¥¿Ø±»¶¯ÏìÓ¦*/
3176   6                                                      for(localActLoop = 0; localActLoop < clusterNum_usr; localActLoop ++){
3177   7                                                      
3178   7                                                              if((srcPoint == CTRLEATHER_PORT[localActLoop]) && (0 != CTRLEATHER_PORT[localActLoop])){ //¿ª¹ØÎ»1 
             -»¥¿Ø°ó¶¨ÅĞ¶Ï
3179   8                                                              
3180   8                                                                      if(paramRX_temp[1] > datsSend_requestEx[localActLoop].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
3181   9                                                                      
3182   9                                                                              statusRelay_temp &= ~(1 << localActLoop); //¶¯×÷Î»»º´æÇåÁã
3183   9                                                                              swCommand_fromUsr.objRelay = statusRelay_temp | (paramRX_temp[0] << localActLoop); //bit¶ÔÓ¦ ¿ª¹Ø
             -Î»¶¯×÷¼ÓÔØ
3184   9                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
3185   9                                                                              (paramRX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRESER
             -VE_ON):(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
3186   9                                                                              
3187   9                                                                              datsSend_requestEx[localActLoop].constant_Loop = 0;  
3188   9                                                                              
3189   9                                                                              localDataRecord_eaCtrl[localActLoop] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3190   9                                                                      }
3191   8                                                                      
3192   8                                                                      break;
3193   8                                                              }
3194   7                                                      }
3195   6                                                      
3196   6                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
3197   6                                              
3198   6                                              }else{ /*·Ç»¥¿Ø¶Ë¿Ú*///Ê£ÏÂ¾ÍÊÇÏµÍ³×¨ÓÃµÄ15¸ö¶Ë¿Ú
3199   6                                              
3200   6                                                      switch(srcPoint){
3201   7                                                              
3202   7                                                              /*³¡¾°¼¯Èº¶Ë¿Ú*/
3203   7                                                              case ZIGB_ENDPOINT_CTRLSECENARIO:{      
3204   8                                                              
3205   8                                                                      dataParing_scenarioCtrl(paramRX_temp); //³¡¾°¼¯Èº¿ØÖÆ½âÎö
3206   8                                                                      
3207   8                                                              }break;
3208   7                                                      
3209   7                                                              /*³£¹æ¿ØÖÆ×ª·¢¶Ë¿Ú*/
3210   7                                                              case ZIGB_ENDPOINT_CTRLNORMAL:{ 
3211   8                                                              
3212   8                                                                      if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //À´×ÔĞ­µ÷Æ÷
3213   9                                                                      
3214   9                                                                              dataParing_Nomal(paramRX_temp, datsFrom_addr, srcPoint); //³£¹æ½âÎö
3215   9                                                                      }
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 56  

3216   8                                                                      
3217   8                                                              }break;
3218   7                                                              
3219   7                                                              /*zigbÏµÍ³½»»¥¶Ë¿Ú*/
3220   7                                                              case ZIGB_ENDPOINT_CTRLSYSZIGB:{        
3221   8                                                              
3222   8                                                                      dataParing_zigbSysCtrl(paramRX_temp); //ÏµÍ³¿ØÖÆ½âÎö
3223   8                                                                      
3224   8                                                              }break;
3225   7                                                                      
3226   7                                                              default:{
3227   8                                                              
3228   8                                                                      
3229   8                                                                      
3230   8                                                              }break;
3231   7                                                      }
3232   6                                              }
3233   5                                              
3234   5                                      }else
3235   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3236   4                                         !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_nwkOpenNote, 2)){ //ÍøÂç¿ª·ÅÍ¨Öª
3237   5                                              
3238   5                                              tips_statusChangeToZigbNwkOpen(datsRcv_ZIGB.rcvDats[4]); //tips´¥·¢
3239   5                                      }
3240   4                              }
3241   3                              
3242   3                      }break;
3243   2                      
3244   2                      case status_nwkREQ:{
3245   3                      
3246   3                              //--------------------------------Ğ­×´Ì¬£ºÇå³ı±¾µØÍøÂçºóÖØĞÂÈëÍøÇëÇó-----------------------------------
             -------------//
3247   3                              devTips_nwkZigb = nwkZigb_nwkREQ;
3248   3                              zigB_nwkJoinRequest(1); //·Ç×èÈûÖ÷¶¯¼ÓÈë¸½½ü¿ª·ÅÍøÂç
3249   3                              
3250   3                      }break;
3251   2                              
3252   2                      case status_nwkReconnect:{
3253   3                      
3254   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂçÖØÁ¬ÇëÇó-----------------------------------------------//
3255   3                              devTips_nwkZigb = nwkZigb_reConfig;
3256   3                              zigB_nwkJoinRequest(0); //·Ç×èÈûÖØÁ¬
3257   3                              
3258   3                      }break;
3259   2                      
3260   2                      case status_dataTransRequestDatsSend:{
3261   3                              
3262   3                              //--------------------------------Ğ­×´Ì¬£ºÊı¾İÇëÇó-----------------------------------------------//
3263   3                              dataTransRequest_datsSend(); //·Ç×èÈûÔ¶¶ËÊı¾İ´«Êä
3264   3                      
3265   3                      }break;
3266   2                      
3267   2                      case status_devNwkHold:{
3268   3                      
3269   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂç¹ÒÆğ-----------------------------------------------//
3270   3                              devTips_nwkZigb = nwkZigb_hold;
3271   3                              function_devNwkHold();
3272   3                              
3273   3                      }break;
3274   2                      
3275   2                      case status_devFactoryRecoverStandBy:{
3276   3                      
C51 COMPILER V9.54   DATATRANS                                                             12/20/2018 14:37:18 PAGE 57  

3277   3                              //--------------------------------Ğ­×´Ì¬£º»Ö¸´³ö³§Ô¤ÖÃ-----------------------------------------------//
3278   3                              devTips_nwkZigb = nwkZigb_outLine;
3279   3                              if(!factoryRecover_HoldTimeCount){
3280   4                              
3281   4                                      if(factoryRecover_standBy_FLG)Factory_recover();
3282   4                              }
3283   3                              
3284   3                      }break;
3285   2                              
3286   2                      default:{
3287   3                      
3288   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
3289   4                              
3290   4                                      devStatus_switch.statusChange_IF = 0;
3291   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
3292   4                                      
3293   4                                      break;
3294   4                              }
3295   3                      
3296   3                      }break;
3297   2              }
3298   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  11408    ----
   CONSTANT SIZE    =   4550    ----
   XDATA SIZE       =    565    1522
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9     144
   IDATA SIZE       =   ----      15
   BIT SIZE         =      9      17
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
