C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DATATRANS
OBJECT MODULE PLACED IN .\Output\dataTrans.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE dataTrans\dataTrans.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Usr;.\Usr_l
                    -ib;.\std_Lib;.\dataTrans;.\Actuator;.\Sensor;.\hwDriver) DEBUG PRINT(.\Listings\dataTrans.lst) OBJECT(.\Output\dataTrans
                    -.obj)

line level    source

   1          #include "dataTrans.h"
   2          
   3          #include "string.h"
   4          #include "stdio.h"
   5          
   6          #include "eeprom.h"
   7          #include "USART.h"
   8          #include "delay.h"
   9          #include "Relay.h"
  10          
  11          #include "timerAct.h"
  12          #include "pars_Method.h"
  13          #include "dataManage.h"
  14          #include "Tips.h"
  15          
  16          /**********************±¾µØÎÄ¼ş±äÁ¿¶¨ÒåÇø************************/
  17          datsAttr_datsTrans xdata datsSend_request = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ
  18          datsAttr_dtCtrlEach xdata datsSend_requestEx[3] = {0}; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ£¨³ÖĞø·¢ËÍ£¬ÎŞĞèÔ¶¶ËÏìÓ
             -¦£©
  19          u16 xdata dtReqEx_counter = 0; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇóÊı¾İ·¢ËÍ¼ä¸ô¼ÆÊ±Öµ µ¥Î»£ºms
  20          datsAttr_datsTrans xdata datsRcv_respond = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇóµÈ´ıÏìÓ¦»º´æ»º´æ
  21          remoteDataReq_method xdata devRemoteDataReqMethod = {0}; //Ô¶¶ËÊı¾İÇëÇó·½Ê½
  22          
  23          stt_devOpreatDataPonit xdata dev_currentDataPoint = {0}; //ÖÜÆÚÑ¯·ÃÊı¾İµã
  24          stt_agingDataSet_bitHold xdata  dev_agingCmd_rcvPassive = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --±»¶¯½ÓÊÕ
  25          stt_agingDataSet_bitHold xdata  dev_agingCmd_sndInitative = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --Ö÷¶¯ÉÏ´«
  26          u8 dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR; //Êı¾İ´«ÊäÎª¶¨Ê±Ñ¯·ÃÄ£Ê½Ê±£¬Ğ¯´øÑ¯·ÃÖ¸ÁîÖµ£¬
             -ĞèÒªÖ÷¶¯ÉÏ´«Ê±Ôò¸ü¸Ä´ËÖµ
  27          
  28          //zigbeeÔËĞĞ×´Ì¬ÇĞ»»±êÖ¾
  29          stt_statusChange xdata devStatus_switch = {0, status_NULL};
  30          //Êı¾İÇëÇóÍê³ÉºóÊÇ·ñĞèÒªÖØÆôÍøÂç
  31          bit reConnectAfterDatsReq_IF = 0; //ÓÃÓÚ»¥¿ØÍ¨Ñ¶´Ø¼´¿Ì×¢²áÌØÊâÇé¿öÏÂÊ¹ÓÃ
  32          
  33          bit coordinatorOnline_IF = 0; //Ğ­µ÷Æ÷ÔÚÏß±êÖ¾
  34          
  35          //zigbÍøÂç¶¯×÷×¨ÓÃÊ±¼ä¼ÆÊı
  36          u16 xdata zigbNwkAction_counter = 0;
  37          
  38          //zigbÉè±¸ÍøÂç¹ÒÆğÊôĞÔ²ÎÊı
  39          attr_devNwkHold xdata devNwkHoldTime_Param = {0};
  40          
  41          //ĞÄÌø
  42          bit heartBeatCycle_FLG                  = 0; //ĞÄÌøÖÜÆÚ´¥·¢
  43          u8      xdata heartBeatCount            = 0; //ĞÄÌøÖÜÆÚ¼ÆÊı
  44          u8      xdata heartBeatPeriod           = PERIOD_HEARTBEAT_ASR; //ĞÄÌø¼ÆÊıÖÜÆÚ
  45          u8      xdata heartBeatHang_timeCnt = 0; //ĞÄÌø¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ·¢ËÍĞÄÌø£¬·ñÔòĞÄÌø¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  46          
  47          //¼¯ÈºÊÜ¿ØÖÜÆÚÂÖÑ¯-<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>
  48          u8      xdata colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÑ¯²é¼ÆÊ±¼ÆÊıÖµ
  49          u8      xdata colonyCtrlGet_statusLocalEaCtrl[clusterNum_usr] = {0}; //¼¯Èº¿ØÖÆ-±¾µØ»¥¿Ø×´Ì¬Î»¼ÇÂ¼
  50          u8      xdata localDataRecord_eaCtrl[clusterNum_usr] = {0}; //±¾µØ¾²Ì¬Êı¾İ¼ÇÂ¼£º»¥¿ØÊµ¼ÊÖµ
  51          u8      xdata colonyCtrlGet_statusLocalScene = 0; //¼¯Èº¿ØÖÆ-±¾µØ³¡¾°×´Ì¬Î»¼ÇÂ¼
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 2   

  52          u8      xdata colonyCtrlGetHang_timeCnt = 0; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÂÖÑ¯¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ½øĞĞÖÜÆÚÑ¯²é£¬·ñ
             -ÔòÑ¯²é¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  53          
  54          //´®¿Ú½ÓÊÕ³¬Ê±±êÖ¾
  55          bit uartRX_toutFLG      = 0;
  56          //´®¿Ú½ÓÊÕ³¬Ê±¼ÆÊı
  57          bit rxTout_count_EN = 0;
  58          u8  rxTout_count        = 0;
  59          //´®¿ÚÊı¾İ»º´æ
  60          u8      datsRcv_length  = 0;
  61          uartTout_datsRcv xdata datsRcv_ZIGB = {{0}, 0};
  62          
  63          //zigbeeÍ¨ĞÅÏß³Ìµ±Ç°ÔËĞĞ×´Ì¬±êÖ¾
  64          threadRunning_Status devRunning_Status = status_NULL;
  65          
  66          //zigbeeĞ­µ÷Æ÷¶ªÊ§¼ì²â¼ÆÊ±±äÁ¿
  67          u8 xdata timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM;
  68          
  69          u8      xdata factoryRecover_HoldTimeCount = 0; //»Ö¸´³ö³§µÈ´ıÊ±¼ä
  70          bit idata factoryRecover_standBy_FLG = 0; //»Ö¸´³ö³§Ô¤ÖÃ±êÖ¾
  71          
  72          void zigbUart_pinInit(void){
  73   1      
  74   1              //TXÍÆÍìÊä³ö
  75   1              P3M1 &= 0xFD;   
  76   1              P3M0 |= 0x02;   
  77   1              
  78   1              //RX¸ß×èÊäÈë
  79   1              P3M1 |= 0x01;
  80   1              P3M0 &= 0xFE;
  81   1              
  82   1              //TXÍÆÍìÊä³ö
  83   1              P2M1 &= ~0x08;
  84   1              P2M0 |= 0x08;
  85   1      }
  86                  
  87          /*--------------------------------------------------------------*/
  88          void uartObjZigb_Init(void){
  89   1      
  90   1              EA = 0;
  91   1      
  92   1              PS = 0;
  93   1              SCON = (SCON & 0x3f) | UART_8bit_BRTx;
  94   1      
  95   1      {
  96   2              u32 j = (MAIN_Fosc / 4) / ZIGB_BAUND;   //°´1T¼ÆËã
  97   2                      j = 65536UL - j;
  98   2              
  99   2              TH2 = (u8)(j>>8);
 100   2              TL2 = (u8)j;
 101   2      }
 102   1              AUXR &= ~(1<<4);        //Timer stop
 103   1              AUXR |= 0x01;           //S1 BRT Use Timer2;
 104   1              AUXR &= ~(1<<3);        //Timer2 set As Timer
 105   1              AUXR |=  (1<<2);        //Timer2 set as 1T mode
 106   1      
 107   1              IE2  &= ~(1<<2);        //½ûÖ¹ÖĞ¶Ï
 108   1              AUXR &= ~(1<<3);        //¶¨Ê±
 109   1              AUXR |=  (1<<4);        //Timer run enable
 110   1      
 111   1              ES        = 1;
 112   1              REN   = 1;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 3   

 113   1              P_SW1 = (P_SW1 & 0x3f) | (UART1_SW_P30_P31 & 0xc0);
 114   1              
 115   1              memset(TX1_Buffer, 0, sizeof(char) * COM_TX1_Lenth);
 116   1      
 117   1              EA = 1;
 118   1      
 119   1              PrintString1("i'm UART1 for wifi data translate !!!\n");
 120   1              PrintString1_logOut("i'm UART1 for datsLog !!!\n");
 121   1      }
 122          
 123          ///*----------------------------
 124          //·¢ËÍ´®¿ÚÊı¾İ
 125          //----------------------------*/
 126          //void uartObjWIFI_Send_Byte(u8 dat)    //´®¿Ú1
 127          //{
 128          //      TX1_write2buff(dat);
 129          //}
 130          
 131          //void uartObjWIFI_Send_String(char *s,unsigned char ucLength){  //´®¿Ú1
 132          //      
 133          //      uart1_datsSend(s, ucLength);
 134          //}
 135          
 136          //void rxBuff_WIFI_Clr(void){
 137          
 138          //      memset(rxBuff_WIFI, 0xff, sizeof(char) * COM_RX1_Lenth);
 139          //      COM1.RX_Cnt = 0;
 140          //}
 141          
 142          /********************* UART1(WIIF)ÖĞ¶Ïº¯Êı_×Ô¶¨ÒåÖØ¹¹************************/
 143          void UART1_Rountine (void) interrupt UART1_VECTOR
 144          {
 145   1              
 146   1              if(RI)
 147   1              {
 148   2                      RI = 0;
 149   2                      if(COM1.B_RX_OK == 0)
 150   2                      {
 151   3                              
 152   3      //                      if(COM1.RX_Cnt >= COM_RX1_Lenth)        COM1.RX_Cnt = 0;
 153   3      //                      RX1_Buffer[COM1.RX_Cnt++] = SBUF;
 154   3      //                      COM1.RX_TimeOut = TimeOutSet1;
 155   3                              
 156   3                              if(!rxTout_count_EN){
 157   4                              
 158   4                                      rxTout_count_EN = 1;
 159   4                                      rxTout_count    = 0;
 160   4                                      datsRcv_length  = 0;
 161   4                                      
 162   4                                      memset(RX1_Buffer, 0xff, sizeof(char) * COM_RX1_Lenth);
 163   4                              }
 164   3                                              
 165   3                              RX1_Buffer[datsRcv_length ++] = SBUF;
 166   3                              rxTout_count = 0;
 167   3                      }
 168   2              }
 169   1      
 170   1              if(TI)
 171   1              {
 172   2                      TI = 0;
 173   2                      if(COM1.TX_read != COM1.TX_write)
 174   2                      {
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 4   

 175   3                              SBUF = TX1_Buffer[COM1.TX_read];
 176   3                              if(++COM1.TX_read >= COM_TX1_Lenth)     COM1.TX_read = 0;
 177   3                      }
 178   2                      else COM1.B_TX_busy = 0;
 179   2              }
 180   1      }
 181          
 182          /* ×Ô¶¨ÒåĞ£Ñé*///×Ô¼Ò²úÆ·Ğ­Òé²ã
 183          static 
 184          unsigned char frame_Check(unsigned char frame_temp[], u8 check_num){
 185   1        
 186   1              unsigned char loop              = 0;
 187   1              unsigned char val_Check = 0;
 188   1              
 189   1              for(loop = 0; loop < check_num; loop ++){
 190   2              
 191   2                      val_Check += frame_temp[loop];
 192   2              }
 193   1              
 194   1              val_Check  = ~val_Check;
 195   1              val_Check ^= 0xa7;
 196   1              
 197   1              return val_Check;
 198   1      }
 199          
 200          /*´ËÊı¾İ·â×°±ØĞëÔÚÊı¾İ°ü·¢ËÍÇ°×îºóµ÷ÓÃ£¬×Ô¶¨Òå¶ÔÏó½øĞĞÊı¾İ·â×°*///±ÜÃâĞ£Ñé±»ÌáÇ°¶ø³ö´í
 201          static 
 202          u8 dtasTX_loadBasic_CUST(bit ifRemoteDats,
 203                                                       u8 dats_Tx[],
 204                                                       u8 datsLen_TX,
 205                                                       u8 frame_Type,
 206                                                       u8 frame_CMD,
 207                                                       bit ifSpecial_CMD){
 208   1                                                         
 209   1              dats_Tx[2]      = frame_Type;
 210   1              dats_Tx[3]      = frame_CMD;
 211   1              
 212   1              if(!ifSpecial_CMD)dats_Tx[10] = SWITCH_TYPE;    //¿ª¹ØÀàĞÍÌî³ä
 213   1              
 214   1              memcpy(&dats_Tx[5], &MAC_ID[1], 5);     //MACÌî³ä
 215   1                                                        
 216   1              dats_Tx[4]      = frame_Check(&dats_Tx[5], 28);
 217   1                                                                 
 218   1              if(ifRemoteDats){
 219   2                      
 220   2                      u8 xdata dats_Temp[64] = {0};
 221   2              
 222   2                      dats_Tx[0] = ZIGB_FRAMEHEAD_CTRLREMOTE;
 223   2                      dats_Tx[1]      = datsLen_TX + 12;
 224   2                      
 225   2                      memcpy(dats_Temp, &dats_Tx[1], datsLen_TX - 13);
 226   2                      memset(&dats_Tx[1], 0, datsLen_TX - 1);
 227   2                      memcpy(&dats_Tx[13], dats_Temp, datsLen_TX - 13);
 228   2                      memcpy(&dats_Tx[1], MAC_ID_DST, 6);
 229   2                      memcpy(&dats_Tx[8], &MAC_ID[1], 5);
 230   2                      
 231   2                      return 45;
 232   2                      
 233   2              }else{
 234   2              
 235   2                      dats_Tx[0]      = ZIGB_FRAMEHEAD_CTRLLOCAL;
 236   2                      dats_Tx[1]      = datsLen_TX;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 5   

 237   2                      
 238   2                      return 33;
 239   2              }
 240   1      }
 241          
 242          /*Êı¾İÒì»òĞ£Ñé*///ZNPĞ­Òé²ã
 243          static 
 244          u8 XORNUM_CHECK(u8 buf[], u8 length){
 245   1      
 246   1              u8 loop = 0;
 247   1              u8 valXOR = buf[0];
 248   1              
 249   1              for(loop = 1;loop < length;loop ++)valXOR ^= buf[loop];
 250   1              
 251   1              return valXOR;
 252   1      }
 253          
 254          /*zigbeeÊı¾İÖ¡¼ÓÔØ*/
 255          static 
 256          u8 ZigB_TXFrameLoad(u8 frame[],u8 cmd[],u8 cmdLen,u8 dats[],u8 datsLen){                
 257   1      
 258   1              const u8 frameHead = ZIGB_FRAME_HEAD;   //ZNP,SOFÖ¡Í·
 259   1              u8 xor_check = datsLen;                                 //Òì»òĞ£Ñé£¬Ö¡Î²
 260   1              u8 loop = 0;
 261   1              u8 ptr = 0;
 262   1              
 263   1              frame[ptr ++] = frameHead;
 264   1              frame[ptr ++] = datsLen;
 265   1              
 266   1              memcpy(&frame[ptr],cmd,cmdLen);
 267   1              ptr += cmdLen;
 268   1              for(loop = 0;loop < cmdLen;loop ++)xor_check ^= cmd[loop];
 269   1      
 270   1              memcpy(&frame[ptr],dats,datsLen);
 271   1              ptr += datsLen;
 272   1              for(loop = 0;loop < datsLen;loop ++)xor_check ^= dats[loop];    
 273   1              
 274   1              frame[ptr ++] = xor_check;
 275   1              
 276   1              return ptr;
 277   1      }
 278          
 279          /*ÖÜÆÚĞÔÖ÷¶¯·¢ÂëÍ¨ĞÅ¹ÒÆğ£¬Í¨ĞÅÇåÕÏ*/
 280          void periodDataTrans_momentHang(u8 hangTime){ //¹ÒÆğÊ±¼ä µ¥Î»£ºs
 281   1      
 282   1              heartBeatCount = 0;
 283   1              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
 284   1              
 285   1              heartBeatHang_timeCnt = colonyCtrlGetHang_timeCnt = hangTime;
 286   1      }
 287          
 288          /*zigbeeµ¥Ö¸ÁîÊı¾İÇëÇó£¬·µ»ØÓ¦´ğÊı¾İ³¤¶È*/
 289          static 
 290          u8 zigb_datsRequest( u8 frameREQ[],             //ÇëÇóÖ¡
 291                                                   u8 frameREQ_Len,       //ÇëÇóÖ¡³¤
 292                                                   u8 resp_cmd[2],        //ËùĞèÓ¦´ğÖ¸Áî
 293                                                   u8 resp_dats[],        //Ó¦´ğÊı¾İ»º´æ
 294                                                   u8 loopReapt,u16 timeWait){    //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 295   1                                                
 296   1              u16 Local_Delay = timeWait;             
 297   1              u8      loop = 0;
 298   1                                                       
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 6   

 299   1              for(loop = 0;loop < loopReapt;loop ++){
 300   2              
 301   2                      uartRX_toutFLG = 0;
 302   2                      zigbNwkAction_counter = timeWait;       
 303   2                  uartZigB_datsSend(frameREQ, frameREQ_Len);
 304   2                      
 305   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 306   3      
 307   3                              if(uartRX_toutFLG){
 308   4                              
 309   4                                      uartRX_toutFLG = 0;
 310   4                                      
 311   4                                      if(!memcmp(&(datsRcv_ZIGB.rcvDats[2]), resp_cmd, 2)){
 312   5                                      
 313   5                                              memcpy(resp_dats, datsRcv_ZIGB.rcvDats, datsRcv_ZIGB.rcvDatsLen);
 314   5                                              return datsRcv_ZIGB.rcvDatsLen;
 315   5                                              
 316   5                                      }
 317   4                              }
 318   3                      }
 319   2              }       
 320   1      
 321   1              return 0;
 322   1      }
 323          
 324          /*zigbeeµ¥Ö¸ÁîÏÂ·¢¼°ÏìÓ¦ÑéÖ¤*///×èÈû
 325          bit zigb_VALIDA_INPUT(u8 REQ_CMD[2],            //Ö¸Áî
 326                                                    u8 REQ_DATS[],                //Êı¾İ
 327                                                    u8 REQdatsLen,                //Êı¾İ³¤¶È
 328                                                    u8 ANSR_frame[],              //ÏìÓ¦Ö¡
 329                                                    u8 ANSRdatsLen,               //ÏìÓ¦Ö¡³¤¶È
 330                                                    u8 times,u16 timeDelay){      //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 331   1                                                 
 332   1      #define dataLen_validaInput     96
 333   1              u8 xdata dataTXBUF[dataLen_validaInput] = {0};
 334   1              u8      loop = 0;
 335   1              u8      datsTX_Len;
 336   1      
 337   1              datsTX_Len = ZigB_TXFrameLoad(dataTXBUF,REQ_CMD, 2, REQ_DATS, REQdatsLen);
 338   1      
 339   1              for(loop = 0;loop < times;loop ++){
 340   2              
 341   2                      uartRX_toutFLG = 0;
 342   2                      zigbNwkAction_counter = timeDelay;
 343   2                      uartZigB_datsSend(dataTXBUF, datsTX_Len);
 344   2                      
 345   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 346   3                              
 347   3                              if(uartRX_toutFLG){
 348   4                              
 349   4                                      uartRX_toutFLG = 0;
 350   4                                      
 351   4                                      if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ANSR_frame, ANSRdatsLen)){
 352   5                                      
 353   5                                              delayMs(2);
 354   5                                              return 1;
 355   5                                      }
 356   4                              }
 357   3                      }
 358   2              }
 359   1              
 360   1              return 0;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 7   

 361   1      }
 362          
 363          ///*zigbeeÍ¨ĞÅ´ØÉèÖÃ*///×èÈû
 364          //bit zigb_clusterSet(u16 deviveID, u8 endPoint){
 365          
 366          //      datsAttr_ZigbInit code default_param = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x01,0x00,0x00,
             -0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,300};       //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 367          //      u8 code frameResponse_Subs[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾­×¢²á
 368          //              
 369          //#define       dataLen_zigbClusterSet  64
 370          //      u8 xdata paramTX_temp[dataLen_zigbClusterSet] = {0};
 371          //      
 372          //      bit setResult = 0;
 373          //      
 374          //      memcpy(paramTX_temp, default_param.zigbInit_reqDAT, default_param.reqDAT_num);
 375          //      paramTX_temp[0] = endPoint;
 376          //      paramTX_temp[3] = (u8)((deviveID & 0x00ff) >> 0);
 377          //      paramTX_temp[4] = (u8)((deviveID & 0xff00) >> 8);
 378          //      
 379          //      setResult =  zigb_VALIDA_INPUT( (u8 *)default_param.zigbInit_reqCMD,
 380          //                                                                      (u8 *)paramTX_temp,
 381          //                                                                      default_param.reqDAT_num,
 382          //                                                                      (u8 *)default_param.zigbInit_REPLY,
 383          //                                                                      default_param.REPLY_num,
 384          //                                                                      2,              //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 385          //                                                                      default_param.timeTab_waitAnsr);
 386          //      
 387          //      if(setResult)return setResult;
 388          //      else{
 389          //      
 390          //              return zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 391          //                                                               (u8 *)paramTX_temp,
 392          //                                                               default_param.reqDAT_num,
 393          //                                                               (u8 *)frameResponse_Subs,
 394          //                                                               6,
 395          //                                                               2,             //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 396          //                                                               default_param.timeTab_waitAnsr);
 397          //      }
 398          //}
 399          
 400          ///*zigbeeÖØĞÂÈëÍø*///×èÈûº¯Êı£¬½ö¹©²âÊÔÊ¹ÓÃ
 401          //bit ZigB_NwkJoin(u16 PANID, u8 CHANNELS){
 402          
 403          //#define       cmdNum_zigbNwkJoin      8       
 404          //      
 405          //#define        loop_PANID             5
 406          //#define        loop_CHANNELS  6
 407          
 408          //      datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkJoin] = {
 409          //              
 410          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 411          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 412          //              {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³
             -õÊ¼»¯£¬È«²¿Çå¿Õ
 413          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¶ş´Î¸´Î»
 414          //              
 415          ////            {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨Ğ­µ÷Æ÷£©
 416          //              {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 8   

             -Ã£¨Â·ÓÉÆ÷£©
 417          ////            {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨ÖÕ¶Ë£©
 418          //              
 419          //              {       {0x27,0x02},    {0x34,0x12},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ
             -÷ÉèÖÃ
 420          //              {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµ
             -À¼Ä´æÆ÷ÅäÖÃ
 421          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 422          //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 423          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 424          //      };
 425          //      
 426          //#define       dataLen_zigbNwkJoin 64
 427          //      u8 xdata paramTX_temp[dataLen_zigbNwkJoin] = {0};
 428          //      
 429          //      u8  loop;
 430          //      u32 chnl_temp = 0x00000800UL << CHANNELS;
 431          //      
 432          //      for(loop = 1; loop < cmdNum_zigbNwkJoin; loop ++){
 433          //              
 434          //              memset(paramTX_temp, 0, dataLen_zigbNwkJoin * sizeof(u8));
 435          //              
 436          //              switch(loop){   //×ÔÑ¡²ÎÊı&Ä¬ÈÏ²ÎÊı
 437          //              
 438          //                      case loop_PANID:{
 439          //                      
 440          //                              paramTX_temp[0] = (u8)((PANID & 0x00ff) >> 0);
 441          //                              paramTX_temp[1] = (u8)((PANID & 0xff00) >> 8);
 442          //                              
 443          //                      }break;
 444          //                      
 445          //                      case loop_CHANNELS:{
 446          //                      
 447          //                              paramTX_temp[0] = (u8)((chnl_temp & 0x000000ff) >>  0);
 448          //                              paramTX_temp[1] = (u8)((chnl_temp & 0x0000ff00) >>  8);
 449          //                              paramTX_temp[2] = (u8)((chnl_temp & 0x00ff0000) >> 16);
 450          //                              paramTX_temp[3] = (u8)((chnl_temp & 0xff000000) >> 24);
 451          //                              
 452          //                      }break;
 453          //                      
 454          //                      default:{
 455          //                      
 456          //                              memcpy(paramTX_temp,ZigbInit_dats[loop].zigbInit_reqDAT,ZigbInit_dats[loop].reqDAT_num);
 457          //                              
 458          //                      }break;
 459          //              }
 460          //      
 461          //              delayMs(100);
 462          //              if(0 == zigb_VALIDA_INPUT((u8 *)ZigbInit_dats[loop].zigbInit_reqCMD,
 463          //                                                                (u8 *)paramTX_temp,
 464          //                                                                ZigbInit_dats[loop].reqDAT_num,
 465          //                                                                (u8 *)ZigbInit_dats[loop].zigbInit_REPLY,
 466          //                                                                ZigbInit_dats[loop].REPLY_num,
 467          //                                                                3,
 468          //                                                                ZigbInit_dats[loop].timeTab_waitAnsr)
 469          //                                                               )loop = 0;
 470          //      }
 471          //      
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 9   

 472          //      return zigb_clusterSet(13, 13); //Éè±¸ID 13£¬ÖÕ¶Ëµã 13£»
 473          //}
 474          
 475          /*zigbee Ö÷¶¯¿ª·ÅÍøÂç*///×èÈû
 476          bit ZigB_nwkOpen(bit openIF, u8 openTime){
 477   1      
 478   1              datsAttr_ZigbInit code default_param = {{0x26,0x08}, {0xFC,0xFF,0x00}, 0x03, {0xFE,0x01,0x66,0x08,0x00,0x
             -6F}, 0x06, 150}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 479   1              
 480   1              bit resultSet = 0;
 481   1              
 482   1              u8 openTime_temp = 0;
 483   1              
 484   1      #define paramLen_zigbNwkOpen 3
 485   1              u8 xdata paramTX_temp[paramLen_zigbNwkOpen] = {0xFC,0xFF,0x00};
 486   1              
 487   1              (openIF)?(paramTX_temp[2] = openTime):(paramTX_temp[2] = 0);
 488   1              
 489   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 490   1                                                                        (u8 *)paramTX_temp,
 491   1                                                                        default_param.reqDAT_num,
 492   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 493   1                                                                        default_param.REPLY_num,
 494   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 495   1                                                                        default_param.timeTab_waitAnsr);
 496   1      
 497   1      #if(DEBUG_LOGOUT_EN == 1)       
 498   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 499   1      //              u8 xdata log_buf[64];
 500   1      //              
 501   1      //              sprintf(log_buf, "nwkOpen result:%d.\n", (int)resultSet);
 502   1      //              PrintString1_logOut(log_buf);
 503   1      //      }
 504   1      #endif
 505   1              
 506   1              return resultSet;
 507   1      }
 508          
 509          /*zigbee PANID»ñÈ¡*///×èÈû
 510          static u16 ZigB_getPanIDCurrent(void){
 511   1      
 512   1              u16 PANID_temp = 0;
 513   1              
 514   1      #define paramLen_zigbPanIDGet 32
 515   1              u8 xdata paramTX_temp[paramLen_zigbPanIDGet] = {0};
 516   1              
 517   1              u8 code frameREQ_zigbPanIDGet[6] = {0xFE, 0x01, 0x26, 0x06, 0x06, 0x27};        //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 518   1              u8 code cmdResp_zigbPanIDGet[2]  = {0x66, 0x06};        //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 519   1              u8 datsResp_Len = 0;
 520   1      
 521   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbPanIDGet, 6, cmdResp_zigbPanIDGet, paramTX_temp, 2, 300);
 522   1      
 523   1              if(datsResp_Len){
 524   2      
 525   2                      PANID_temp |= (((u16)(paramTX_temp[5]) << 0) & 0x00FF);
 526   2                      PANID_temp |= (((u16)(paramTX_temp[6]) << 8) & 0xFF00);
 527   2      
 528   2      //              printf_datsHtoA("[Tips_uartZigb]: resultDats:", local_datsParam->frameResp, local_datsParam->frameResp
             -Len);
 529   2              }
 530   1      
 531   1              return PANID_temp;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 10  

 532   1      }
 533          
 534          /*zigbeeÏµÍ³Ê±¼ä»ñÈ¡²¢¸üĞÂ*///×èÈû
 535          static bit getSystemTime_reales(void){
 536   1              
 537   1              bit resultOpreat = 0;
 538   1      
 539   1      #define paramLen_zigbSystimeGet 32
 540   1              u8 xdata paramTX_temp[paramLen_zigbSystimeGet] = {0};
 541   1              
 542   1              u8 code frameREQ_zigbSystimeGet[5] = {0xFE, 0x00, 0x21, 0x11, 0x30};    //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 543   1              u8 code cmdResp_zigbSystimeGet[2]  = {0x61, 0x11};      //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 544   1              u8 datsResp_Len = 0;
 545   1      
 546   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbSystimeGet, 5, cmdResp_zigbSystimeGet, paramTX_temp, 2, 300)
             -;
 547   1              
 548   1              if(!datsResp_Len)resultOpreat = 0;
 549   1              else{
 550   2                      
 551   2                      u16 Y_temp16 = ((u16)paramTX_temp[13] << 0) | ((u16)paramTX_temp[14] << 8);
 552   2                      u8  Y_temp8 = 0;
 553   2                      u8  M_temp8 = 0;
 554   2                      
 555   2                      u8 Y = (u8)(Y_temp16 % 2000);
 556   2                      u8 M = paramTX_temp[11];
 557   2                      u8 D = paramTX_temp[12];
 558   2                      u8 W = 0;
 559   2                      
 560   2                      /*¼ÆËã»º´æ¸³Öµ*/
 561   2                      Y_temp8 = Y;
 562   2                      if(M == 1 || M == 2){ //Ò»ÔÂºÍ¶şÔÂµ±×÷ÉÏÒ»ÄêÊ®ÈıÔÂºÍÊ®ËÄÔÂ
 563   3                      
 564   3                              M_temp8 = M + 12;
 565   3                              Y_temp8 --;
 566   3                      }
 567   2                      else M_temp8 = M;
 568   2                      
 569   2                      /*¿ªÊ¼¼ÆËã*/
 570   2                      W =      Y_temp8 + (Y_temp8 / 4) + 5 - 40 + (26 * (M_temp8 + 1) / 10) + D - 1;  //²ÌÀÕ¹«Ê½
 571   2                      W %= 7; 
 572   2                      
 573   2                      /*¼ÆËã½á¹û¸³Öµ*/
 574   2                      W?(systemTime_current.time_Week = W):(systemTime_current.time_Week = 7);
 575   2                      
 576   2                      systemTime_current.time_Month =         M;
 577   2                      systemTime_current.time_Day =           D;
 578   2                      systemTime_current.time_Year =          Y;
 579   2                      
 580   2                      systemTime_current.time_Hour =          paramTX_temp[8];
 581   2                      systemTime_current.time_Minute =        paramTX_temp[9];
 582   2                      systemTime_current.time_Second =        paramTX_temp[10];
 583   2                      
 584   2                      /*±¾µØÊ±¼äÎ¬³Ö¼ÆÊıÖµĞ£×¼¸üĞÂ*/
 585   2                      sysTimeKeep_counter = systemTime_current.time_Minute * 60 + systemTime_current.time_Second; //ÏµÍ³Ê±¼äÎ¬
             -³Ö¼ÆÊıÖµ¸üĞÂ
 586   2                      
 587   2                      resultOpreat = 1;
 588   2              }
 589   1              
 590   1      #if(DEBUG_LOGOUT_EN == 1)       
 591   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 11  

 592   1      //              u8 xdata log_buf[64];
 593   1      //              
 594   1      //              sprintf(log_buf, "sysTime reales result:%d.\n", (int)resultOpreat);
 595   1      //              PrintString1_logOut(log_buf);
 596   1      //      }
 597   1      #endif
 598   1              
 599   1              return resultOpreat;
 600   1      }
 601          
 602          /*zigbeeÏµÍ³Ê±¼äÉèÖÃ*///×èÈû
 603          static
 604          bit zigB_sysTimeSet(u32 timeStamp, bit timeZoneAdjust_IF){
 605   1      
 606   1              datsAttr_ZigbInit code default_param = {{0x21,0x10},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00},0x0B,{0xFE,0x01,0x61,0x10,0x00},0x05,100}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 607   1              u8 xdata timeStampArray[0x0B] = {0};
 608   1              bit resultSet = 0;
 609   1              u32 timeStamp_temp = timeStamp;
 610   1              
 611   1              if(timeZoneAdjust_IF){ //ÊÇ·ñĞèÒªÊ±Çøµ÷Õû
 612   2              
 613   2                      if(sysTimeZone_H <= 12){
 614   3                      
 615   3                              timeStamp_temp += (3600UL * (long)sysTimeZone_H + 60UL * (long)sysTimeZone_M); //Ê±ÇøÕı
 616   3                              
 617   3                      }else
 618   2                      if(sysTimeZone_H > 12 && sysTimeZone_H <= 24){
 619   3                      
 620   3                              timeStamp_temp -= (3600UL * (long)(sysTimeZone_H - 12) + 60UL * (long)sysTimeZone_M); //Ê±Çø¸º
 621   3                              
 622   3                      }else
 623   2                      if(sysTimeZone_H >= 30){
 624   3                      
 625   3                              timeStamp_temp += (3600UL * (long)(sysTimeZone_H - 17) + 60UL * (long)sysTimeZone_M); //Ê±ÇøÌØÊâ
 626   3                      }
 627   2              }
 628   1      
 629   1              timeStampArray[0] = (u8)((timeStamp_temp & 0x000000ff) >> 0);
 630   1              timeStampArray[1] = (u8)((timeStamp_temp & 0x0000ff00) >> 8);
 631   1              timeStampArray[2] = (u8)((timeStamp_temp & 0x00ff0000) >> 16);
 632   1              timeStampArray[3] = (u8)((timeStamp_temp & 0xff000000) >> 24);
 633   1              
 634   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 635   1                                                                        (u8 *)timeStampArray,
 636   1                                                                        default_param.reqDAT_num,
 637   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 638   1                                                                        default_param.REPLY_num,
 639   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 640   1                                                                        default_param.timeTab_waitAnsr);
 641   1              
 642   1      #if(DEBUG_LOGOUT_EN == 1)       
 643   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 644   1      //              u8 xdata log_buf[64];
 645   1      //              
 646   1      //              sprintf(log_buf, "sysTime set result:%d.\n", (int)resultSet);
 647   1      //              PrintString1_logOut(log_buf);
 648   1      //      }
 649   1      #endif
 650   1              
 651   1              return resultSet;
 652   1      }
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 12  

 653          
 654          ///*zigbeeÓ²¼ş¸´Î»³õÊ¼»¯*///×èÈû
 655          //bit ZigB_resetInit(void){
 656          
 657          //#define zigbInit_loopTry              3
 658          //#define zigbInit_onceWait     5000
 659          
 660          //      u8 code initCmp_Frame[11] = {0xFE, 0x06, 0x41, 0x80, 0x01, 0x02, 0x00, 0x02, 0x06, 0x03, 0xC3};
 661          //      
 662          //      u8      loop = 0;
 663          //      u16 timeWait = 0;
 664          //      
 665          //      for(loop = 0; loop < zigbInit_loopTry; loop ++){
 666          //      
 667          //              zigbPin_RESET = 0;
 668          //              delayMs(100);
 669          //              zigbPin_RESET = 1;
 670          //              
 671          //              timeWait = zigbInit_onceWait;
 672          //              while(timeWait --){
 673          //              
 674          //                      delayMs(2);     //±ØĞëÑÓÊ±
 675          //                      if(uartRX_toutFLG){
 676          //                      
 677          //                              uartRX_toutFLG = 0;
 678          //                              
 679          //                              if(!memcmp(datsRcv_ZIGB.rcvDats, initCmp_Frame, 11)){
 680          //                              
 681          //                                      return 1;
 682          //                                      
 683          //                              }else{
 684          //                                      
 685          //                                      delayMs(1);     //±ØĞëÑÓÊ±
 686          //                              }
 687          //                      }
 688          //              }
 689          //      }
 690          //      
 691          //      return 0;
 692          //}
 693          
 694          ///*zigbee³õÊ¼»¯×Ô¼ì*///×èÈû
 695          //bit ZigB_inspectionSelf(void){        
 696          //      
 697          //#define       paramLen_zigbInspection 64
 698          //      u8 xdata paramTX_temp[paramLen_zigbInspection] = {0};
 699          //      
 700          ////    bit REQResult = 0;
 701          //      
 702          ////    u8 code frameREQ_zigbStatusCheck[5] = {0xFE, 0x00, 0x27, 0x00, 0x27};   //zigb×´Ì¬²éÑ¯Ö¸ÁîÖ¡
 703          ////    u8 code cmdResp_zigbStatusCheck[2]      = {0x67, 0x00}; //zigb×´Ì¬²éÑ¯ÏìÓ¦Ö¸Áî
 704          //      u8 code frameREQ_zigbJoinNWK[5]         = {0xFE, 0x00, 0x26, 0x00, 0x26};       //zigb¼¤»îÍøÂçÖ¸ÁîÖ¡
 705          //      u8 code cmdResp_zigbJoinNWK[2]          = {0x45, 0xC0}; //zigb¼¤»îÍøÂçÏìÓ¦Ö¸Áî
 706          //      u8 datsResp_Len = 0;
 707          //      
 708          ////    datsResp_Len = zigb_datsRequest(frameREQ_zigbStatusCheck, 5, cmdResp_zigbStatusCheck, paramTX_temp, 2
             -, 500);
 709          ////    if(paramTX_temp[16] == 0x07)REQResult
 710          //      
 711          //      datsResp_Len = zigb_datsRequest(frameREQ_zigbJoinNWK, 5, cmdResp_zigbJoinNWK, paramTX_temp, 2, 5000);
 712          //      if(paramTX_temp[4] == 0x07)return (zigb_clusterSet(13, 13) & zigb_clusterSet(13, 14));  //Éè±¸ID 13£¬ÖÕ¶
             -Ëµã 13£»        
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 13  

 713          //      else{
 714          //      
 715          //              return 0;
 716          //      }
 717          //}
 718          
 719          /*zigbee·Ç×èÈûÈëÍøÇëÇó×´Ì¬»ú*///·Ç×èÈû ---ĞÅµÀÄ¬ÈÏµÚËÄĞÅµÀ
 720          static 
 721          void zigB_nwkJoinRequest(bit reJoin_IF){
 722   1      
 723   1      #define cmdNum_zigbNwkREQ       9       
 724   1      
 725   1              datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkREQ] = {
 726   1      
 727   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Ó²¼ş)
 728   1      //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x00,0x02,0x00,0x02,0x06,0x03,0xC2},       0x0B,   4000    },      
             -//¸´Î»(Ìæ²¹)
 729   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Èí¼ş)
 730   1                      {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³õÊ
             -¼»¯£¬È«²¿Çå¿Õ
 731   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¶ş´Î¸´Î»(Èí¼ş)
 732   1                      
 733   1      //              {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Ğ­µ÷Æ÷£©
 734   1                      {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖÃ£
             -¨Â·ÓÉÆ÷£©
 735   1      //              {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨ÖÕ¶Ë£©
 736   1                      
 737   1                      {       {0x27,0x02},    {0xFF,0xFF},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ÷É
             -èÖÃ
 738   1                      {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµÀ¼
             -Ä´æÆ÷ÅäÖÃ
 739   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 740   1                      {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   8000    },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨½ÇÉ
             -«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 741   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 742   1                      {       {0x26,0x08},    {0xFC,0xFF,0x00},               0x03,   {0xFE,0x01,0x66,0x08,0x00,0x6F},                                                        0x06,   150             },  //¹Ø±Õ
             -ÍøÂç
 743   1              };
 744   1              
 745   1              datsAttr_ZigbInit code defaultParam_clusterRegister = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x
             -01,0x00,0x00,0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,500};  //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 746   1              u8 code frameResponseSubs_clusterRegister[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾
             -­×¢²á
 747   1              
 748   1      #define clusterNum_default 3
 749   1              datsAttr_clusterREG code cluster_Default[clusterNum_default] = {
 750   1              
 751   1                      {ZIGB_ENDPOINT_CTRLSECENARIO, zigbDatsDefault_ClustID}, 
 752   1                      {ZIGB_ENDPOINT_CTRLNORMAL, zigbDatsDefault_ClustID}, 
 753   1                      {ZIGB_ENDPOINT_CTRLSYSZIGB, zigbDatsDefault_ClustID}
 754   1              };
 755   1              
 756   1      #define dataLen_zigbNwkREQ 64
 757   1              u8 xdata paramTX_temp[dataLen_zigbNwkREQ] = {0};
 758   1              
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 14  

 759   1              static u8 xdata step_CortexA = 0, //×´Ì¬»ú-Ö÷²½Öè
 760   1                                xdata step_CortexB = 0; //×´Ì¬»ú-×Ó²½Öè
 761   1              static u8 xdata reactionLoop = 0; //ÖØ¸´´ÎÊı»º´æ
 762   1                         u8 xdata actionReaptDefine_normal = 2; //ÖØ¸´´ÎÊı¶¨Òå_³£¹æÖ¸ÁîÏÂ
 763   1              
 764   1              u8 datsTX_Len = 0;
 765   1              
 766   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
 767   2              
 768   2                      devStatus_switch.statusChange_IF = 0;
 769   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
 770   2                      
 771   2                      step_CortexA = 0;
 772   2                      step_CortexB = 0;
 773   2                      reactionLoop = 0;
 774   2                      zigbPin_RESET = 1;
 775   2                      
 776   2                      return;
 777   2              }
 778   1              
 779   1              if(step_CortexA > (cmdNum_zigbNwkREQ + clusterNum_usr + clusterNum_default)){ //ÅĞ¶Ïµ±Ç°×´Ì¬»úÄÚ²¿×´Ì¬Á÷³
             -ÌÊÇ·ñÍê³É
 780   2              
 781   2                      step_CortexA = 0;
 782   2                      step_CortexB = 0;
 783   2                      reactionLoop = 0;
 784   2                      zigbPin_RESET = 1;
 785   2                      
 786   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES; //systime¸üĞÂÖÜÆÚÖØÖÃ£¬·ÀÖ¹¶àÖ¸Áî¶ÂÈû³åÍ»
 787   2                      
 788   2                      devRunning_Status = status_passiveDataRcv; //Íâ²¿×´Ì¬ÇĞ»»
 789   2                      devTips_status = status_Normal; //Éè±¸ÏµÍ³tips×´Ì¬ÇĞ»»
 790   2                      
 791   2                      dev_currentPanid = ZigB_getPanIDCurrent(); //¸üĞÂÒ»´ÎPANID,±ÜÃâ¶ş´ÎÖØĞÂ¼ÓÍø²ĞÁôÀÏµÄPANID
 792   2                      
 793   2      #if(DEBUG_LOGOUT_EN == 1)
 794   2                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 795   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 796   3                              sprintf(log_buf, "nwkZigb connect/rejoin all complete.\n");
 797   3                              PrintString1_logOut(log_buf);
 798   3                      }                       
 799   2      #endif
 800   2                      
 801   2                      return;
 802   2              }
 803   1              
 804   1              if(!reJoin_IF)if(step_CortexA == 0)step_CortexA = 7; //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔò²»½øĞĞÓ²¼ş¸´Î»(Ó²¼ş¸
             -´Î»½«µ¼ÖÂ±¾µØÊ±¼ä±»ÖØÖÃ)
 805   1              if((step_CortexA == 7) || (step_CortexA == 0))sysTimeReales_counter     = PERIOD_SYSTIMEREALES; //·Ç×èÈû¹Ø¼üÖ
             -¸Áî²»ÄÜ±»×èÈûÖ¸Áî´ò¶Ï£¨Ó²¼ş¸´Î» ºÍ ÈëÍøÊ± ÖĞ¶Ï×èÈûÖ¸ÁîÏÂ´ï£©
 806   1              
 807   1      #if(DEBUG_LOGOUT_EN == 1)
 808   1              {//Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 809   2              #define STATUSMACHINE_NWKREQ_DISPINITVAL 255
 810   2                      static u8 xdata stepDisp_CortexA = STATUSMACHINE_NWKREQ_DISPINITVAL;
 811   2                      
 812   2                      if(stepDisp_CortexA != step_CortexA){
 813   3                      
 814   3                              stepDisp_CortexA = step_CortexA;
 815   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 816   3                              sprintf(log_buf, "nwkZigb connect/rejoin mainStep-%02d@method:%d complete.\n", (int)stepDisp_CortexA, (
             -int)reJoin_IF);
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 15  

 817   3                              PrintString1_logOut(log_buf);
 818   3                      }
 819   2              }
 820   1      #endif
 821   1              
 822   1              if(step_CortexA == 0){ //ÌØÊâÖ¸Áî_Ó²¼ş¸´Î»:<0>
 823   2              
 824   2                      switch(step_CortexA){
 825   3                      
 826   3                              case 0:{ //Ê×ÌõÖ¸Áî£¬Ó²¼ş¸´Î»
 827   4                              
 828   4                                      switch(step_CortexB){
 829   5                                      
 830   5                                              case 0:{ //²½ÖèÒ»£ºÓ²¼şÀ­µÍ100ms
 831   6                                              
 832   6                                                      zigbPin_RESET = 0;
 833   6                                                      zigbNwkAction_counter = 200;
 834   6                                                      step_CortexB = 1;
 835   6                                              
 836   6                                              }break;
 837   5                                      
 838   5                                              case 1:{ //²½Öè¶ş£ºÓ²¼şÀ­µÍÍê±ÏºóÈ·ÈÏÓ¦´ğÖ¡Ê±³¤
 839   6                                              
 840   6                                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı6000ms
 841   7                                                      
 842   7                                                              zigbPin_RESET = 1;
 843   7                                                              zigbNwkAction_counter = 6000;
 844   7                                                              step_CortexB = 2;
 845   7                                                      }
 846   6                                                      
 847   6                                              }break;
 848   5                                              
 849   5                                              case 2:{ //²½Öè¶ş£ºÈ·ÈÏÓ¦´ğÖ¡
 850   6                                                      
 851   6                                                      if(!zigbNwkAction_counter)step_CortexB = 0; //·Ç×èÈûµÈ´ıÏìÓ¦
 852   6                                              
 853   6                                                      if(uartRX_toutFLG){
 854   7                                                      
 855   7                                                              uartRX_toutFLG = 0;
 856   7                                                              
 857   7                                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[0].zigbInit_REPLY, ZigbInit_dats[0].RE
             -PLY_num)){
 858   8                              
 859   8                                                                      step_CortexB = 0;
 860   8                                                                      reactionLoop = 0;
 861   8                                                                      step_CortexA ++;
 862   8                                                              }
 863   7                                                      }
 864   6                                                      
 865   6                                              }break;
 866   5                                      }
 867   4                                      
 868   4                              }break;
 869   3                      }
 870   2              }else
 871   1              if(step_CortexA > 0 && step_CortexA < cmdNum_zigbNwkREQ){ //³£¹æÖ¸Áî:<1 - 9>
 872   2                      
 873   2      //              if(!reJoin_IF)if(step_CortexA == 2)step_CortexA = 7;    //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔòÖ»½øĞĞ±»¶¯ÍøÂç¼¤»
             -î
 874   2      
 875   2                      switch(step_CortexB){
 876   3                      
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 16  

 877   3                              case 0:{
 878   4                                      
 879   4                                      (step_CortexA == 7)?(actionReaptDefine_normal = 12):(actionReaptDefine_normal =  2); //ÓÉÓÚÈëÍø¹ı³Ì½Ï¸
             -´ÔÓ£¬ÈëÍøÖ¸ÁîµÈ´ıÊ±¼ä·Å³¤
 880   4                                      
 881   4                                      if(reactionLoop > actionReaptDefine_normal){
 882   5                                              
 883   5                                              reactionLoop = 0;
 884   5                                              step_CortexA = 0;
 885   5                                              break;
 886   5                                      }
 887   4                                      
 888   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 889   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqCMD, 
 890   4                                                                                                2, 
 891   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqDAT, 
 892   4                                                                                                ZigbInit_dats[step_CortexA].reqDAT_num);
 893   4                                      
 894   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 895   4                                      
 896   4                                      zigbNwkAction_counter = ZigbInit_dats[step_CortexA].timeTab_waitAnsr;
 897   4                                      step_CortexB = 1;
 898   4                                      
 899   4                              }break;
 900   3                                      
 901   3                              case 1:{
 902   4                                      
 903   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 904   5                                      
 905   5                                              reactionLoop ++;
 906   5                                              step_CortexB = 0;
 907   5                                      }
 908   4                                      else
 909   4                                      if(uartRX_toutFLG){
 910   5                                      
 911   5                                              uartRX_toutFLG = 0;
 912   5                                              
 913   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[step_CortexA].zigbInit_REPLY, ZigbInit_d
             -ats[step_CortexA].REPLY_num)){
 914   6                                              
 915   6                                                      step_CortexB = 0;
 916   6                                                      reactionLoop = 0;
 917   6                                                      step_CortexA ++;
 918   6                                              }
 919   5                                      }
 920   4                                      
 921   4                              }break;
 922   3                      }
 923   2                      
 924   2              }else
 925   1              if(step_CortexA >= cmdNum_zigbNwkREQ){ //ÌØÊâÖ¸Áî_³£¹æÍ¨ĞÅ´Ø×¢²á:<10 - n>
 926   2                      
 927   2                      u8 datsREG_cluster[16] = {0};
 928   2                      memcpy(datsREG_cluster, defaultParam_clusterRegister.zigbInit_reqDAT, defaultParam_clusterRegister.reqDA
             -T_num);
 929   2                      if(step_CortexA < (cmdNum_zigbNwkREQ + clusterNum_default)){ //Ä¬ÈÏ×¨ÓÃÍ¨ĞÅ´Ø²ÎÊıÌî×°
 930   3                      
 931   3                              datsREG_cluster[0] = cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].endpoint;
 932   3                              datsREG_cluster[3] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0x00ff) >> 0);
 933   3                              datsREG_cluster[4] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0xff00) >> 8);
 934   3                              
 935   3                      }else{  //ÓÃ»§Í¨ĞÅ´Ø£¨»¥¿Ø£©×¢²á²ÎÊıÌî×°
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 17  

 936   3                      
 937   3                              if((CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] >= 0x10) && (CTRLEATHER_PORT[ste
             -p_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] < 255)){ //Í¨ĞÅ´Ø¶Ë¿ÚºÏ·¨ĞÔÅĞ¶Ï
 938   4                              
 939   4                                      datsREG_cluster[0] = CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr];
 940   4                                      datsREG_cluster[3] = zigbDatsDefault_ClustID; //Ä¬ÈÏ´ØID <LSB>
 941   4                                      datsREG_cluster[4] = 0; //Ä¬ÈÏ´ØID <MSB>
 942   4                                      
 943   4                              }else{
 944   4                              
 945   4                                      step_CortexA ++;
 946   4                                      return;
 947   4                              }
 948   3                      }
 949   2              
 950   2                      switch(step_CortexB){
 951   3                      
 952   3                              case 0:{
 953   4                                      
 954   4                                      if(reactionLoop > 2){
 955   5                                              
 956   5                                              reactionLoop = 0;
 957   5                                              step_CortexA = 0;
 958   5                                              break;
 959   5                                      }
 960   4                                      
 961   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 962   4                                                                                                defaultParam_clusterRegister.zigbInit_reqCMD, 
 963   4                                                                                                2, 
 964   4                                                                                                datsREG_cluster, 
 965   4                                                                                                defaultParam_clusterRegister.reqDAT_num);
 966   4                                      
 967   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 968   4                                      
 969   4                                      zigbNwkAction_counter = defaultParam_clusterRegister.timeTab_waitAnsr;
 970   4                                      step_CortexB = 1;
 971   4                                      
 972   4                              }break;
 973   3                                      
 974   3                              case 1:{
 975   4                                      
 976   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 977   5                                      
 978   5                                              reactionLoop ++;
 979   5                                              step_CortexB = 0;
 980   5                                      }
 981   4                                      else
 982   4                                      if(uartRX_toutFLG){
 983   5                                      
 984   5                                              uartRX_toutFLG = 0;
 985   5                                              
 986   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, defaultParam_clusterRegister.zigbInit_REPLY, defaultPa
             -ram_clusterRegister.REPLY_num) || //Ô¤ÆÚÏìÓ¦
 987   5                                                 memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, frameResponseSubs_clusterRegister, 6)){ //Ìæ²¹ÏìÓ¦
 988   6                                              
 989   6                                                      step_CortexB = 0;
 990   6                                                      reactionLoop = 0;
 991   6                                                      step_CortexA ++;
 992   6                                              }
 993   5                                      }
 994   4                                      
 995   4                              }break;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 18  

 996   3                      }
 997   2              }
 998   1      }
 999          
1000          /*zigbeeÍøÂçÊı¾İ·¢ËÍ¸ñÊ½»¯Ìî×°*/
1001          static 
1002          u8 zigb_datsLoad_datsSend(u8  frame_Temp[NORMALDATS_DEFAULT_LENGTH],
1003                                                            u16 DstAddr,
1004                                                            u8  portPoint,
1005                                                            u8  dats[],
1006                                                            u8  datsLen){
1007   1              
1008   1              u8 code zigbCMD_DatsSend[2] = {0x24, 0x01};
1009   1              
1010   1      #define zigbDatsSend_datsTransLen       72
1011   1              u8 xdata buf_datsLOAD[zigbDatsSend_datsTransLen] = {0};
1012   1              u8 datsTX_Len = 0;
1013   1                                                                
1014   1              memset(frame_Temp, 0, NORMALDATS_DEFAULT_LENGTH * sizeof(u8));  
1015   1      
1016   1              //·¢ËÍÖ¡Ìî×°
1017   1              buf_datsLOAD[0] = (u8)((DstAddr & 0x00ff) >> 0);
1018   1              buf_datsLOAD[1] = (u8)((DstAddr & 0xff00) >> 8);
1019   1              buf_datsLOAD[2] = portPoint;
1020   1              buf_datsLOAD[3] = portPoint;
1021   1              buf_datsLOAD[4] = zigbDatsDefault_ClustID;
1022   1              buf_datsLOAD[6] = zigbDatsDefault_TransID;
1023   1              buf_datsLOAD[7] = zigbDatsDefault_Option;
1024   1              buf_datsLOAD[8] = zigbDatsDefault_Radius;
1025   1              buf_datsLOAD[9] = datsLen;
1026   1              memcpy(&buf_datsLOAD[10], dats, datsLen);       
1027   1              
1028   1              return ZigB_TXFrameLoad(frame_Temp, (u8 *)zigbCMD_DatsSend, 2, buf_datsLOAD, datsLen + 10);
1029   1      }
1030          
1031          /*zigbeeÎŞÊÓÏìÓ¦»Ø¸´Ö±½Ó·¢ËÍÊı¾İ*///×èÈû
1032          static
1033          void dataSendRemote_straightforward( u16 DstAddr, //Ô¶¶ËÍøÂç¶ÌµØÖ·
1034                                                                                    u8 port,       //¶Ëµã¿Ú
1035                                                                                    u8 dats[], //Êı¾İ
1036                                                                                    u8 datsLen ){ //Êı¾İ³¤¶È
1037   1                                                                                                                                                
1038   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1039   1              u8 datsTX_Len = 0;
1040   1              
1041   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, DstAddr, port, dats, datsLen);
1042   1              
1043   1              uartZigB_datsSend(buf_datsTX, datsTX_Len);
1044   1      }
1045          
1046          /*zigbeeÍøÂçÊı¾İ·¢ËÍÇëÇó×´Ì¬»ú*///·Ç×èÈû
1047          static
1048          void dataTransRequest_datsSend(void){
1049   1      
1050   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1051   1              u8 datsTX_Len = 0;
1052   1              
1053   1      #define zigbDatsSend_datsRespLen        64
1054   1              u8 xdata buf_datsRX[zigbDatsSend_datsRespLen] = {0};
1055   1              u8 datsRX_Len = 0;
1056   1              
1057   1      #define zigbDatsSend_ASR_datsLen        3
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 19  

1058   1              u8              ASR_dats[zigbDatsSend_ASR_datsLen] = {0};
1059   1              u8 code ASR_cmd[2] = {0x44,0x80};       //±¾µØZNPĞ­Òé²ãÈ·ÈÏ·¢ËÍÏìÓ¦
1060   1              
1061   1      #define resCODE_datsSend_NOROUTER 0xCD  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-Â·ÓÉÊ§Áª£¬Í¨Ñ¶Ã½½é¶ªÊ§
1062   1      #define resCODE_datsSend_NOREMOTE 0xE9  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-¶Ô·½²»ÔÚÏß£¬Ä¿±êµØÖ·½ÚµãÉè±¸²»´æÔÚ
1063   1      #define resCODE_datsSend_TIMEOUT  0x01  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³¬Ê±
1064   1      #define resCODE_datsSend_SUCCESS  0x00  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³É¹¦
1065   1              static u8 datsTrans_respondCode = 0; //·¢ËÍÍê³ÉÏìÓ¦Âë
1066   1              
1067   1              static u8 step = 0;
1068   1              static u8 reactionLoop = 0;
1069   1              
1070   1              if(devStatus_switch.statusChange_IF){   //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1071   2              
1072   2                      devStatus_switch.statusChange_IF = 0;
1073   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1074   2                      
1075   2                      step = 0;
1076   2                      reactionLoop = 0;
1077   2                      
1078   2                      return;
1079   2              }
1080   1              
1081   1              //½ÓÊÕÖ¡Ìî×°_±¾µØ
1082   1              ASR_dats[0] = resCODE_datsSend_SUCCESS; //·¢ËÍ³É¹¦ÏìÓ¦´úÂë
1083   1              ASR_dats[1] = datsSend_request.portPoint;
1084   1              ASR_dats[2] = zigbDatsDefault_TransID;
1085   1              datsRX_Len = ZigB_TXFrameLoad(buf_datsRX, (u8 *)ASR_cmd, 2, ASR_dats, zigbDatsSend_ASR_datsLen);
1086   1              
1087   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, datsSend_request.nwkAddr, datsSend_request.portPoint, dat
             -sSend_request.datsTrans.dats, datsSend_request.datsTrans.datsLen);
1088   1              
1089   1              switch(step){
1090   2              
1091   2                      case 0:{ //ÏìÓ¦½ÓÊÕ¾ÍĞ÷£¬ÉèÖÃÏìÓ¦Ê±¼ä
1092   3                              
1093   3                              if(reactionLoop > 3){ //ÖØ·¢´ÎÊıÒÑ³¬³ö
1094   4                                      
1095   4                                      datsTrans_respondCode = resCODE_datsSend_TIMEOUT; //ÏìÓ¦Âë¸ÄÎª³¬Ê±
1096   4                                      
1097   4                                      reactionLoop = 0;
1098   4                                      step = 4;
1099   4                                      
1100   4                                      break;
1101   4                              }
1102   3                      
1103   3                              zigbPin_RESET = 1; //±£ÏÕÆğ¼û£¬¸´Î»À­¸ß
1104   3                              if(!devRemoteDataReqMethod.keepTxUntilCmp_IF)uartZigB_datsSend(buf_datsTX, datsTX_Len); //·ÇËÀ¿Ä£¬·¢Ò»´
             -Î¾ÍĞĞ
1105   3                              zigbNwkAction_counter = REMOTE_DATAREQ_TIMEOUT; //Ä¬ÈÏĞ­Òé²ãÏìÓ¦Ê±¼ä<Ê±¼äÌ«¶ÌÎŞ·¨ÊÕµ½ºóÃæµÄ½ÓÊÕ×´Ì¬ÏìÓ¦
             -Ö¸Áî£¬Ö»ÄÜÊÕµ½ÏµÍ³ÏìÓ¦>
1106   3                              step = 1;
1107   3                              
1108   3                      }break;
1109   2                      
1110   2                      case 1:{ //·Ç×èÈûµÈ´ıÏµÍ³ÏìÓ¦
1111   3                              
1112   3                              static u8 xdata local_funRecord = 0; //±¾µØ ³ı´Î±È ÅĞ¶Ï
1113   3                                         u8 xdata funRecord_temp = zigbNwkAction_counter / devRemoteDataReqMethod.datsTxKeep_Period; //³ı´Î±
             -È£¬ÓÃÓÚÖÜÆÚÅĞ¶Ï
1114   3                      
1115   3                              if(!zigbNwkAction_counter){ //³¬Ê±ÅĞ¶Ï
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 20  

1116   4                              
1117   4                                      reactionLoop ++;
1118   4                                      step = 0;
1119   4                                      local_funRecord = 0;
1120   4                              }
1121   3                              else{
1122   4                                      
1123   4                                      if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //ËÀ¿Ä·½Ê½ÏÂ£¬³¬Ê±Ê±¼äÄÚ£¬ÖÜÆÚÑ­»·ÏÂ·¢Ö¸Áî
1124   5                                              
1125   5                                              if(local_funRecord != funRecord_temp){ //°´³ÖĞøÆµÂÊ³ÖĞø·¢ËÍ
1126   6                                              
1127   6                                                      local_funRecord = funRecord_temp; //±¾µØ³ı´Î±È¸üĞÂ
1128   6                                                      
1129   6                                                      uartZigB_datsSend(buf_datsTX, datsTX_Len);
1130   6                                              }
1131   5                                      }
1132   4                                      
1133   4                                      if(uartRX_toutFLG){
1134   5                                      
1135   5                                              uartRX_toutFLG = 0;
1136   5      
1137   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, buf_datsRX, datsRX_Len)){ //Ó¦´ğÖ¸ÁîºÍÓ¦´ğÂë¶¼ÕıÈ·
1138   6                                              
1139   6                                                      if(datsRcv_respond.datsTrans.datsLen == 0){ //ÅĞ¶ÏÌõ¼şÊÇ·ñĞèÒªÔ¶¶ËÏìÓ¦
1140   7                                                      
1141   7                                                              step = 3;
1142   7                                                              
1143   7                                                      }else{
1144   7                                                      
1145   7                                                              step = 2;
1146   7                                                              zigbNwkAction_counter = REMOTE_RESPOND_TIMEOUT; //Ä¬ÈÏÔ¶¶ËÏìÓ¦Ê±¼ä<¶Ô·½½ÚµãÏìÓ¦>
1147   7                                                      }
1148   6                                                      
1149   6                                                      local_funRecord = 0; //±¾µØ³ı´Î±È¸´Î»
1150   6                                                      
1151   6                                              }else{  
1152   6                                                      
1153   6                                                      if(!memcmp(&datsRcv_ZIGB.rcvDats[2], ASR_cmd, 2)){ //Ó¦´ğÖ¸ÁîÕıÈ·£¬µ«Ó¦´ğÂë´íÎó£¬ÔòÈ¡³ö´íÎóÂë
1154   7                                                      
1155   7                                                              datsTrans_respondCode = datsRcv_ZIGB.rcvDats[4]; //´íÎóÏìÓ¦Âë×°ÔØ
1156   7                                                              
1157   7                                                              if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //·¢ËÍ·½Ê½ÅĞ¶Ï-ÊÇ·ñÎªËÀ¿Ä·½Ê½
1158   8                                                              
1159   8                                                                      
1160   8                                                                      
1161   8                                                              }else{
1162   8                                                              
1163   8                                                                      step = 4; //·ÇËÀ¿Ä·½Ê½£¬ÔòÓĞÓ¦´ğÖ¸Áî£¬µ«Ó¦´ğÊı¾İ´íÎó£¬ÌøÖÁÊ§°Ü²½Öè
1164   8                                                              }
1165   7                                                      }
1166   6                                                      
1167   6      //#if(DEBUG_LOGOUT_EN == 1)
1168   6      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1169   6      //                                                      u8 xdata log_buf[64]; //Êı¾İ´«ÊäÊ§°ÜĞ­Òé²ãÏìÓ¦´úÂë´òÓ¡
1170   6      //                                                      
1171   6      //                                                      sprintf(log_buf, "dats_TX fail code: %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[2], (int)datsR
             -cv_ZIGB.rcvDats[3], (int)datsRcv_ZIGB.rcvDats[4]);
1172   6      //                                                      PrintString1_logOut(log_buf);
1173   6      //                                              }       
1174   6      //#endif                                
1175   6                                              }
1176   5                                      }
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 21  

1177   4                              }
1178   3                              
1179   3                      }break;
1180   2                      
1181   2                      case 2:{ //·Ç×èÈûµÈ´ıÔ¶¶ËÏìÓ¦
1182   3      
1183   3                              if(!zigbNwkAction_counter){
1184   4                              
1185   4                                      reactionLoop ++;
1186   4                                      step = 0;
1187   4                              }
1188   3                              else{
1189   4                                      
1190   4                                      if(uartRX_toutFLG){
1191   5                                              
1192   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
1193   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë  
1194   5                                              
1195   5                                              uartRX_toutFLG = 0;
1196   5                                              
1197   5                                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
1198   6                                              
1199   6      #if(DEBUG_LOGOUT_EN == 1)
1200   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1201   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1202   7                                                              sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
1203   7                                                              PrintString1_logOut(log_buf);
1204   7                                                      }                       
1205   6      #endif  
1206   6                                              }
1207   5      
1208   5                                              if(!memcmp(&(datsRcv_ZIGB.rcvDats[21]), datsRcv_respond.datsTrans.dats, datsRcv_respond.datsTrans.dat
             -sLen) && 
1209   5                                                 (datsRcv_respond.nwkAddr == datsFrom_addr) &&
1210   5                                                      (datsRcv_respond.portPoint == dstPoint)){
1211   6                                              
1212   6                                                      step = 3;
1213   6                                                              
1214   6                                              }else{
1215   6                                              
1216   6      #if(DEBUG_LOGOUT_EN == 1)
1217   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1218   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1219   7      //                                                      sprintf(log_buf, "data remoteRcv is %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[21], (int)datsR
             -cv_ZIGB.rcvDats[22], (int)datsRcv_ZIGB.rcvDats[23]);
1220   7                                                              sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)dstPoint, (int)datsFrom_addr);
1221   7      //                                                      sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)datsRcv_respond.portPoint, (int)d
             -atsRcv_respond.nwkAddr);
1222   7                                                              PrintString1_logOut(log_buf);
1223   7                                                      }       
1224   6      #endif  
1225   6                                              }
1226   5                                      }
1227   4                              }
1228   3                              
1229   3                      }break;
1230   2                      
1231   2                      case 3:{ //ÏìÓ¦³É¹¦
1232   3                      
1233   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1234   4                              
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 22  

1235   4                                      reConnectAfterDatsReq_IF = 0;
1236   4                                      devRunning_Status = status_nwkReconnect;
1237   4                                      
1238   4                              }else{ 
1239   4                              
1240   4                                      devRunning_Status = status_passiveDataRcv;
1241   4                              }
1242   3                              
1243   3                              reactionLoop = 0;
1244   3                              step = 0;
1245   3                              
1246   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1247   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1248   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1249   3                              
1250   3                      }break;
1251   2                      
1252   2                      case 4:{ //ÏìÓ¦Ê§°Ü
1253   3                      
1254   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1255   4                              
1256   4                                      reConnectAfterDatsReq_IF = 0;
1257   4                                      devRunning_Status = status_nwkReconnect;
1258   4                                      
1259   4                              }else{ 
1260   4                              
1261   4                                      devRunning_Status = status_passiveDataRcv;
1262   4                              }
1263   3                              
1264   3                              //Õë¶ÔÊı¾İ´«ÊäÊ§°ÜÏìÓ¦´úÂëÇé¿ö½øĞĞÑ¡ÔñĞÔÖØÁ¬£¬·ñÔò½öÊ±ÇøĞ­µ÷Æ÷Éè±¸¾Ígg
1265   3                              if(datsTrans_respondCode){ 
1266   4                                      
1267   4      #if(DEBUG_LOGOUT_EN == 1)                               
1268   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1269   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1270   5                                              sprintf(log_buf, "remote dataRequest fail, code:[0x%02X].\n", (int)datsTrans_respondCode);
1271   5                                              PrintString1_logOut(log_buf);
1272   5                                      }
1273   4      #endif  
1274   4                                      
1275   4                                      switch(datsTrans_respondCode){ //ÏìÓ¦Ê§°ÜÂë·ÖÎö
1276   5                                      
1277   5                                              case resCODE_datsSend_NOROUTER:
1278   5                                              case resCODE_datsSend_NOREMOTE:
1279   5                                              case resCODE_datsSend_SUCCESS:{
1280   6                                              
1281   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1282   6                                                      
1283   6                                              }break;
1284   5                                              
1285   5                                              default:{
1286   6                                              
1287   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1288   6                                                      
1289   6                                              }break;
1290   5                                      }
1291   4                                      
1292   4                                      datsTrans_respondCode = 0;
1293   4                              }
1294   3                              
1295   3                              reactionLoop = 0;
1296   3                              step = 0;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 23  

1297   3                              
1298   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1299   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1300   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1301   3                              
1302   3                      }break;
1303   2                              
1304   2                      default:{
1305   3                      
1306   3                              step = 4;
1307   3                              
1308   3                      }break;
1309   2              }
1310   1      }
1311          
1312          /*Éè±¸Êı¾İ´«ÊäÖ÷×´Ì¬ÇĞ»»ÖÁÍøÂç¹ÒÆğ*/
1313          void devStatusChangeTo_devHold(bit zigbNwkSysNote_IF){ //Éè±¸ÍøÂç¹ÒÆğ
1314   1      
1315   1              devNwkHoldTime_Param.devHoldTime_counter = DEVHOLD_TIME_DEFAULT;
1316   1              if(zigbNwkSysNote_IF)devNwkHoldTime_Param.zigbNwkSystemNote_IF = 1;
1317   1              
1318   1              devStatus_switch.statusChange_standBy = status_devNwkHold; //Êı¾İ´«Êä×´Ì¬»ú¸ü±ä
1319   1              devStatus_switch.statusChange_IF = 1;
1320   1              
1321   1              devTips_status = status_devHold; //tips¸ü±ä
1322   1              thread_tipsGetDark(0x0F);
1323   1              
1324   1      #if(DEBUG_LOGOUT_EN == 1)                               
1325   1              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1326   2                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1327   2                      sprintf(log_buf, "devHold start right now.\n");
1328   2                      PrintString1_logOut(log_buf);
1329   2              }
1330   1      #endif  
1331   1      }
1332          
1333          /*Éè±¸ÍøÂç¹ÒÆğÍ£Ö¹£¬Ê¹ÌáÇ°½áÊø*/
1334          void devHoldStop_makeInAdvance(void){ //Í£Ö¹Éè±¸ÍøÂç¹ÒÆğ£¨ÌáÇ°£©
1335   1      
1336   1              if(devNwkHoldTime_Param.devHoldTime_counter)devNwkHoldTime_Param.devHoldTime_counter = 0;
1337   1      }
1338          
1339          /*zigbeeÉè±¸ÍøÂç¹ÒÆğ×´Ì¬»ú*///·Ç×èÈû
1340          static 
1341          void function_devNwkHold(void){
1342   1              
1343   1              static status_Step = 0; //µ±Ç°×´Ì¬»ú²½Öè×´Ì¬Ö¸Ê¾
1344   1              
1345   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1346   2              
1347   2                      devStatus_switch.statusChange_IF = 0;
1348   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1349   2                      
1350   2                      status_Step = 0;
1351   2                      zigbNwkAction_counter = 0;
1352   2                      
1353   2                      zigbPin_RESET = 1;
1354   2                      
1355   2                      return;
1356   2              }
1357   1              
1358   1              if(devNwkHoldTime_Param.devHoldTime_counter){ //Ö±µ½¹ÒÆğÊ±¼ä½áÊø
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 24  

1359   2              
1360   2                      if(devNwkHoldTime_Param.zigbNwkSystemNote_IF){ //Í¨Öªµ±Ç°ÍøÂçÄÚ×ÓÉè±¸¹ÒÆğ,±¨Ò»´Î
1361   3                              
1362   3                              u8 xdata dats_Note[3] = {ZIGB_SYSCMD_DEVHOLD, 1, 0}; //ÃüÁî¡¢Êı¾İ³¤¶È¡¢Êı¾İ
1363   3                      
1364   3                              devNwkHoldTime_Param.zigbNwkSystemNote_IF = 0; //Í¨ÖªÊ¹ÄÜ¸´Î»
1365   3                              
1366   3                              dataSendRemote_straightforward( 0xFFFF, //¹ã²¥Í¨ÖªÍøÄÚËùÓĞ×ÓÉè±¸¹ÒÆğ
1367   3                                                                                              ZIGB_ENDPOINT_CTRLSYSZIGB,
1368   3                                                                                              dats_Note,
1369   3                                                                                              3 );
1370   3                              
1371   3                              delayMs(50); //±ØĞèÑÓÊ±£¬·ñÔòÊı¾İ»¹Ã»·¢ËÍ³öÈ¥£¬¾ÍÅÜµ½ÏÂÒ»²½¸´Î»ÁË
1372   3                      }
1373   2                      
1374   2                      { //Éè±¸¹ÒÆğ,Ñ­»·¸´Î»
1375   3                              
1376   3                              switch(status_Step){
1377   4                              
1378   4                                      case 0:{ //¸´Î»200ms
1379   5                                      
1380   5                                              zigbPin_RESET = 0;
1381   5                                              zigbNwkAction_counter = 200;
1382   5                                              status_Step = 1;
1383   5                                      
1384   5                                      }break;
1385   4                                              
1386   4                                      case 1:{ //Ã¿6s¸´Î»Ò»´Î
1387   5                                      
1388   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1389   6                                              
1390   6                                                      zigbPin_RESET = 1;
1391   6                                                      zigbNwkAction_counter = 6000;
1392   6                                                      status_Step = 2;
1393   6                                              }
1394   5                                      
1395   5                                      }break;
1396   4                                      
1397   4                                      case 2:{
1398   5                                      
1399   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1400   6                                              
1401   6                                                      status_Step = 0;
1402   6                                                      
1403   6      #if(DEBUG_LOGOUT_EN == 1)                               
1404   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1405   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1406   7                                                              sprintf(log_buf, "devHold time count remind: %02d s.\n", (int)devNwkHoldTime_Param.devHoldTime_coun
             -ter);
1407   7                                                              PrintString1_logOut(log_buf);
1408   7                                                      }
1409   6      #endif
1410   6                                              }
1411   5                                      
1412   5                                      }break;
1413   4                                      
1414   4                                      default:{
1415   5                                              
1416   5                                              status_Step = 0;
1417   5                                              
1418   5                                      }break;
1419   4                              }
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 25  

1420   3                      }
1421   2      
1422   2              }else{
1423   2              
1424   2                      //¹ÒÆğÊ±¼ä½áÊø,Ö÷×´Ì¬»Ö¸´ÖÁÖØÁ¬£¬±¾µØ×´Ì¬»Ö¸´
1425   2                      status_Step = 0;
1426   2                      zigbPin_RESET = 1;
1427   2                      
1428   2                      devRunning_Status = status_nwkReconnect; //Ö±½Ó½«Ö÷×´Ì¬ÇĞ»»ÖÁÍøÂçÖØÁ¬,²»×ßstandbyÁ÷³Ì
1429   2                      devTips_status = status_Normal; //tips¸ü±ä
1430   2              
1431   2      #if(DEBUG_LOGOUT_EN == 1)                               
1432   2                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1433   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1434   3                              sprintf(log_buf, "devHold stop.\n");
1435   3                              PrintString1_logOut(log_buf);
1436   3                      }
1437   2      #endif  
1438   2              }
1439   1      }
1440          
1441          /*zigbee¼¯Èº¿ØÖÆÊı¾İ½âÎö*/
1442          static 
1443          void dataParing_scenarioCtrl(u8 datsFrame[]){
1444   1      
1445   1              u8 dataTX_temp = CTRLSECENARIO_RESPCMD_SPECIAL;
1446   1              
1447   1              swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
1448   1              swCommand_fromUsr.actMethod = relay_OnOff;
1449   1              
1450   1              colonyCtrlGet_statusLocalScene = datsFrame[0]; //±¾µØ³¡¾°¿ØÖÆÂÖÑ¯Öµ¸üĞÂ(³¡¾°¿ØÖÆ½öÀ´×ÔÓÚÊÖ»ú¿ØÖÆ)
1451   1              
1452   1              dataSendRemote_straightforward(0, ZIGB_ENDPOINT_CTRLSECENARIO, &dataTX_temp, 1); //³¡¾°¿ØÖÆÔ¶¶Ë»Ø¸´
1453   1              
1454   1      #if(DEBUG_LOGOUT_EN == 1)
1455   1              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1456   2                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1457   2                      sprintf(log_buf, "cmdScenarioCtrl comming, statusData:%02X.\n", (int)datsFrame[0]);
1458   2                      PrintString1_logOut(log_buf);
1459   2              }                       
1460   1      #endif          
1461   1      }
1462          
1463          /*zigbeeÏµÍ³½»»¥Êı¾İ½âÎö*/
1464          static 
1465          void dataParing_zigbSysCtrl(u8 datsFrame[]){
1466   1      
1467   1              /*>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<*/
1468   1              /*----------------------------------------------*/
1469   1              /*  frame_CMD   |       frame_dataLen|  frame_data      |
1470   1              /*----------------------------------------------*/
1471   1              /*      1byte           |       1byte            |      < 256byte       |       
1472   1              /*----------------------------------------------*/
1473   1              
1474   1              frame_zigbSysCtrl xdata dats = {0};
1475   1              
1476   1              dats.command = datsFrame[0];
1477   1              memcpy(dats.dats, &datsFrame[2], datsFrame[1]);
1478   1              dats.datsLen = datsFrame[1];
1479   1              
1480   1              switch(dats.command){
1481   2              
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 26  

1482   2                      case ZIGB_SYSCMD_NWKOPEN:{ //ÍøÂç¿ª·Å
1483   3                              
1484   3                              bit resultSet = 0;
1485   3                              
1486   3                              resultSet = ZigB_nwkOpen(1, dats.dats[0]); //¹¦ÄÜ´¥·¢
1487   3                              tips_statusChangeToZigbNwkOpen(dats.dats[0]); //tips´¥·¢
1488   3                              
1489   3      #if(DEBUG_LOGOUT_EN == 1)
1490   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1491   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1492   4                                      sprintf(log_buf, "master cmdComing:nwkOpen:%02ds.\n", (int)dats.dats[0]);
1493   4                                      PrintString1_logOut(log_buf);
1494   4                              }                       
1495   3      #endif          
1496   3                              
1497   3                      }break;
1498   2                      
1499   2                      case ZIGB_SYSCMD_TIMESET:{ //ÏµÍ³Ê±¼äÉè¶¨
1500   3                      
1501   3                              bit resultSet = 0;
1502   3                              bit timeZoneAdjust_needIF = 0;
1503   3                              u32 time_Temp = 0UL;
1504   3                              
1505   3                              time_Temp |= (u32)dats.dats[0] << 0;
1506   3                              time_Temp |= (u32)dats.dats[1] << 8;
1507   3                              time_Temp |= (u32)dats.dats[2] << 16;
1508   3                              time_Temp |= (u32)dats.dats[3] << 24;
1509   3                              if((sysTimeZone_H != dats.dats[4]) || (sysTimeZone_M != dats.dats[5])){ //Ê±ÇøÍ¬²½
1510   4                              
1511   4                                      sysTimeZone_H = dats.dats[4];
1512   4                                      sysTimeZone_M = dats.dats[5];
1513   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1514   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
1515   4                              }
1516   3                              
1517   3                              if(dats.dats[6])timeZoneAdjust_needIF = 1; //Ê±Çø²¹³¥Ê¹ÄÜÅĞ¶Ï
1518   3                              if(time_Temp > ZIGB_UTCTIME_START)resultSet = zigB_sysTimeSet(time_Temp - ZIGB_UTCTIME_START, timeZoneA
             -djust_needIF); //zigbee ±¾µØÏµÍ³Ê±¼äÉèÖÃ<UTC¸º²¹³¥>
1519   3                              
1520   3      #if(DEBUG_LOGOUT_EN == 1)
1521   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1522   4                                      u8 xdata log_buf[64];
1523   4                                      
1524   4                                      sprintf(log_buf, "master UTC coming:[0x%02X%02X%02X%02X].\n", (int)dats.dats[3], (int)dats.dats[2], (i
             -nt)dats.dats[1], (int)dats.dats[0]);
1525   4                                      PrintString1_logOut(log_buf);
1526   4                              }                       
1527   3      #endif  
1528   3                      }break;
1529   2                      
1530   2                      case ZIGB_SYSCMD_DEVHOLD:{ //ÍøÂç¹ÒÆğ£¨ÓÃ×÷Íø¹ØÇĞ»»£©
1531   3                              
1532   3      #if(DEBUG_LOGOUT_EN == 1)
1533   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1534   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1535   4                                      sprintf(log_buf, "node cmdComing:devNwk hold.\n");
1536   4                                      PrintString1_logOut(log_buf);
1537   4                              }                       
1538   3      #endif  
1539   3                              devStatusChangeTo_devHold(0); //Éè±¸ÍøÂç±»¶¯¹ÒÆğ,²»½øĞĞÍøÂçÍ¨Öª
1540   3                              
1541   3                      }break;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 27  

1542   2                      
1543   2                      case ZIGB_SYSCMD_DATATRANS_HOLD:{ //Í¨ĞÅÖ÷¶¯±ÜÕÏ£¬½«ÖÜÆÚĞÔÍ¨ĞÅ¹ÒÆğ
1544   3                              
1545   3      #if(DEBUG_LOGOUT_EN == 1)
1546   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1547   4                                      u8 xdata log_buf[64];
1548   4                                      
1549   4                                      sprintf(log_buf, "master cmd: dtPeriod hold, time:%d.\n", (int)dats.dats[0]);
1550   4                                      PrintString1_logOut(log_buf);
1551   4                              }                       
1552   3      #endif  
1553   3                              if(!heartBeatHang_timeCnt && !colonyCtrlGetHang_timeCnt){ //ÓĞĞ§ÖÜÆÚÄÚ£¬¸¨Öú²¹³ä¹ã²¥Ò»´Î£¬·ÀÖ¹ÆäËû½ÚµãÃ
             -»ÊÕµ½
1554   4                                      
1555   4      //                              PrintString1_logOut("dtPeriod hold one more time.\n");
1556   4      //                              dataSendRemote_straightforward(0xffff, ZIGB_ENDPOINT_CTRLSYSZIGB, datsFrame, datsFrame[1] + 2);
1557   4                                      
1558   4                              }else{
1559   4                              
1560   4      //#if(DEBUG_LOGOUT_EN == 1)
1561   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1562   4      //                                      u8 xdata log_buf[64];
1563   4      //                                      
1564   4      //                                      sprintf(log_buf, "dtPeriod holdAdd err, parm1: %d, parm2: %d.\n", (int)heartBeatHang_timeCnt, (int)
             -colonyCtrlGetHang_timeCnt);
1565   4      //                                      PrintString1_logOut(log_buf);
1566   4      //                              }                       
1567   4      //#endif        
1568   4                              }
1569   3                              
1570   3                              periodDataTrans_momentHang(dats.dats[0]);  //±ÜÕÏÊ±¼ä¼ÓÔØ£¬¶¯×÷Ö´ĞĞ
1571   3                              
1572   3                      }break;
1573   2      
1574   2      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                              case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ¹ÄÜ*///¸üĞÂ¼¯ÈºĞÅÏ¢²¢¶¯×÷
                              
                                      /*>>>>>>>>>>>>>>>>>>>frame_data reference<<<<<<<<<<<<<<<*/
                                      /*------------------------------------------------------*/
                                      /*  frame_data[0]                       |       frame_data[1...3]               |
                                      /*------------------------------------------------------*/
                                      /*      ×î½üÒ»´Î³¡¾°¿ØÖÆ×´Ì¬Öµ  |       ×î½üÒ»´Î»¥¿Ø¸üĞÂ×´Ì¬Öµ  |
                                      /*------------------------------------------------------*/
                                      
                                      u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
                                      
              //#if(DEBUG_LOGOUT_EN == 1)
              //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
              //                                      u8 xdata log_buf[64];
              //                                      
              //                                      sprintf(log_buf, "curRealy_Val:%02X, dataQuery result:%02X %02X %02X %02X.\n",
              //                                                                       (int)status_Relay,
              //                                                                       (int)dats.dats[0],
              //                                                                       (int)dats.dats[1],
              //                                                                       (int)dats.dats[2],
              //                                                                       (int)dats.dats[3]);
              //                                      PrintString1_logOut(log_buf);
              //                              }                       
              //#endif                
                                      if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
                                      
              #if(DEBUG_LOGOUT_EN == 1)
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 28  

                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ scene detect from poling.\n");
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              
                                              //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              colonyCtrlGet_statusLocalScene = dats.dats[0];
                                              
                                              if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
                                              }
                                      }
                                      
                                      if(memcmp(&dats.dats[1], colonyCtrlGet_statusLocalEaCtrl, clusterNum_usr)){ //»¥¿Ø×´Ì¬ÖµÖµÂÖÑ¯¸üĞÂ
                                              
                                              u8 idata loop;
                                              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ eachCtrl detect from poling, currentVal is: %02X %02X %02X.\n", (int)colonyC
             -trlGet_statusLocalEaCtrl[0],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[1],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[2]);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif
                                              //ÉÏÒ»´Î»¥¿ØÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              memcpy(colonyCtrlGet_statusLocalEaCtrl, &dats.dats[1], clusterNum_usr);
                                              
                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //ÑÚÂëÅĞ¶Ï²Ù×÷Î»£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_ON)statusRelay_temp |= (
             -1 << loop);
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_OFF)statusRelay_temp &= 
             -~(1 << loop);
                                                      
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = statusRelay_temp;
                                              }
                                      }
                                      
                              }break;
              #else /*ºêÅĞÖĞ*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1647   2                      case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ§ÄÜ*///½ö½ÓÊÕ³¡¾°¿ØÖÆĞÅÏ¢²¢¶¯×÷
1648   3                      
1649   3                              u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
1650   3                              
1651   3                              if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
1652   4                              
1653   4      #if(DEBUG_LOGOUT_EN == 1)
1654   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1655   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1656   5                                              sprintf(log_buf, "differ scene detect from poling.\n");
1657   5                                              PrintString1_logOut(log_buf);
1658   5                                      }                       
1659   4      #endif  
1660   4                                      
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 29  

1661   4                                      //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
1662   4                                      colonyCtrlGet_statusLocalScene = dats.dats[0];
1663   4                                      
1664   4                                      if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
1665   5                                      
1666   5                                              swCommand_fromUsr.actMethod = relay_OnOff;
1667   5                                              swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
1668   5                                      }
1669   4                              }
1670   3                              
1671   3                      }break;
1672   2      #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1673   2                      default:break;
1674   2              }
1675   1      }
1676          
1677          /*zigbee³£¹æ¿ØÖÆ×ª·¢Êı¾İ½âÎö*/
1678          static 
1679          void dataParing_Nomal(u8 datsParam[], u16 nwkAddr_from, u8 port_from){
1680   1              
1681   1      #define dataLen_dataParingNomal 96
1682   1              u8 xdata paramTX_temp[dataLen_dataParingNomal] = {0};
1683   1              
1684   1              bit dataFromRemote_IF = 0;      //ÊÇ·ñÎª·şÎñÆ÷¶ËÊı¾İ±êÖ¾
1685   1      
1686   1              /*²úÆ·¶ş¼¶Ğ­ÒéºË¶Ô_³£¹æ¿ØÖÆ*///¿ØÖÆÏÂ´ï
1687   1              switch(datsParam[0]){
1688   2              
1689   2                      /*Ô¶¶Ë*/
1690   2                      case ZIGB_FRAMEHEAD_CTRLREMOTE:{
1691   3                              
1692   3                              dataFromRemote_IF = 1;
1693   3                              
1694   3                              memcpy(MAC_ID_DST, &datsParam[7], 6);
1695   3                              memcpy(&datsParam[1], &datsParam[13], datsRcv_ZIGB.rcvDats[20] - 13);
1696   3                      }
1697   2                      
1698   2                      /*±¾µØ*/
1699   2                      case ZIGB_FRAMEHEAD_CTRLLOCAL:{
1700   3                              
1701   3                              bit frameCheck_Done = 0; //Êı¾İ¼ì²âºÏ¸ñ±êÖ¾
1702   3                              
1703   3                              {
1704   4                                      bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
1705   4                                      bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
1706   4                                      
1707   4                                      if(datsParam[4] == frame_Check(&datsParam[5], 28))frameCodeCheck_PASS = 1; //Ğ£ÑéÂë¼ì²â
1708   4                                      if(!memcmp(&datsParam[5], &MAC_ID[1], 5))frameMacCheck_PASS = 1; //MAC¼ì²â
1709   4      
1710   4                                      if(datsParam[3] == FRAME_MtoZIGBCMD_cmdConfigSearch){ //ÌØÊâÖ¸Áî²»×öMAC¼ì²â
1711   5                                      
1712   5                                              frameMacCheck_PASS = 1;
1713   5                                              
1714   5                                      }else
1715   4                                      if((datsParam[3] == FRAME_MtoZIGBCMD_cmdCfg_swTim) || //ÌØÊâÖ¸Áî²»×öĞ£ÑéÂë¼ì²â
1716   4                                         (datsParam[3] == FRAME_MtoZIGBCMD_cmdswTimQuery)){
1717   5                                         
1718   5                                              frameCodeCheck_PASS = 1;
1719   5                                      }
1720   4                                         
1721   4                                      if(frameCodeCheck_PASS && frameCodeCheck_PASS)frameCheck_Done = 1;
1722   4                              }
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 30  

1723   3                                 
1724   3                              if(frameCheck_Done){ //Ö¡¼ì²éÍ¨¹ı£¬¿ªÊ¼½âÎö¡¢¶¯×÷¼°ÏìÓ¦
1725   4                                      
1726   4                                      bit respond_IF          = 0;    //ÊÇ·ñ»Ø¸´
1727   4                                      bit specialCmd_IF       = 0;    //ÊÇ·ñÎªÌØÊâÖ¸Áî£¨ÌØÊâÖ¸ÁîÕ¼ÓÃ¿ª¹ØÀàĞÍÄÇÒ»¸ö×Ö½Ú£©
1728   4                                      
1729   4      #if(DEBUG_LOGOUT_EN == 1)
1730   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1731   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1732   5                                              sprintf(log_buf, "cmdComing:%02X.\n", (int)datsParam[3]);
1733   5                                              PrintString1_logOut(log_buf);
1734   5                                      }                       
1735   4      #endif          
1736   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_dataParingNomal);
1737   4                              
1738   4                                      switch(datsParam[3]){
1739   5                                      
1740   5                                              case FRAME_MtoZIGBCMD_cmdConfigSearch:{
1741   6                                                      
1742   6                                                      if(!deviceLock_flag){ //Éè±¸ÊÇ·ñÉÏËø
1743   7                                                              
1744   7                                                              tips_statusChangeToNormal();
1745   7                                                              if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //´¥ÃşÊÍ·Å¼ÆÊ±Ê§ÄÜ
1746   7                                                              
1747   7                                                              paramTX_temp[11] = status_Relay; //¿ª¹Ø×´Ì¬»Ø¸´Ìî×°
1748   7                                                              paramTX_temp[12] = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
1749   7                                                              
1750   7                                                              paramTX_temp[14] = (u8)((dev_currentPanid & 0xFF00) >> 8); //ÍøÂçPANID»Ø¸´Ìî×°
1751   7                                                              paramTX_temp[15] = (u8)((dev_currentPanid & 0x00FF) >> 0);
1752   7                                                              
1753   7                                                              sysTimeZone_H = datsParam[12];
1754   7                                                              sysTimeZone_M = datsParam[13];
1755   7                                                              coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1756   7                                                              coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
1757   7                                                              
1758   7                                                              periodDataTrans_momentHang(10); //½ÓÊÕµ½ËÑË÷Âëºó ½«ÆäËûÖÜÆÚÖ÷¶¯·¢ÂëÍ¨ĞÅ½øĞĞ±ÜÈÃ ÎªËÑË÷ÏìÓ¦ÇåÂ· 10s
1759   7                                                      
1760   7                                                              respond_IF              = 1; //ÏìÓ¦»Ø¸´
1761   7                                                              specialCmd_IF   = 0;
1762   7                                                              
1763   7                                                      }else{
1764   7                                                      
1765   7                                                              
1766   7                                                      }
1767   6                                                      
1768   6                                              }break;
1769   5                                              
1770   5                                              case FRAME_MtoZIGBCMD_cmdControl:{
1771   6      
1772   6                                                      paramTX_temp[11] = 0;
1773   6                                                      paramTX_temp[11] |= (datsParam[11] & 0x07);     //×´Ì¬Î»Ìî×°
1774   6                                                      if(             (datsParam[11] & 0x01) != (status_Relay & 0x01))paramTX_temp[11] |= 0x20; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ»>µ
             -ÚÒ»Î»
1775   6                                                      else if((datsParam[11] & 0x02) != (status_Relay & 0x02))paramTX_temp[11] |= 0x40; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚ¶şÎ»
1776   6                                                      else if((datsParam[11] & 0x04) != (status_Relay & 0x04))paramTX_temp[11] |= 0x80; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚÈıÎ»
1777   6                                                      
1778   6                                                      swCommand_fromUsr.objRelay = datsParam[11];
1779   6                                                      swCommand_fromUsr.actMethod = relay_OnOff;
1780   6      
1781   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 31  

1782   6                                                      specialCmd_IF   = 0;                                                    
1783   6                                                      
1784   6                                              }break;
1785   5                                                      
1786   5                                              case FRAME_MtoZIGBCMD_cmdQuery:{
1787   6                                              
1788   6                                                      paramTX_temp[11] = status_Relay & 0x07;
1789   6                                                      paramTX_temp[12] = 0;
1790   6                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1791   6                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1792   6                                                      
1793   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1794   6                                                      specialCmd_IF   = 0;    
1795   6                                              
1796   6                                              }break;
1797   5                                                      
1798   5                                              case FRAME_MtoZIGBCMD_cmdInterface:{}break;
1799   5                                                      
1800   5                                              case FRAME_MtoZIGBCMD_cmdReset:{}break;
1801   5                                                      
1802   5                                              case FRAME_MtoZIGBCMD_cmdDevLockON:{
1803   6                                              
1804   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1805   6                                                      {
1806   7                                                              u8 deviceLock_IF = 1;
1807   7                                                              
1808   7                                                              deviceLock_flag  = 1;
1809   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1810   7                                                      }               
1811   6                                                      
1812   6                                              }break;
1813   5                                                      
1814   5                                              case FRAME_MtoZIGBCMD_cmdDevLockOFF:{
1815   6                                              
1816   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1817   6                                                      {
1818   7                                                              u8 deviceLock_IF = 0;
1819   7                                                              
1820   7                                                              deviceLock_flag  = 0;
1821   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1822   7                                                      }       
1823   6                                              
1824   6                                              }break;
1825   5                                                      
1826   5                                              case FRAME_MtoZIGBCMD_cmdswTimQuery:{
1827   6                                              
1828   6                                                      //·ÖÀà»Ø¸´
1829   6                                                      switch(datsParam[13]){ //×ÓÃüÁî½âÎö
1830   7                                                      
1831   7                                                              case 0: /*ÉÏÎ»»úÔÚ¶¨Ê±µÄÊ±ºò¸ø0£¬´ıĞ­ÉÌ*/
1832   7                                                              case cmdConfigTim_normalSwConfig:{
1833   8                                                              
1834   8                                                                      u8 loop = 0;
1835   8                                                              
1836   8                                                                      //Êı¾İÏìÓ¦¼°»Ø¸´
1837   8                                                                      EEPROM_read_n(EEPROM_ADDR_swTimeTab, &paramTX_temp[14], 12);    //¶¨Ê±±í»Ø¸´Ìî×°
1838   8                                                                      
1839   8                                                                      //»Ø¸´Êı¾İ¶ş´Î´¦Àí£¨Õë¶ÔÒ»´ÎĞÔ¶¨Ê±Êı¾İ£©
1840   8                                                                      for(loop = 0; loop < 4; loop ++){
1841   9                                                                      
1842   9                                                                              if(swTim_oneShoot_FLAG & (1 << loop)){
1843  10                                                                                      
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 32  

1844  10                                                                                      paramTX_temp[14 + loop * 3] &= 0x80;
1845  10                                                                              }
1846   9                                                                      }
1847   8                                                                                      
1848   8                                                                      specialCmd_IF = 1; //ÌØÊâÕ¼Î»Ö¸Áî
1849   8                                                                      
1850   8      #if(DEBUG_LOGOUT_EN == 1)
1851   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1852   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1853   9                                                                              sprintf(log_buf, ">>>>>>>>timer_tab3 respond:[%02X-%02X-%02X].\n", (int)paramTX_temp[20], (int)pa
             -ramTX_temp[21], (int)paramTX_temp[22]);
1854   9                                                                              PrintString1_logOut(log_buf);
1855   9                                                                      }                       
1856   8      #endif  
1857   8                                                                      
1858   8                                                              }break;
1859   7                                                              
1860   7                                                              case cmdConfigTim_onoffDelaySwConfig:{
1861   8                                                              
1862   8                                                                      if(!delayCnt_onoff)paramTX_temp[14] = 0;
1863   8                                                                      else paramTX_temp[14] = delayPeriod_onoff - (u8)(delayCnt_onoff / 60);
1864   8                                                                      paramTX_temp[15] = delayUp_act;
1865   8                                                                      
1866   8                                                              }break;
1867   7                                                              
1868   7                                                              case cmdConfigTim_closeLoopSwConfig:{
1869   8                                                              
1870   8                                                                      paramTX_temp[14] = delayPeriod_closeLoop;
1871   8                                                                      
1872   8                                                              }break;
1873   7                                                              
1874   7                                                              case cmdConfigTim_nightModeSwConfig:{  
1875   8                                                              
1876   8                                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &paramTX_temp[14], 6);      //Ò¹¼äÄ£Ê½¶¨Ê±±í»Ø¸´Ìî×°
1877   8                                                                      
1878   8                                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1879   8                                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1880   8                                                                      
1881   8                                                              }break;
1882   7                                                              
1883   7                                                              default:break;
1884   7                                                      }
1885   6                                                      
1886   6                                                      paramTX_temp[13] = datsParam[13]; //¶¨Ê±×ÓÃüÁîÍ¬²½»Ø¸´
1887   6                                                      
1888   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1889   6                                                      
1890   6                                              }break;
1891   5                                                      
1892   5                                              case FRAME_MtoZIGBCMD_cmdConfigAP:{}break;
1893   5                                                      
1894   5                                              case FRAME_MtoZIGBCMD_cmdBeepsON:{ //Ò¹¼äÄ£Ê½¹Ø
1895   6                                              
1896   6                                                      u8 datsTemp = 0;
1897   6                                                      
1898   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1899   6                                                      datsTemp &= ~0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,È¡ÏûÍ·×Ö½ÚÈ«Õ¼Âú,Ê§ÄÜÈ«Ìì
1900   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1901   6                                                      
1902   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1903   6                                                      
1904   6                                              }break;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 33  

1905   5                                                      
1906   5                                              case FRAME_MtoZIGBCMD_cmdBeepsOFF:{ //Ò¹¼äÄ£Ê½¿ª
1907   6                                              
1908   6                                                      u8 datsTemp = 0;
1909   6                                                      
1910   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1911   6                                                      datsTemp |= 0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,Í·×Ö½ÚÈ«Õ¼Âú,Ç¿ÖÆÈ«Ìì
1912   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);        
1913   6                                                      
1914   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1915   6                                                      
1916   6                                              }break;
1917   5                                                      
1918   5                                              case FRAME_MtoZIGBCMD_cmdftRecoverRQ:{
1919   6                                              
1920   6                                                      respond_IF = 1;
1921   6                                                      
1922   6                                              }break;
1923   5                                                      
1924   5                                              case FRAME_MtoZIGBCMD_cmdRecoverFactory:{
1925   6                                              
1926   6                                                      Factory_recover();
1927   6                                              
1928   6                                              }break;
1929   5                                                      
1930   5                                              case FRAME_MtoZIGBCMD_cmdCfg_swTim:{
1931   6                                                      
1932   6                                                      u8 loop = 0;
1933   6                                                      
1934   6                                                      switch(datsParam[13]){ //¶¨Ê±Êı¾İ´¦Àí¼°¸üĞÂ,·ÖÀà´¦Àí
1935   7                                                      
1936   7                                                              case cmdConfigTim_normalSwConfig:{      /*ÆÕÍ¨¶¨Ê±*/
1937   8                                                                      
1938   8                                                                      for(loop = 0; loop < 4; loop ++){
1939   9                                                                      
1940   9                                                                              if(datsParam[14 + loop * 3] == 0x80){   /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±»´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞ
             -Ô
1941  10                                                                              
1942  10                                                                                      swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
1943  10                                                                                      datsParam[14 + loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½øĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´
             -ÎÖ´ĞĞÍê±ÏºóÇå³ı
1944  10                                                                                      
1945  10                                                                              }else{
1946  10                                                                              
1947  10                                                                                      swTim_oneShoot_FLAG &= ~(1 << loop);//Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
1948  10                                                                              }
1949   9                                                                      }
1950   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, &datsParam[14], 4 * 3);      //¶¨Ê±±í
1951   8                                                                      itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
1952   8      #if(DEBUG_LOGOUT_EN == 1)
1953   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1954   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1955   9                                                                              sprintf(log_buf, ">>>>>>>>timer_tab3 has been set:[%02X-%02X-%02X].\n", (int)datsParam[20], (int)
             -datsParam[21], (int)datsParam[22]);
1956   9                                                                              PrintString1_logOut(log_buf);
1957   9                                                                      }                       
1958   8      #endif  
1959   8                                                              
1960   8                                                              }break;
1961   7                                                              
1962   7                                                              case cmdConfigTim_onoffDelaySwConfig:{  /*¿ª¹ØÑÓÊ±*/
1963   8                                                              
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 34  

1964   8                                                                      if(datsParam[14]){
1965   9                                                                      
1966   9                                                                              ifDelay_sw_running_FLAG |= (1 << 1);
1967   9                                                                              delayPeriod_onoff               = datsParam[14];
1968   9                                                                              
1969   9                                                                              delayUp_act                             = datsParam[15];
1970   9                                                                              
1971   9                                                                              delayCnt_onoff                  = 0;
1972   9                                                                              
1973   9                                                                      }else{
1974   9                                                                      
1975   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 1);
1976   9                                                                              delayPeriod_onoff               = 0;
1977   9                                                                              delayCnt_onoff                  = 0;
1978   9                                                                      }
1979   8                                                                      
1980   8                                                              }break;
1981   7                                                              
1982   7                                                              case cmdConfigTim_closeLoopSwConfig:{   /*ÂÌÉ«¹¦ÄÜ(×Ô¶¯Ñ­»·¹Ø±Õ)*/
1983   8                                                              
1984   8                                                                      if(datsParam[14]){
1985   9                                                                      
1986   9                                                                              ifDelay_sw_running_FLAG |= (1 << 0);
1987   9                                                                              delayPeriod_closeLoop   = datsParam[14];
1988   9                                                                              delayCnt_closeLoop              = 0;
1989   9                                                                              
1990   9                                                                      }else{
1991   9                                                                      
1992   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 0);
1993   9                                                                              delayPeriod_closeLoop   = 0;
1994   9                                                                              delayCnt_closeLoop              = 0;
1995   9                                                                      }
1996   8                                                                      
1997   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1);
1998   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
1999   8                                                                      
2000   8                                                              }break;         
2001   7      
2002   7                                                              case cmdConfigTim_nightModeSwConfig:{  /*Ò¹¼äÄ£Ê½ ±³¹â°ëÁÁ*/
2003   8                                                              
2004   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsParam[14], 6);   //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢
2005   8                                                                      itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2006   8                                                                      
2007   8                                                              }break;
2008   7                                                              
2009   7                                                              default:break;
2010   7                                                      }
2011   6                                                      
2012   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2013   6                                                      
2014   6                                              }break;
2015   5                                              
2016   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ctrlEachO:{
2017   6                                              
2018   6                                                      u8 loop = 0;
2019   6                                                      u8 effective_oprate = datsParam[12]; //ÓĞĞ§²Ù×÷Êı¾İÕ¼Î»»ñÈ¡
2020   6                                                      
2021   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2022   7                                                      
2023   7                                                              if((effective_oprate >> loop) & 0x01){ //ÓĞĞ§Êı¾İÅĞ¶Ï
2024   8                                                              
2025   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &datsParam[14 + loop], 1);
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 35  

2026   8                                                                      CTRLEATHER_PORT[loop] = datsParam[14 + loop];
2027   8                                                                      reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2028   8                                                              }
2029   7                                                      }
2030   6                                                      
2031   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2032   6                                              
2033   6                                              }break;
2034   5                                              
2035   5                                              case FRAME_MtoZIGBCMD_cmdQue_ctrlEachO:{
2036   6                                              
2037   6                                                      u8 loop = 0;
2038   6                                                      
2039   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2040   7                                                      
2041   7                                                              EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther + loop, &paramTX_temp[14 + loop], 1);
2042   7                                                      }
2043   6                                                      
2044   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2045   6                                              
2046   6                                              }break;
2047   5                                                      
2048   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ledBackSet:{
2049   6                                              
2050   6                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, &datsParam[14], 1);
2051   6                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround + 1, &datsParam[15], 1);
2052   6                                                      tipsInsert_swLedBKG_ON  = datsParam[14];
2053   6                                                      tipsInsert_swLedBKG_OFF = datsParam[15];
2054   6                                                      
2055   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2056   6                                              
2057   6                                              }break;
2058   5                                              
2059   5                                              case FRAME_MtoZIGBCMD_cmdQue_ledBackSet:{
2060   6                                              
2061   6                                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround, &paramTX_temp[14], 1);
2062   6                                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround + 1, &paramTX_temp[15], 1);
2063   6                                                      
2064   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2065   6                                              
2066   6                                              }break;
2067   5                                              
2068   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioSet:{
2069   5      //                                              
2070   5      //                                              u16 xdata panid_Temp = ZigB_getPanIDCurrent(); //ÅäÖÃ»Ø¸´Ìí¼ÓPANID
2071   5      //                                      
2072   5      //                                              bit opt_result = swScenario_oprateSave(datsParam[12], datsParam[14]);
2073   5      //                                              if(opt_result)paramTX_temp[12] = 0;
2074   5      //                                              else paramTX_temp[12] = 0x0A; //³¡¾°ÉèÖÃÎŞĞ§»Ø¸´£¨³¡¾°´æ´¢ÒÑÂú£©
2075   5      //                                              
2076   5      //                                              paramTX_temp[14] = (u8)((panid_Temp & 0xFF00) >> 8);
2077   5      //                                              paramTX_temp[15] = (u8)((panid_Temp & 0x00FF) >> 0);
2078   5      //                                              
2079   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ£¨±¾µØ´æ´¢ÒÑ±»Õ¼Âú£©
2080   5      //                                      
2081   5      //                                      }break;
2082   5      //                                      
2083   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioCtl:{
2084   5      //                                              
2085   5      //                                              u8 sw_Act = swScenario_oprateCheck(datsParam[12]);
2086   5      //                                              if(sw_Act != SW_SCENCRAIO_ACTINVALID){ //ÈôË÷Òıµ½ÓĞĞ§²Ù×÷Î»
2087   5      //                                                      
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 36  

2088   5      //                                                      swCommand_fromUsr.actMethod = relay_OnOff;
2089   5      //                                                      swCommand_fromUsr.objRelay = sw_Act;
2090   5      //                                              
2091   5      //                                                      paramTX_temp[12] = 0;
2092   5      //                                                      
2093   5      //                                              }else{ //ÈôÎŞ·¨Ë÷Òıµ½ÓĞĞ§²Ù×÷Î»
2094   5      //                                              
2095   5      //                                                      paramTX_temp[12] = 0x0A; //³¡¾°¿ØÖÆÎŞĞ§»Ø¸´£¨³¡¾°ºÅÎŞ·¨±»Ë÷Òı£©
2096   5      //                                              }
2097   5      //                                      
2098   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2099   5      //                                      
2100   5      //                                      }break;
2101   5      //                                      
2102   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioDel:{
2103   5      //                                              
2104   5      //                                              swScenario_oprateDele(datsParam[12]);
2105   5      //                                              paramTX_temp[12] = 0;
2106   5      //                                      
2107   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2108   5      //                                      
2109   5      //                                      }break;
2110   5                                              
2111   5                                              default:{
2112   6                                              
2113   6                                                      respond_IF = 0;
2114   6                                              
2115   6                                              }break;
2116   5                                      }
2117   4                                      
2118   4                                      /*»Ø¸´ÏìÓ¦*/
2119   4                                      if(respond_IF){ //Êı¾İ°ü»Ø¸´ÏìÓ¦¶¯×÷
2120   5                                      
2121   5                                              u8 datsTX_Len = 0;
2122   5                                              
2123   5                                              respond_IF = 0;
2124   5                                              
2125   5                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
2126   5                                                                                                                 paramTX_temp,
2127   5                                                                                                                 33,
2128   5                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
2129   5                                                                                                                 datsParam[3],
2130   5                                                                                                                 specialCmd_IF);
2131   5                                              
2132   5                                              heartBeatCount += 1; //ÑÓÊ±ĞÔĞ­µ÷ĞÄÌøÖÍºó 1s
2133   5                                              
2134   5                                              datsSend_request.nwkAddr = nwkAddr_from;
2135   5                                              datsSend_request.portPoint = port_from;
2136   5                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
2137   5                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
2138   5                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
2139   5                                              datsRcv_respond.datsTrans.datsLen = 0;
2140   5                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
2141   5                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 8; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆ
             -ÚÄÚ ·¢ 8 ´Î
2142   5                                              devRunning_Status = status_dataTransRequestDatsSend;
2143   5                                              
2144   5      //#if(DEBUG_LOGOUT_EN == 1)
2145   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2146   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2147   5      //                                              sprintf(log_buf, ">>>>>>>>standby dataTX_buf_tab3:[%02X-%02X-%02X].\n", (int)datsSend_request.dats
             -Trans.dats[20], (int)datsSend_request.datsTrans.dats[21], (int)datsSend_request.datsTrans.dats[22]);
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 37  

2148   5      //                                              PrintString1_logOut(log_buf);
2149   5      //                                      }                       
2150   5      //#endif        
2151   5                                      }
2152   4                              }
2153   3                      }break;
2154   2                      
2155   2                      /*ĞÄÌø_Íø¹ØÔÚÏß*/
2156   2                      case ZIGB_FRAMEHEAD_HEARTBEAT:{
2157   3                      
2158   3                              
2159   3                              
2160   3                      }break;
2161   2                      
2162   2                      /*ĞÄÌø_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2163   2                      case ZIGB_FRAMEHEAD_HBOFFLINE:{
2164   3                      
2165   3                              
2166   3                              
2167   3                      }break;
2168   2                      
2169   2      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) /*ºêÅĞÍ·*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2170   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÔÚÏß*/
2171   2                      case DTMODEKEEPACESS_FRAMEHEAD_ONLINE:{
2172   3                      
2173   3                              stt_agingDataSet_bitHold code   agingCmd_Temp = {0};
2174   3                              stt_devOpreatDataPonit xdata    dev_dataPointTemp = {0};
2175   3                              
2176   3                              bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
2177   3                              bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
2178   3                              
2179   3      //#if(DEBUG_LOGOUT_EN == 1)
2180   3      //                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2181   3      //                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2182   3      //                              sprintf(log_buf, "periodKeepAcess respondRcv, cmd[%02X], dataLen[%02d].\n", (int)datsParam[8], (int)
             -datsParam[1]);
2183   3      //                              PrintString1_logOut(log_buf);
2184   3      //                      }                       
2185   3      //#endif        
2186   3                              
2187   3                              if(datsParam[datsParam[1] - 1] == frame_Check(&datsParam[1], datsParam[1] - 2))frameCodeCheck_PASS = 1;
2188   3                              if(!memcmp(&datsParam[2], &MAC_ID[1], 5))frameMacCheck_PASS = 1;
2189   3                              
2190   3                              if(frameCodeCheck_PASS && frameMacCheck_PASS){ 
2191   4                      
2192   4                                      memcpy(&dev_dataPointTemp, &datsParam[15], sizeof(stt_devOpreatDataPonit)); //Êı¾İ½á¹¹»¯
2193   4                                      
2194   4      //#if(DEBUG_LOGOUT_EN == 1)
2195   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2196   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2197   4      //                                      sprintf(log_buf, "agingCmd[%02X], swAging[%d], val[%02X].\n", (int)datsParam[8],
2198   4      //                                                                                                                                                                (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat, 
2199   4      //                                                                                                                                                                (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2200   4      //                                      PrintString1_logOut(log_buf);
2201   4      //                              }                       
2202   4      //#endif        
2203   4                              
2204   4                                      switch(datsParam[8]){ //Ö¡ÃüÁî
2205   5                                      
2206   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
2207   6                                                      
2208   6                                                      static bit local_ftyRecover_standbyFLG = 0; //»Ö¸´³ö³§ÉèÖÃ²Ù×÷Ô¤¶¯×÷±êÖ¾
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 38  

2209   6                                      
2210   6                                                      /*·ÇÊ±Ğ§ĞÔÃüÁîÅĞ¶Ï*///Êı¾İ²»Ò»ÖÂÊ±£¬¸üĞÂ»º´æºóÖ´ĞĞ¶¯×÷¼´¿É£¨·ÇÊ±Ğ§ÔòÃ¿´Î»ñÈ¡Êı¾İÊ±¶¼ÒªÓë±¾µØÊı¾İ×÷±È
             -½Ï£©
2211   6      //                                              { //ÆÕÍ¨¿ª¹Ø²Ù×÷£¬ÎŞĞèÊ±Ğ§
2212   6      //                                              
2213   6      //                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2214   6      //                                                      
2215   6      //                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2216   6      //                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2217   6      //                                                              
2218   6      //#if(DEBUG_LOGOUT_EN == 1)
2219   6      //                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2220   6      //                                                                      
2221   6      //                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2222   6      //                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x0
             -7, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2223   6      //                                                                      PrintString1_logOut(log_buf);
2224   6      //                                                              }                       
2225   6      //#endif        
2226   6      //                                                      }
2227   6      //                                              }
2228   6                                                      
2229   6      //                                              { //¿ª¹Ø¶¨Ê±²Ù×÷£¬ÎŞĞèÊ±Ğ§
2230   6      //                                              
2231   6      //                                                      timing_Dats xdata timDatsTemp_CalibrateTab[TIMEER_TABLENGTH] = {0};
2232   6      //                                                      
2233   6      //                                                      datsTiming_read_eeprom(timDatsTemp_CalibrateTab);
2234   6      //                                                      if(memcmp(timDatsTemp_CalibrateTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) * TIMEER
             -_TABLENGTH)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2235   6      //                                                      
2236   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) 
             -* TIMEER_TABLENGTH);
2237   6      //                                                      }
2238   6      //                                              }
2239   6                                                      
2240   6      //                                              { //ÂÌÉ«Ä£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2241   6      //                                              
2242   6      //                                                      if(delayPeriod_closeLoop != dev_dataPointTemp.devData_greenMode){
2243   6      //                                                      
2244   6      //                                                              
2245   6      //                                                      }
2246   6      //                                              }
2247   6                                                      
2248   6      //                                              { //Ò¹¼äÄ£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2249   6      //                                                      
2250   6      //                                                      timing_Dats xdata nightDatsTemp_CalibrateTab[2];
2251   6      //                                                      
2252   6      //                                                      datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
2253   6      //                                                      if(memcmp(nightDatsTemp_CalibrateTab, dev_dataPointTemp.devData_nightMode, sizeof(timing_Dats) * 
             -2)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2254   6      //                                                      
2255   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dev_dataPointTemp.devData_nightMode, sizeof(ti
             -ming_Dats) * 2);
2256   6      //                                                      }       
2257   6      //                                              }
2258   6                                                      
2259   6      //                                              { //±³¹âµÆÉèÖÃ²Ù×÷£¬ÎŞĞèÊ±Ğ§
2260   6      //                                              
2261   6      //                                                      if(tipsInsert_swLedBKG_ON != dev_dataPointTemp.devData_bkLight[0]){ //¿ªÉ«
2262   6      //                                                      
2263   6      //                                                              
2264   6      //                                                      }
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 39  

2265   6      //                                                      
2266   6      //                                                      if(tipsInsert_swLedBKG_OFF != dev_dataPointTemp.devData_bkLight[1]){ //¹ØÉ«
2267   6      //                                                      
2268   6      //                                                              
2269   6      //                                                      }
2270   6      //                                              }
2271   6                                                      
2272   6                                                      /*Ê±Ğ§ĞÔÃüÁîÅĞ¶Ï*///¸üĞÂÊ±Ğ§²Ù×÷ºó£¬Çå¿ÕÊ±Ğ§²Ù×÷Î»£¨Ê±Ğ§ÊÇÎªÁË½ÚÔ¼ĞÔÄÜ²»ÓÃÃ¿´Î²éÑ¯Ê±¶¼×÷±È½Ï£©
2273   6                                                      if(memcmp(&agingCmd_Temp, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_agingDataSet_
             -bitHold))){ //Ò»µ©ÓĞÊ±Ğ§Ö¸ÁîÎ»ÖÃ 1 £¬Ö»ÒªÓĞÊ±Ğ§Õ¼Î»£¬¾ÍÔ­Î»»Ø·¢
2274   7                                                              
2275   7                                                              heartBeatCount = PERIOD_HEARTBEAT_ASR; //ÓĞÊ±Ğ§¿ØÖÆ£¬Ç¿ĞĞÌáÇ°ĞÄÌøÁ¢¼´»ØÂë
2276   7                                                              
2277   7                                                              memcpy(&dev_agingCmd_rcvPassive, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_aging
             -DataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬ÓÃÓÚÔ­Î»»Ø·¢
2278   7                                                      
2279   7                                                              /*Ê±Ğ§²Ù×÷½âÎö*/                
2280   7      
2281   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat){ //¿ª¹Ø×´Ì¬²Ù×÷£¬ĞèÒªÊ±Ğ§
2282   8                                                                      
2283   8                                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2284   9                                                                      
2285   9                                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2286   9                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2287   9                                                                              
2288   9                                                                              devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
2289   9      #if(DEBUG_LOGOUT_EN == 1)
2290   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2291  10                                                                                      
2292  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2293  10                                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x07
             -, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2294  10                                                                                      PrintString1_logOut(log_buf);
2295  10                                                                              }                       
2296   9      #endif  
2297   9                                                                      }
2298   8                                                              }
2299   7                                                              
2300   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_delaySetOpreat){ //ÑÓÊ±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±
             -Ğ§
2301   8                              
2302   8                                                                      if(dev_dataPointTemp.devData_delayer){ //ÑÓÊ±Ê±¼ä´óÓÚ0¾ÍÊÇ¿ª
2303   9                                                                      
2304   9                                                                              ifDelay_sw_running_FLAG |= (1 << 1); //ÑÓÊ±±êÖ¾¸üĞÂ£¬Æô¶¯
2305   9                                                                              delayPeriod_onoff               = dev_dataPointTemp.devData_delayer; //ÑÓÊ±Ê±¼ä
2306   9                                                                              delayUp_act                             = dev_dataPointTemp.devData_delayUpStatus; //ÑÓÊ±µ½´ïÊ±£¬¿ª¹ØÏìÓ¦×´Ì¬
2307   9                                                                              delayCnt_onoff                  = 0; //ÑÓÊ±¼ÆÊıÇåÁã
2308   9      #if(DEBUG_LOGOUT_EN == 1)
2309   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2310  10                                                                                      
2311  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2312  10                                                                                      sprintf(log_buf, ">>>>>>>>delayPeriod:[%d], delayUpAct:[%02X].\n", (int)delayPeriod_onoff, (int)
             -delayUp_act);
2313  10                                                                                      PrintString1_logOut(log_buf);
2314  10                                                                              }                       
2315   9      #endif  
2316   9                                                                              
2317   9                                                                      }else{
2318   9                                                                      
2319   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 0); //ÑÓÊ±±êÖ¾¸üĞÂ
2320   9                                                                              delayPeriod_onoff               = 0; 
2321   9                                                                              delayCnt_onoff                  = 0; 
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 40  

2322   9                                                                      }
2323   8                                                              }
2324   7                                                              
2325   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devResetOpreat){ //³ö³§ÉèÖÃ¸´Î»¶¯×÷£¬Ğè
             -ÒªÊ±Ğ§
2326   8                                                                      
2327   8                                                                      local_ftyRecover_standbyFLG = 1; //½ÓÊÕµ½»Ö¸´³ö³§¶¯×÷ºó£¬½«»Ö¸´³ö³§ÉèÖÃ¶¯×÷½øĞĞ¾ÍĞ÷Ì¬¼ÇÂ¼£¬µÈ´ıÊ±Ğ
             -§±êÖ¾ÖÃÁãºóÔÙ½øĞĞÊµ¼Ê¶¯×÷                                     
2328   8      #if(DEBUG_LOGOUT_EN == 1)
2329   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2330   9                                                      
2331   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2332   9                                                                              sprintf(log_buf, ">>>>>>>>factory recover standBy!.\n");
2333   9                                                                              PrintString1_logOut(log_buf);
2334   9                                                                      }                       
2335   8      #endif          
2336   8                                                              }
2337   7                                                              
2338   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devLock){ //Éè±¸ËøÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2339   8                                                              
2340   8                                                                      u8 deviceLock_IF = 0; //²Ù×÷×Ö½Ú»º´æ
2341   8                                                                      
2342   8      #if(DEBUG_LOGOUT_EN == 1)
2343   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2344   9                                                                              
2345   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2346   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd devLock coming, lockIf:[%d].\n", (int)dev_dataPointTemp.devSta
             -tus_Reference.statusRef_devLock);
2347   9                                                                              PrintString1_logOut(log_buf);
2348   9                                                                      }                       
2349   8      #endif  
2350   8                                                                      
2351   8                                                                      if(dev_dataPointTemp.devStatus_Reference.statusRef_devLock){ //Êı¾İ·ÅÔÚ×´Ì¬Àï
2352   9                                                                      
2353   9                                                                              deviceLock_flag = deviceLock_IF = 1; //ÔËĞĞ»º´æ¸üĞÂ
2354   9                                                                              
2355   9                                                                      }else{
2356   9                                                                      
2357   9                                                                              deviceLock_flag = deviceLock_IF = 0; //ÔËĞĞ»º´æ¸üĞÂ
2358   9                                                                      }
2359   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2360   8                                                              }
2361   7                                                              
2362   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_timerSetOpreat){ //¶¨Ê±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±
             -Ğ§
2363   8                                                                      
2364   8                                                                      u8 loop = 0;
2365   8      #if(DEBUG_LOGOUT_EN == 1)
2366   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2367   9                                                                              
2368   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2369   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd timer coming, dataTab1:[%02X-%02X-%02X].\n", (int)dev_dataPoin
             -tTemp.devData_timer[0],
2370   9                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_timer[1],
2371   9                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_timer[2]);
2372   9                                                                              PrintString1_logOut(log_buf);
2373   9                                                                      }                       
2374   8      #endif  
2375   8                                                                      for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //ÔËĞĞ»º´æ¸üĞÂ
2376   9                                                                      
2377   9                                                                              if(dev_dataPointTemp.devData_timer[loop * 3] == 0x80){  /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±»
             -´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞÔ
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 41  

2378  10                                                                              
2379  10                                                                                      swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
2380  10                                                                                      dev_dataPointTemp.devData_timer[loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½ø
             -ĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´ÎÖ´ĞĞÍê±ÏºóÇå³ı
2381  10                                                                                      
2382  10                                                                              }else{
2383  10                                                                              
2384  10                                                                                      swTim_oneShoot_FLAG &= ~(1 << loop); //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
2385  10                                                                              }
2386   9                                                                      }
2387   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) * 
             -TIMEER_TABLENGTH); //Ö±½Ó¸üĞÂeepromÊı¾İ
2388   8                                                                      itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2389   8                                                              }
2390   7                                                              
2391   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_greenModeSetOpreat){ //ÂÌÉ«Ä£Ê½ÉèÖÃ²Ù×÷
             -£¬ĞèÒªÊ±Ğ§
2392   8                                                                      
2393   8      #if(DEBUG_LOGOUT_EN == 1)
2394   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2395   9                                                                              
2396   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2397   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd greenMode coming, timeSet:%d.\n", (int)dev_dataPointTemp.devDa
             -ta_greenMode);
2398   9                                                                              PrintString1_logOut(log_buf);
2399   9                                                                      }                       
2400   8      #endif  
2401   8              
2402   8                                                                      (dev_dataPointTemp.devData_greenMode)?(ifDelay_sw_running_FLAG |= (1 << 0)):(ifDelay_sw_running_FL
             -AG &= ~(1 << 0)); //¸üĞÂÔËĞĞ»º´æ
2403   8                                                                      delayPeriod_closeLoop = dev_dataPointTemp.devData_greenMode;
2404   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2405   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2406   8                                                              }
2407   7                                                              
2408   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_nightModeSetOpreat){ //Ò¹¼äÄ£Ê½ÉèÖÃ²Ù×÷
             -£¬ĞèÒªÊ±Ğ§
2409   8                                                                      
2410   8                                                                      u8 dataTemp[sizeof(timing_Dats) * 2] = {0};
2411   8      #if(DEBUG_LOGOUT_EN == 1)
2412   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2413   9                                                                              
2414   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2415   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd nightMode coming with dats:[%02X %02X %02X", (int)dev_dataPoin
             -tTemp.devData_nightMode[0],
2416   9                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[1],
2417   9                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[2]);
2418   9                                                                              PrintString1_logOut(log_buf);
2419   9                                                                                                                                                                                                                                              
2420   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2421   9                                                                              sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_dataPointTemp.devData_nightMode[3],
2422   9                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[4],
2423   9                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[5]);
2424   9                                                                              PrintString1_logOut(log_buf);
2425   9                                                                      }                       
2426   8      #endif  
2427   8                                                                      (dev_dataPointTemp.devData_nightMode[0])?(dataTemp[0] |= 0x7f):(dataTemp[0] &= ~0x7f); //È«ÌìÒ¹¼ä
2428   8                                                                      (dev_dataPointTemp.devData_nightMode[1])?(dataTemp[0] |= 0x80):(dataTemp[0] &= ~0x80); //Ê±¶ÎÒ¹¼ä
2429   8                                                                      dataTemp[1] = dev_dataPointTemp.devData_nightMode[2]; //×Ö½ÚÏÂ±ê2 µÍ5Î» Ê±
2430   8                                                                      dataTemp[2] = dev_dataPointTemp.devData_nightMode[3]; //×Ö½ÚÏÂ±ê3 È«8Î» ·Ö
2431   8                                                                      dataTemp[4] = dev_dataPointTemp.devData_nightMode[4]; //×Ö½ÚÏÂ±ê4 µÍ5Î» Ê±
2432   8                                                                      dataTemp[5] = dev_dataPointTemp.devData_nightMode[5]; //×Ö½ÚÏÂ±ê5 È«8Î» ·Ö
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 42  

2433   8                                                                      
2434   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dataTemp, sizeof(timing_Dats) * 2); //Ö±½Ó¸üĞÂee
             -promÊı¾İ
2435   8                                                                      itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2436   8                                                              }
2437   7                                                              
2438   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_bkLightSetOpreat){ //±³¹âµÆÉèÖÃ²Ù×÷£¬Ğè
             -ÒªÊ±Ğ§
2439   8                                                                      
2440   8      #if(DEBUG_LOGOUT_EN == 1)
2441   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2442   9                                                                              
2443   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2444   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd bkLight coming, on-Isrt:%02d, off-Isrt:%02d.\n", (int)dev_data
             -PointTemp.devData_bkLight[0], (int)dev_dataPointTemp.devData_bkLight[1]);
2445   9                                                                              PrintString1_logOut(log_buf);
2446   9                                                                      }                       
2447   8      #endif  
2448   8                                                              
2449   8                                                                      tipsInsert_swLedBKG_ON  = dev_dataPointTemp.devData_bkLight[0]; //¸üĞÂÔËĞĞ»º´æ
2450   8                                                                      tipsInsert_swLedBKG_OFF = dev_dataPointTemp.devData_bkLight[1]; //Ö±½Ó¸üĞÂeepromÊı¾İ
2451   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, dev_dataPointTemp.devData_bkLight, 2);
2452   8                                                              }
2453   7                                                              
2454   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_horsingLight){ //ÅÜÂíµÆÉèÖÃ²Ù×÷£¬ĞèÒªÊ±
             -Ğ§
2455   8                                                              
2456   8      #if(DEBUG_LOGOUT_EN == 1)
2457   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2458   9                                                                              
2459   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2460   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd horsingLight coming, opreatData:%02X.\n", (int)dev_dataPointTe
             -mp.devStatus_Reference.statusRef_horsingLight);
2461   9                                                                              PrintString1_logOut(log_buf);
2462   9                                                                      }       
2463   8      #endif  
2464   8                                                                      
2465   8                                                                      ifHorsingLight_running_FLAG = dev_dataPointTemp.devStatus_Reference.statusRef_horsingLight;
2466   8                                                                      if(ifHorsingLight_running_FLAG)counter_ifTipsFree = 0;
2467   8                                                                      else tips_statusChangeToNormal();
2468   8                                                              }
2469   7                                                              
2470   7                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat){ //¿ª¹ØÎ»»¥¿Ø°ó
             -¶¨²Ù×÷ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2471   8                                                              
2472   8                                                                      u8 xdata loop = 0;
2473   8      #if(DEBUG_LOGOUT_EN == 1)
2474   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2475   9                                                                              
2476   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2477   9                                                                              sprintf(log_buf, ">>>>>>>>agingCmd switchBindSet coming, opreatBitHold:%02X bindData:%02X %02X %0
             -2X.\n", (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat,
2478   9                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[0], 
2479   9                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[1], 
2480   9                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[2]);
2481   9                                                                              PrintString1_logOut(log_buf);
2482   9                                                                      }       
2483   8      #endif  
2484   8                                                                      
2485   8                                                                      for(loop = 0; loop < 3; loop ++){
2486   9                                                                      
2487   9                                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat & (1 << loop))
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 43  

             -{
2488  10                                                                              
2489  10                                                                                      coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &dev_dataPointTemp.devData_switchBitBi
             -nd[loop], 1);
2490  10                                                                                      CTRLEATHER_PORT[loop] = dev_dataPointTemp.devData_switchBitBind[loop];
2491  10                                                                              }
2492   9                                                                      }
2493   8                                                                      
2494   8                                                                      reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2495   8                                                              }
2496   7                                                      
2497   7                                                      }else{
2498   7                                                      
2499   7                                                              memset(&dev_agingCmd_rcvPassive, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2500   7                                                              
2501   7                                                              if(local_ftyRecover_standbyFLG){ //µ±Ê±Ğ§±êÖ¾ÖÃÁãºó²ÅÖ´ĞĞ»Ö¸´³ö³§¶¯×÷£¬·ñÔòÉÏÎ»»ú»áÒ»Ö±ÍùÏÂ·¢¸´Î»
2502   8                                                                      
2503   8      #if(DEBUG_LOGOUT_EN == 1)
2504   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2505   9                                                                              
2506   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2507   9                                                                              sprintf(log_buf, ">>>>>>>>factory recover doing now!.\n");
2508   9                                                                              PrintString1_logOut(log_buf);
2509   9                                                                      }                       
2510   8      #endif  
2511   8                                                                      local_ftyRecover_standbyFLG = 0;
2512   8                                                                      Factory_recover();
2513   8                                                              }
2514   7                                                      }
2515   6                                                      
2516   6                                              }break;
2517   5                                                      
2518   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
2519   6                                                      
2520   6                                                      if(memcmp(&dev_agingCmd_sndInitative, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_a
             -gingDataSet_bitHold))){ //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬Ê±Ğ§Õ¼Î»Óë±¾µØ²»Ò»ÖÂ Ñ¯·ÃÃüÁî¾ÍÒ»Ö±ÎªÖ÷¶¯
2521   7                                                      
2522   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
2523   7                                                              
2524   7                                                      }else{
2525   7                                                      
2526   7                                                              heartBeatPeriod = PERIOD_HEARTBEAT_ASR; //ÇĞ»»Îª±»¶¯Ñ¯·Ã£¬ĞÄÌøÖÜÆÚ¸ÄÎª±»¶¯
2527   7                                                              memset(&dev_agingCmd_sndInitative, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2528   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR;
2529   7                                                      }
2530   6                                                      
2531   6                                              }break;
2532   5                                                      
2533   5                                              default:{}break;
2534   5                                      }
2535   4                              }
2536   3                              
2537   3                      }break;
2538   2                      
2539   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2540   2                      case DTMODEKEEPACESS_FRAMEHEAD_OFFLINE:{
2541   3                              
2542   3                              periodDataTrans_momentHang(6); //internetÀëÏßÇé¿öÏÂ£¬ÖÜÆÚÍ¨Ñ¶¾ÍÃ»ÓÃÁË£¬Í¨ĞÅÆµ´ÎÏÂ½µµ½ 6s/´Î
2543   3      #if(DEBUG_LOGOUT_EN == 1)
2544   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2545   4                                      
2546   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 44  

2547   4                                      sprintf(log_buf, ">>>>>>>>internet offline.\n");
2548   4                                      PrintString1_logOut(log_buf);
2549   4                              }       
2550   3      #endif
2551   3                      }break;
2552   2                      
2553   2      #endif /*ºêÅĞÎ²*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2554   2                      
2555   2                      default:{}break;
2556   2              }
2557   1      }
2558          
2559          /*»Ö¸´³ö³§Ô¤ÖÃ¶¯×÷*/
2560          void fun_factoryRecoverOpreat(void){
2561   1      
2562   1              devStatus_switch.statusChange_standBy = status_devFactoryRecoverStandBy;
2563   1              devStatus_switch.statusChange_IF = 1;
2564   1              
2565   1              factoryRecover_HoldTimeCount = 6;
2566   1              factoryRecover_standBy_FLG = 1;
2567   1              tips_statusChangeToFactoryRecover(6);
2568   1      }
2569          
2570          /*zigbeeÖ÷Ïß³Ì*///¶¯×÷×èÈû´óÓÚ200msµÄº¯Êı¶¼ÉèÎª×´Ì¬»úÔËĞĞ£¬ÆäËüĞ¡ÓÚ200msº¯Êı£¬×èÈûÎ¬³Ö£¬·ñÔò×´Ì¬»ú¸´ÔÓ¶È¼Ó
             -´ó
2571          void thread_dataTrans(void){
2572   1              
2573   1              u8 code cmd_datsComing[2] = {0x44, 0x81}; //Ô¶¶ËÊı¾İÖ¡Ö¸Áî
2574   1              u8 code cmd_nwkOpenNote[2] = {0x45, 0xCB}; //ÍøÂç¿ª·ÅÍ¨Öª
2575   1      
2576   1      #define dataLen_zigbDatsTrans 96
2577   1              u8 xdata paramTX_temp[dataLen_zigbDatsTrans] = {0};
2578   1              u8 xdata paramRX_temp[dataLen_zigbDatsTrans] = {0};
2579   1              
2580   1              static bit heartBeat_cmdFLG = 0; //ĞÄÌøÆæÅ¼±êÖ¾
2581   1              
2582   1              /*zigbÖ÷Ïß³ÌÏµÍ³Ê±¼ä¸üĞÂ*/
2583   1              if(!sysTimeReales_counter){ 
2584   2              
2585   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES;
2586   2                      getSystemTime_reales();
2587   2              }
2588   1              
2589   1              /*zigbÖ÷Ïß³Ì×´Ì¬»ú£º¸ù¾İ×´Ì¬±êÖ¾ÔËĞĞ*/
2590   1              switch(devRunning_Status){
2591   2              
2592   2                      case status_passiveDataRcv:{
2593   3                              
2594   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
2595   4                              
2596   4                                      devStatus_switch.statusChange_IF = 0;
2597   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
2598   4                                      
2599   4                                      break;
2600   4                              }
2601   3                              
2602   3                              {/*³õÊ¼»¯Ê±¼ä¸³Öµ*///½ö¿ª»ú¸³ÖµÒ»´Î£¬²»×öÊ±Çøµ÷Õû
2603   4                                      static bit FLG_timeSetInit = 1;
2604   4                                      
2605   4                                      if(FLG_timeSetInit){
2606   5                                      
2607   5                                              FLG_timeSetInit = 0;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 45  

2608   5                                              zigB_sysTimeSet(1533810700UL - 946713600UL, 0); //zigbeeÊ±¼ä´Á´Óunix¼ÍÔª946713600<2000/01/01 00:00:00
             ->¿ªÊ¼¼ÆËã
2609   5                                              
2610   5                                              dev_currentPanid = ZigB_getPanIDCurrent(); //¿ª»úºó»ñÈ¡Ò»´ÎPINID
2611   5      #if(DEBUG_LOGOUT_EN == 1)
2612   5                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2613   6                                                      
2614   6                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2615   6                                                      sprintf(log_buf, "currentPain get is :%04X.\n", dev_currentPanid);
2616   6                                                      PrintString1_logOut(log_buf);
2617   6                                              }       
2618   5      #endif
2619   5                                      }
2620   4                              }
2621   3                              
2622   3                              if(devTips_status == status_tipsNwkFind)tips_statusChangeToNormal(); //tips¸´Ô­(ÍøÂçÒÑ¼ÓÈë£¬»Ö¸´Õı³£tip
             -s)
2623   3                              
2624   3                              {/*Íø¹ØÖ÷»ú¶ªÊ§¼ì²â*///¼´Ê±¸üĞÂtips
2625   4                              
2626   4                                      if(!timeCounter_coordinatorLost_detecting)devTips_nwkZigb = nwkZigb_outLine; //Íø¹Ø¶ªÊ§tipsÓëµôÏßtipsÅ
             -ĞÎªÒ»Àà
2627   4                              }
2628   3                              
2629   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ³ÖĞø·¢ËÍ»úÖÆÖ´ĞĞ£¨ÎŞÊÓ»ØÂë£©-------------------------
             ----//Ö÷ÒªÓÃÓÚÕë¶Ô»¥¿ØÒµÎñ
2630   3                              {
2631   4                                      
2632   4                                      u16 code DTREQ_EXATTR_ONCEPERIOD = 251; //µ¥´Î·¢ËÍ¼ä¸ôÊ±¼ä¶¨Òå µ¥Î»£ºms
2633   4                                      u16 idata constandLoop_reserve = datsSend_requestEx[0].constant_Loop + datsSend_requestEx[1].constant_
             -Loop + datsSend_requestEx[2].constant_Loop;
2634   4                                      
2635   4                                      if(constandLoop_reserve){
2636   5                                      
2637   5                                              if(!dtReqEx_counter){
2638   6                                              
2639   6                                                      u16 idata current_Insert = constandLoop_reserve % 3; //´ÎĞòÂÖÁ÷
2640   6                                                      
2641   6      #if(DEBUG_LOGOUT_EN == 1)
2642   6                                                      if((constandLoop_reserve % 3) == 0){ //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä(3¸öloop´òÓ¡Ò»´Î
             -)
2643   7                                                              
2644   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2645   7                                                              sprintf(log_buf, ">>>dtCtrlEach loopParam:%d %d %d.\n", (int)datsSend_requestEx[0].constant_Loop,
2646   7                                                                                                                                                                              (int)datsSend_requestEx[1].constant_Loop,
2647   7                                                                                                                                                                              (int)datsSend_requestEx[2].constant_Loop);
2648   7                                                              PrintString1_logOut(log_buf);
2649   7                                                      }       
2650   6      #endif
2651   6                                                      
2652   6                                                      while(!datsSend_requestEx[current_Insert].constant_Loop){ //´ÎĞòÂÖÁ÷Ç°ÌáÏÂ£¬É¸Ñ¡¿ÉÓÃ
2653   7                                                      
2654   7                                                              current_Insert ++;
2655   7                                                              current_Insert %= 3;
2656   7                                                      }
2657   6                                                      
2658   6                                                      datsSend_requestEx[current_Insert].constant_Loop --;
2659   6                                                      
2660   6                                                      datsSend_requestEx[current_Insert].dats[1] = datsSend_requestEx[current_Insert].constant_Loop; //ÊµÊ
             -±¸üĞÂ³ÖĞø·¢ËÍÊ£Óà´ÎÊıÖµ
2661   6                                                      dataSendRemote_straightforward(datsSend_requestEx[current_Insert].nwkAddr, datsSend_requestEx[curren
             -t_Insert].portPoint, datsSend_requestEx[current_Insert].dats, datsSend_requestEx[current_Insert].datsLen);
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 46  

2662   6                                                      
2663   6                                                      dtReqEx_counter = DTREQ_EXATTR_ONCEPERIOD;
2664   6                                              }
2665   5                                      }
2666   4                              }
2667   3              
2668   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºĞÄÌø-----------------------------------------------------
             ----//
2669   3                              if(heartBeatCycle_FLG && !heartBeatHang_timeCnt){ //ĞÄÌø´¥·¢±êÖ¾ ¼° ¹ÒÆğÊ±¼ä ÅĞ¶Ï
2670   4                                      
2671   4                                      u8 xdata frame_dataLen = 0; //´ı·¢ËÍÊı¾İÖ¡³¤¶È
2672   4                              
2673   4                                      heartBeatCycle_FLG = 0;
2674   4                                      heartBeat_cmdFLG = !heartBeat_cmdFLG;
2675   4                                      
2676   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
2677   4                                      
2678   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              frame_dataLen = 14;
                                              paramTX_temp[0] = ZIGB_FRAMEHEAD_HEARTBEAT;
                                              paramTX_temp[1] = frame_dataLen ;
                                              (heartBeat_cmdFLG)?(paramTX_temp[2] = FRAME_HEARTBEAT_cmdOdd):(paramTX_temp[2] = FRAME_HEARTBEAT_cmdEv
             -en);
                                              memcpy(&paramTX_temp[4], &MAC_ID[1], 5);
                                              
                                              if(heartBeat_cmdFLG){ //Ææ°ü
                                              
                                                      
                                              
                                              }else{ //Å¼°ü
                                              
                                                      
                                              }
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS)  //ĞÂÖÜÆÚÑ¯·Ã»úÖÆÑ¯·ÃÖÜÆÚ
2695   4                                      
2696   4                                      //×´Ì¬Ìî×°-ÊµÊ±Öµ
2697   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İµã ¿ª¹Ø
             -×´Ì¬¸üĞÂ
2698   4                                      if(devActionPush_IF.push_IF){ //ÍÆËÍÊı¾İ¼ÓÔØ
2699   5                                      
2700   5                                              devActionPush_IF.push_IF = 0;
2701   5                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush = 0;
2702   5                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush |= devActionPush_IF.dats_Push;
2703   5                                      }
2704   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_timer                = ifTim_sw_running_FLAG; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İ
             -µã ¶¨Ê±Æ÷×´Ì¬¸üĞÂ
2705   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_devLock              = deviceLock_flag;
2706   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_delay                = (ifDelay_sw_running_FLAG & 0x02) >> 1;
2707   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_greenMode    = (ifDelay_sw_running_FLAG & 0x01) >> 0;
2708   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_nightMode    = ifNightMode_sw_running_FLAG;
2709   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_horsingLight = ifHorsingLight_running_FLAG;
2710   4                                      
2711   4                                      //ÊôĞÔÖµÌî×°-ÊµÊ±Öµ
2712   4                                      {
2713   5                                              u8 xdata loop = 0;
2714   5                                              EEPROM_read_n(EEPROM_ADDR_swTimeTab, &dev_currentDataPoint.devData_timer, sizeof(timing_Dats) * TIMEE
             -R_TABLENGTH); //¶¨Ê±Êı¾İ
2715   5                                              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //Ò»´ÎĞÔÖÜÕ¼Î»»Ö¸´
2716   6                                              
2717   6                                                      if(swTim_oneShoot_FLAG & (1 << loop))dev_currentDataPoint.devData_timer[3 * loop] = 0x80; //Õë¶ÔÒ»´Î
             -ĞÔ¶¨Ê±»ØÂëÖÜÕ¼Î»Çå¿Õ
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 47  

2718   6                                              }
2719   5                                      }
2720   4                                      dev_currentDataPoint.devData_delayer            = delayPeriod_onoff - (delayCnt_onoff / 60); //ÑÓÊ±Êı¾İ
2721   4                                      dev_currentDataPoint.devData_delayUpStatus      = delayUp_act; //ÑÓÊ±ÏìÓ¦×´Ì¬Êı¾İ
2722   4                                      dev_currentDataPoint.devData_greenMode          = delayPeriod_closeLoop; //ÂÌÉ«Ä£Ê½×´Ì¬Êı¾İ
2723   4                                      { //Ò¹¼äÄ£Ê½Êı¾İÌØÊâ×ª»»
2724   5                                              
2725   5                                              timing_Dats xdata nightDatsTemp_CalibrateTab[2] = {0};
2726   5                                              
2727   5                                              datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
2728   5                                              ((nightDatsTemp_CalibrateTab[0].Week_Num & 0x7F) == 0x7F)?(dev_currentDataPoint.devData_nightMode[0] 
             -= 1):(dev_currentDataPoint.devData_nightMode[0] = 0);
2729   5                                              (nightDatsTemp_CalibrateTab[0].if_Timing)?(dev_currentDataPoint.devData_nightMode[1] = 1):(dev_curren
             -tDataPoint.devData_nightMode[1] = 0);
2730   5                                              dev_currentDataPoint.devData_nightMode[2] = nightDatsTemp_CalibrateTab[0].Hour;
2731   5                                              dev_currentDataPoint.devData_nightMode[3] = nightDatsTemp_CalibrateTab[0].Minute;
2732   5                                              dev_currentDataPoint.devData_nightMode[4] = nightDatsTemp_CalibrateTab[1].Hour;
2733   5                                              dev_currentDataPoint.devData_nightMode[5] = nightDatsTemp_CalibrateTab[1].Minute;
2734   5                                              
2735   5      #if(DEBUG_LOGOUT_EN == 1)
2736   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<Ò¹¼äÄ£Ê½ÂãÊı¾İ´òÓ¡
2737   5      //                                              
2738   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2739   5      //                                              sprintf(log_buf, ">>>nightMode dats upload: [%02X %02X %02X",   (int)dev_currentDataPoint.devData_n
             -ightMode[0],
2740   5      //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[1],
2741   5      //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[2]);
2742   5      //                                              PrintString1_logOut(log_buf);
2743   5      //                                                                                                                                                                              
2744   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2745   5      //                                              sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_currentDataPoint.devData_nightMode[3],
2746   5      //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[4],
2747   5      //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[5]);
2748   5      //                                              PrintString1_logOut(log_buf);
2749   5      //                                      }       
2750   5      
2751   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<¶¨Ê±ÔËĞĞ±êÖ¾´òÓ¡
2752   5      //                                      
2753   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2754   5      //                                              sprintf(log_buf, "ifTim_sw_running_FLAG:%d\n",  (int)ifTim_sw_running_FLAG);
2755   5      //                                              PrintString1_logOut(log_buf);
2756   5      //                                      }
2757   5      #endif  
2758   5                                      }
2759   4                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround, &dev_currentDataPoint.devData_bkLight, 2); //±³¾°µÆÊı¾İ
2760   4                                      dev_currentDataPoint.devData_devReset = 0;
2761   4                                      EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther, dev_currentDataPoint.devData_switchBitBind, clusterNum_us
             -r); //»¥¿Ø°ó¶¨Êı¾İ
2762   4                                      
2763   4                                      //Ê±Ğ§²Ù×÷Õ¼Î»Ö¸ÁîÌî×°
2764   4                                      switch(dtModeKeepAcess_currentCmd){
2765   5                                      
2766   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
2767   6                                              
2768   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_rcvPassive, sizeof(stt_agi
             -ngDataSet_bitHold));
2769   6                                              
2770   6                                              }break;
2771   5                                                      
2772   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
2773   6                                              
2774   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_sndInitative, sizeof(stt_a
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 48  

             -gingDataSet_bitHold));
2775   6                                              
2776   6                                              }break;
2777   5                                                      
2778   5                                              default:{}break;
2779   5                                      }
2780   4                                      
2781   4                                      //Êı¾İÖ¡×ÜÊı¾İÌî×°
2782   4                                      frame_dataLen                                   = 0;
2783   4                                      paramTX_temp[frame_dataLen ++]  = DTMODEKEEPACESS_FRAMEHEAD_ONLINE; //Ö¡Í·
2784   4                                      paramTX_temp[frame_dataLen ++]  = 0;  //Ö¡³¤ÔİÌî0£¬×îºó¸üĞÂ
2785   4                                      memcpy(&paramTX_temp[frame_dataLen], &MAC_ID[1], 5); //MAC
2786   4                                      frame_dataLen += 6; //¿Õ³ö1Byte MAC
2787   4                                      paramTX_temp[frame_dataLen ++]  = dtModeKeepAcess_currentCmd; //ÃüÁî
2788   4                                      paramTX_temp[frame_dataLen ++]  = SWITCH_TYPE; //¿ª¹ØĞÅÏ¢
2789   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0xFF00) >> 8); //PANIDÌî×°
2790   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0x00FF) >> 0); 
2791   4                                      paramTX_temp[frame_dataLen ++]  = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
2792   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_H; //Ê±Çø_Ê±
2793   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_M; //Ê±Çø_·Ö
2794   4                                      memcpy(&paramTX_temp[frame_dataLen], &dev_currentDataPoint, sizeof(stt_devOpreatDataPonit)); //Ö±½ÓÊı¾
             -İÖ¸Õë¶ÔÆë,Êı¾İµãÏòÊı¾İÖ¡´ı·¢»º´æÇ¿í¡
2795   4                                      frame_dataLen += sizeof(stt_devOpreatDataPonit);
2796   4                                      frame_dataLen ++;
2797   4                                      paramTX_temp[1]                                 = frame_dataLen;
2798   4                                      paramTX_temp[frame_dataLen - 1] = frame_Check(&paramTX_temp[1], frame_dataLen - 2); //Ğ£ÑéÂë×îºóËã
2799   4                                      
2800   4      //#if(DEBUG_LOGOUT_EN == 1)
2801   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2802   4      //                                      u8 xdata log_buf[64];
2803   4      //                                      
2804   4      //                                      sprintf(log_buf, "package_num:[%02d], check_num[%02X].\n", (int)frame_dataLen, (int)paramTX_temp[fr
             -ame_dataLen - 1]);
2805   4      //                                      PrintString1_logOut(log_buf);
2806   4      //                              }                       
2807   4      //#endif        
2808   4                              
2809   4      #endif                          
2810   4                                      datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
2811   4                                      datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
2812   4                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
2813   4                                      memcpy(datsSend_request.datsTrans.dats, paramTX_temp, frame_dataLen );
2814   4                                      datsSend_request.datsTrans.datsLen = frame_dataLen ;
2815   4                                      datsRcv_respond.datsTrans.datsLen = 0;
2816   4                                      devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
2817   4                                      devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 4; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆÚ
             -ÄÚ ·¢ 4´Î
2818   4                                      devRunning_Status = status_dataTransRequestDatsSend;
2819   4                                      
2820   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
2821   4                              }
2822   3                              
2823   3                              //------------------------------Ö÷×´Ì¬ÒµÎñ£º±¾µØ¿ª¹ØÊÜ¼¯Èº¿ØÖÆ×´Ì¬Î»ÖÜÆÚĞÔÂÖÑ¯<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>-------
             ---//
2824   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                                      if(!colonyCtrlGet_queryCounter && !colonyCtrlGetHang_timeCnt){ //ÖÜÆÚÑ¯²é ¼° ¹ÒÆğÊ±¼äÅĞ¶Ï
                                      
                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<<<<<<<<<<<<<<<<<*/
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 49  

                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2...6]       |       frame_data[7]                   |       frame_data[8...10]      |
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾»úMACµØÖ·                     |       ³¡¾°ËµÃ÷(ÔİÎŞËµÃ÷)              |       »¥¿ØËµÃ÷(µ±Ç°×éºÅ)      |               
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              paramTX_temp[0] = ZIGB_SYSCMD_COLONYPARAM_REQPERIOD; //ÃüÁî
                                              paramTX_temp[1] = clusterNum_usr + 5 + 1; //Êı¾İ³¤¶ÈËµÃ÷
                                              memcpy(&paramTX_temp[2], &MAC_ID[1], 5); //MACµØÖ·Ìî×°
                                              paramTX_temp[7] = 0; //³¡¾°ËµÃ÷×°ÔØ(ÎŞËµÃ÷£¬0Ìî³ä)
                                              memcpy(&paramTX_temp[8], CTRLEATHER_PORT, clusterNum_usr); //»¥¿ØËµÃ÷×°ÔØ(ËµÃ÷¶Ë¿ÚºÅ)
                                              
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLSYSZIGB; //zigbÏµÍ³½»»¥×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, paramTX_temp[1] + 2); 
                                              datsSend_request.datsTrans.datsLen = paramTX_temp[1] + 2;
                                              datsRcv_respond.datsTrans.datsLen = 0; //²»ĞèÒªÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend;
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
2853   3                              
2854   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İÍÆËÍ-------------------------------------------------
             ---//        
2855   3                              if(devActionPush_IF.push_IF){
2856   4                                      
2857   4                                      const bit dataFromRemote_IF = 1; //Ô¶³ÌÍÆËÍ
2858   4                                      const bit specialCmd_IF = 0; //·ÇÌØÊâÕ¼Î»
2859   4                                      
2860   4                                      u8 xdata datsTX_Len = 0;
2861   4                                      
2862   4                                      devActionPush_IF.push_IF = 0;
2863   4                                      
2864   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              
                                              paramTX_temp[11] = devActionPush_IF.dats_Push; //ÍÆËÍĞÅÏ¢Ìî×°
              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      u8 xdata log_buf[64];
                                                      
                                                      sprintf(log_buf, "swData push:%02X.\n", (int)devActionPush_IF.dats_Push);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
                                                                                                                 paramTX_temp,
                                                                                                                 33,
                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
                                                                                                                 FRAME_MtoZIGBCMD_cmdControl,
                                                                                                                 specialCmd_IF);
                                      
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 50  

                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) //ÖÜÆÚÑ¯·Ã»úÖÆÎŞĞèÍÆËÍ£¬Ö»Ğè´¥·¢Ö÷¶¯Ê±Ğ§ÃüÁ
             -î¼´¿É
2894   4                                      
2895   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swPush = (devActionPush_IF.dats_Push & 0xE0) >> 5; 
             -//ÊôĞÔÖµÌî×°
2896   4                                      dev_agingCmd_sndInitative.agingCmd_swOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ğ§Õ¼Î»ÖÃÒ»
2897   4                                      dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
2898   4                                      
2899   4                                      heartBeatPeriod = PERIOD_HEARTBEAT_PST; //Ö÷¶¯Ñ¯·ÃÇĞ»»£¬ĞÄÌøÖÜÆÚ¸ÄÎªÖ÷¶¯
2900   4                                      heartBeatCount  = heartBeatPeriod; 
2901   4      #endif
2902   4      
2903   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
2904   4                              }
2905   3                              
2906   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º»¥¿ØÍ¬²½-------------------------------------------------
             ---//
2907   3                              if(EACHCTRL_realesFLG){ //¹ã²¥»¥¿ØÖµ
2908   4                              
2909   4                                      if(devRunning_Status == status_passiveDataRcv){
2910   5                                      
2911   5                                              u8 idata loop;
2912   5                                              
2913   5                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //Èı¸ö¿ª¹ØÎ»·Ö±ğÅĞ¶¨
2914   6                                              
2915   6                                                      if(EACHCTRL_realesFLG & (1 << loop)){ //»¥¿ØÓĞĞ§Î»ÅĞ¶Ï
2916   7                                                      
2917   7                                                              EACHCTRL_realesFLG &= ~(1 << loop); //»¥¿ØÓĞĞ§Î»ÇåÁã
2918   7                                                              
2919   7                                                              paramTX_temp[0] = (status_Relay >> loop) & 0x01; //¿ª¹Ø×´Ì¬Ìî×°
2920   7                                                              
2921   7                                                              if((CTRLEATHER_PORT[loop] > CTRLEATHER_PORT_NUMSTART) && CTRLEATHER_PORT[loop] < CTRLEATHER_PORT_NU
             -MTAIL){ //ÊÇ·ñÎªÓĞĞ§»¥¿Ø¶Ë¿Ú
2922   8                                                                      
2923   8                                                                      (paramTX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_ON):(c
             -olonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
2924   8                                                                      localDataRecord_eaCtrl[loop] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
2925   8                                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢
             -Î´¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
2926   8                                                              
2927   8                                                                      /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
2928   8                                                                      datsSend_requestEx[loop].nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
2929   8                                                                      datsSend_requestEx[loop].portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
2930   8                                                                      memset(datsSend_requestEx[loop].dats, 0, 10 * sizeof(u8));
2931   8                                                                      
2932   8                                                                      datsSend_requestEx[loop].dats[0] = paramTX_temp[0];
2933   8                                                                      datsSend_requestEx[loop].dats[1] = 0; //ÏÂ±ê2Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
2934   8                                                                      datsSend_requestEx[loop].datsLen = 2;
2935   8                                                                      datsSend_requestEx[loop].constant_Loop = 30; //ÎŞÊÓ»ØÂë£¬·¢30´Î
2936   8                                                                      
2937   8      //                                                              /*³£¹æ·¢ËÍ£¬ÊÕµ½Ğ­ÒéÕ»»ØÂëÏìÓ¦¾ÍÍ£Ö¹·¢ËÍ£¬ÇÒÓĞ³¬Ê±*///³£¹æ
2938   8      //                                                              datsSend_request.nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
2939   8      //                                                              datsSend_request.portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
2940   8      //                                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
2941   8      //                                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, 1);
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 51  

2942   8      //                                                              datsSend_request.datsTrans.datsLen = 1;
2943   8      //                                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
2944   8      //                                                              
2945   8      //                                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
2946   8      //                                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 10; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³
             -¬Ê±ÖÜÆÚÄÚ ·¢ 10 ´Î
2947   8      //                                                              
2948   8      //                                                              EACHCTRL_reportFLG = 1; //ÏòÍø¹Ø»ã±¨
2949   8      //                                                              
2950   8      //                                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
2951   8      //                                                              
2952   8      //                                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬
             -±£³Ö£¬µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
2953   8                                                              }
2954   7                                                      }
2955   6                                              }
2956   5                                      }       
2957   4                              }
2958   3      
2959   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ   
                                      if(EACHCTRL_reportFLG){ //ÏòÍø¹Øµ¥²¥µ±Ç°ËùÓĞ»¥¿Ø×éºÅ¶ÔÓ¦µÄ¿ª¹Ø×´Ì¬Öµ
                                      
                                              EACHCTRL_reportFLG = 0;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2/4/6]       |               frame_data[3/5/7]                       |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ          |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ¶ÔÓ¦¿ª¹Ø×´Ì¬Öµ    |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              {
                                                      u8 code remote_responseFrame[3] = {ZIGB_SYSCMD_EACHCTRL_REPORT, 0x01, 0x00}; //Ô¶¶ËÏìÓ¦Ö¡<È·±£Ö÷»úÊÕµ
             -½>
                                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                              u8 xdata log_buf[64];
                                                              
                                                              sprintf(log_buf, "current eaCtrl insrt[2] is: %02X.\n", (int)colonyCtrlGet_statusLocalEaCtrl[1]);
                                                              PrintString1_logOut(log_buf);
                                                      }                       
              #endif  
                                                      
                                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                                      datsSend_request.datsTrans.dats[0]      = ZIGB_SYSCMD_EACHCTRL_REPORT;
                                                      datsSend_request.datsTrans.dats[1]      = 6;
                                                      datsSend_request.datsTrans.dats[2]      = CTRLEATHER_PORT[0];
                                                      datsSend_request.datsTrans.dats[3]      = colonyCtrlGet_statusLocalEaCtrl[0];
                                                      datsSend_request.datsTrans.dats[4]      = CTRLEATHER_PORT[1];
                                                      datsSend_request.datsTrans.dats[5]      = colonyCtrlGet_statusLocalEaCtrl[1];
                                                      datsSend_request.datsTrans.dats[6]      = CTRLEATHER_PORT[2];
                                                      datsSend_request.datsTrans.dats[7]      = colonyCtrlGet_statusLocalEaCtrl[2];
                                                      datsSend_request.datsTrans.datsLen      = 8;
                                                      datsSend_request.nwkAddr                        = 0;
                                                      datsSend_request.portPoint                      = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      memset(datsRcv_respond.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8)); //ĞèÒªÔ¶¶ËÏìÓ¦
                                                      memcpy(datsRcv_respond.datsTrans.dats, remote_responseFrame, 3); //Ô¶¶ËÏìÓ¦Ö¡¼ÓÔØ
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 52  

                                                      datsRcv_respond.datsTrans.datsLen       = 3;
                                                      datsRcv_respond.nwkAddr                         = 0;
                                                      datsRcv_respond.portPoint                       = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              }
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
3007   3                              
3008   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ½âÎöÏìÓ¦---------------------------------------------
             ---//
3009   3                              if(uartRX_toutFLG){ //Êı¾İ½ÓÊÕ(Ö¡³¬Ê±)
3010   4                                      
3011   4                                      uartRX_toutFLG = 0;
3012   4                                      
3013   4      //                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
3014   4      //                              
3015   4      //#if(DEBUG_LOGOUT_EN == 1)
3016   4      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3017   4      //                                                      u8 xdata log_buf[64];
3018   4      //                                                      
3019   4      //                                                      sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
3020   4      //                                                      PrintString1_logOut(log_buf);
3021   4      //                                              }                       
3022   4      //#endif        
3023   4      //                              }
3024   4                                      
3025   4                                      /*ZigbeeÒ»¼¶Ğ­ÒéºË¶Ô½âÎö*/
3026   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3027   4                                              !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_datsComing, 2)){ //Ô¶¶ËÊı¾İµ½À´Ö¸Áî
3028   5                                              
3029   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
3030   5                                              u8      idata srcPoint =  datsRcv_ZIGB.rcvDats[10];     //Ô´¶Ë
3031   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë
3032   5                                                      
3033   5                                              if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //Êı¾İÀ´Ô´¶ÌµØÖ·¼ì²â£¬ÊÇ·ñÀ´×ÔÍø¹ØÖ÷»ú
3034   6                                              
3035   6                                                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //Íø¹ØÖ÷»úÊ§ÁªÈ·ÈÏ¼ì²â¼ÆÊ±Ö
             -ØÖÃ
3036   6                                                      if(devTips_nwkZigb != nwkZigb_nwkOpen)devTips_nwkZigb = nwkZigb_Normal; //zigbTips×´Ì¬ÏìÓ¦£¬Ö»Òª½ÓÊÕ
             -µ½Íø¹ØzigbÊı¾İ£¬tips×´Ì¬¾ÍÇĞ»»ÖÁÕı³£
3037   6                                              }
3038   5                                              
3039   5                                              memset(paramRX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans);
3040   5                                              memcpy(paramRX_temp, &(datsRcv_ZIGB.rcvDats[21]), datsRcv_ZIGB.rcvDats[20]);
3041   5                                                      
3042   5                                              if(srcPoint > CTRLEATHER_PORT_NUMSTART && srcPoint < CTRLEATHER_PORT_NUMTAIL){ /*»¥¿Ø¶Ë¿Ú*/
3043   6                                                      
3044   6                                                      u8 idata statusRelay_temp = status_Relay; //µ±Ç°¿ª¹Ø×´Ì¬»º´æ
3045   6                                                      u8 idata localActLoop = 0;
3046   6                                                      
3047   6                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢Î´
             -¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3048   6                                                      
3049   6      #if(DEBUG_LOGOUT_EN == 1)
3050   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3051   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3052   7                                                              sprintf(log_buf, "ctrl eachOther cmd coming, cluster:%02d, val:%02d, loop:%02d.\n", (int)srcPoint, 
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 53  

             -(int)paramRX_temp[0], (int)paramRX_temp[1]);
3053   7                                                              PrintString1_logOut(log_buf);
3054   7                                                      }                       
3055   6      #endif  
3056   6                                                      /*»¥¿Ø±»¶¯ÏìÓ¦*/
3057   6                                                      for(localActLoop = 0; localActLoop < clusterNum_usr; localActLoop ++){
3058   7                                                      
3059   7                                                              if((srcPoint == CTRLEATHER_PORT[localActLoop]) && (0 != CTRLEATHER_PORT[localActLoop])){ //¿ª¹ØÎ»1 
             -»¥¿Ø°ó¶¨ÅĞ¶Ï
3060   8                                                              
3061   8                                                                      if(paramRX_temp[1] > datsSend_requestEx[localActLoop].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
3062   9                                                                      
3063   9                                                                              statusRelay_temp &= ~(1 << localActLoop); //¶¯×÷Î»»º´æÇåÁã
3064   9                                                                              swCommand_fromUsr.objRelay = statusRelay_temp | paramRX_temp[0] << localActLoop; //bit¶ÔÓ¦ ¿ª¹ØÎ»
             -¶¯×÷¼ÓÔØ
3065   9                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
3066   9                                                                              (paramRX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRESER
             -VE_ON):(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
3067   9                                                                              
3068   9                                                                              datsSend_requestEx[localActLoop].constant_Loop = 0;  
3069   9                                                                              
3070   9                                                                              localDataRecord_eaCtrl[localActLoop] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3071   9                                                                      }
3072   8                                                                      
3073   8                                                                      break;
3074   8                                                              }
3075   7                                                      }
3076   6                                                      
3077   6                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
3078   6                                              
3079   6                                              }else{ /*·Ç»¥¿Ø¶Ë¿Ú*///Ê£ÏÂ¾ÍÊÇÏµÍ³×¨ÓÃµÄ15¸ö¶Ë¿Ú
3080   6                                              
3081   6                                                      switch(srcPoint){
3082   7                                                              
3083   7                                                              /*³¡¾°¼¯Èº¶Ë¿Ú*/
3084   7                                                              case ZIGB_ENDPOINT_CTRLSECENARIO:{      
3085   8                                                              
3086   8                                                                      dataParing_scenarioCtrl(paramRX_temp); //³¡¾°¼¯Èº¿ØÖÆ½âÎö
3087   8                                                                      
3088   8                                                              }break;
3089   7                                                      
3090   7                                                              /*³£¹æ¿ØÖÆ×ª·¢¶Ë¿Ú*/
3091   7                                                              case ZIGB_ENDPOINT_CTRLNORMAL:{ 
3092   8                                                              
3093   8                                                                      if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //À´×ÔĞ­µ÷Æ÷
3094   9                                                                      
3095   9                                                                              dataParing_Nomal(paramRX_temp, datsFrom_addr, srcPoint); //³£¹æ½âÎö
3096   9                                                                      }
3097   8                                                                      
3098   8                                                              }break;
3099   7                                                              
3100   7                                                              /*zigbÏµÍ³½»»¥¶Ë¿Ú*/
3101   7                                                              case ZIGB_ENDPOINT_CTRLSYSZIGB:{        
3102   8                                                              
3103   8                                                                      dataParing_zigbSysCtrl(paramRX_temp); //ÏµÍ³¿ØÖÆ½âÎö
3104   8                                                                      
3105   8                                                              }break;
3106   7                                                                      
3107   7                                                              default:{
3108   8                                                              
3109   8                                                                      
3110   8                                                                      
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 54  

3111   8                                                              }break;
3112   7                                                      }
3113   6                                              }
3114   5                                              
3115   5                                      }else
3116   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3117   4                                         !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_nwkOpenNote, 2)){ //ÍøÂç¿ª·ÅÍ¨Öª
3118   5                                              
3119   5                                              tips_statusChangeToZigbNwkOpen(datsRcv_ZIGB.rcvDats[4]); //tips´¥·¢
3120   5                                      }
3121   4                              }
3122   3                              
3123   3                      }break;
3124   2                      
3125   2                      case status_nwkREQ:{
3126   3                      
3127   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂçÇëÇó-----------------------------------------------//
3128   3                              devTips_nwkZigb = nwkZigb_nwkREQ;
3129   3                              zigB_nwkJoinRequest(1); //·Ç×èÈûÖ÷¶¯¼ÓÈë¸½½ü¿ª·ÅÍøÂç
3130   3                              
3131   3                      }break;
3132   2                              
3133   2                      case status_nwkReconnect:{
3134   3                      
3135   3                              //--------------------------------Ğ­×´Ì¬£ºµôÏß´¦Àí-----------------------------------------------//
3136   3                              devTips_nwkZigb = nwkZigb_reConfig;
3137   3                              zigB_nwkJoinRequest(0); //·Ç×èÈûÖØÁ¬
3138   3                              
3139   3                      }break;
3140   2                      
3141   2                      case status_dataTransRequestDatsSend:{
3142   3                              
3143   3                              //--------------------------------Ğ­×´Ì¬£ºÊı¾İÇëÇó-----------------------------------------------//
3144   3                              dataTransRequest_datsSend(); //·Ç×èÈûÔ¶¶ËÊı¾İ´«Êä
3145   3                      
3146   3                      }break;
3147   2                      
3148   2                      case status_devNwkHold:{
3149   3                      
3150   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂç¹ÒÆğ-----------------------------------------------//
3151   3                              devTips_nwkZigb = nwkZigb_hold;
3152   3                              function_devNwkHold();
3153   3                              
3154   3                      }break;
3155   2                      
3156   2                      case status_devFactoryRecoverStandBy:{
3157   3                      
3158   3                              //--------------------------------Ğ­×´Ì¬£º»Ö¸´³ö³§Ô¤ÖÃ-----------------------------------------------//
3159   3                              devTips_nwkZigb = nwkZigb_outLine;
3160   3                              if(!factoryRecover_HoldTimeCount){
3161   4                              
3162   4                                      if(factoryRecover_standBy_FLG)Factory_recover();
3163   4                              }
3164   3                              
3165   3                      }break;
3166   2                              
3167   2                      default:{
3168   3                      
3169   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
3170   4                              
3171   4                                      devStatus_switch.statusChange_IF = 0;
3172   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
C51 COMPILER V9.54   DATATRANS                                                             12/07/2018 17:31:28 PAGE 55  

3173   4                                      
3174   4                                      break;
3175   4                              }
3176   3                      
3177   3                      }break;
3178   2              }
3179   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  11351    ----
   CONSTANT SIZE    =   4116    ----
   XDATA SIZE       =    553    1144
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9     144
   IDATA SIZE       =   ----      15
   BIT SIZE         =      9      17
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
