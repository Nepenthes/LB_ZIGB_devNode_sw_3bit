C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DATATRANS
OBJECT MODULE PLACED IN .\Output\dataTrans.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE dataTrans\dataTrans.c OMF2 OPTIMIZE(9,SIZE) BROWSE INCDIR(.\Usr;.\Usr_li
                    -b;.\std_Lib;.\dataTrans;.\Actuator;.\Sensor;.\hwDriver) DEBUG PRINT(.\Listings\dataTrans.lst) OBJECT(.\Output\dataTrans.
                    -obj)

line level    source

   1          #include "dataTrans.h"
   2          
   3          #include "string.h"
   4          #include "stdio.h"
   5          
   6          #include "eeprom.h"
   7          #include "USART.h"
   8          #include "delay.h"
   9          #include "Relay.h"
  10          #include "usrKin.h"
  11          
  12          #include "timerAct.h"
  13          #include "pars_Method.h"
  14          #include "dataManage.h"
  15          #include "Tips.h"
  16          
  17          #include "driver_I2C_HXD019D.h"
  18          #include "DS18B20.h"
  19          
  20          /**********************±¾µØÎÄ¼ş±äÁ¿¶¨ÒåÇø************************/
  21          datsAttr_datsTrans xdata datsSend_request = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ
  22          datsAttr_dtCtrlEach xdata datsSend_requestEx[clusterNum_usr] = {0}; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ£¨³ÖĞø·¢ËÍ
             -£¬ÎŞĞèÔ¶¶ËÏìÓ¦£©
  23          u16 xdata dtReqEx_counter = 0; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇóÊı¾İ·¢ËÍ¼ä¸ô¼ÆÊ±Öµ µ¥Î»£ºms
  24          datsAttr_datsTrans xdata datsRcv_respond = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇóµÈ´ıÏìÓ¦»º´æ»º´æ
  25          remoteDataReq_method xdata devRemoteDataReqMethod = {0}; //Ô¶¶ËÊı¾İÇëÇó·½Ê½
  26          
  27          stt_devOpreatDataPonit xdata dev_currentDataPoint = {0}; //ÖÜÆÚÑ¯·ÃÊı¾İµã
  28          stt_agingDataSet_bitHold xdata  dev_agingCmd_rcvPassive = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --±»¶¯½ÓÊÕ
  29          stt_agingDataSet_bitHold xdata  dev_agingCmd_sndInitative = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --Ö÷¶¯ÉÏ´«
  30          u8 dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR; //Êı¾İ´«ÊäÎª¶¨Ê±Ñ¯·ÃÄ£Ê½Ê±£¬Ğ¯´øÑ¯·ÃÖ¸ÁîÖµ£¬
             -ĞèÒªÖ÷¶¯ÉÏ´«Ê±Ôò¸ü¸Ä´ËÖµ
  31          
  32          //zigbeeÔËĞĞ×´Ì¬ÇĞ»»±êÖ¾
  33          stt_statusChange xdata devStatus_switch = {0, status_NULL};
  34          
  35          //Êı¾İÇëÇóÍê³ÉºóÊÇ·ñĞèÒªÖØÆôÍøÂç
  36          bit reConnectAfterDatsReq_IF = 0; //ÓÃÓÚ»¥¿ØÍ¨Ñ¶´Ø¼´¿Ì×¢²áÌØÊâÇé¿öÏÂÊ¹ÓÃ
  37          bit coordinatorOnline_IF = 0; //Ğ­µ÷Æ÷ÔÚÏß±êÖ¾
  38          
  39          //zigbÍøÂç¶¯×÷×¨ÓÃÊ±¼ä¼ÆÊı
  40          u16 xdata zigbNwkAction_counter = 0;
  41          
  42          //zigbÆ÷¼şÑÓÊ±Æô¶¯Ê±¼ä¼ÆÊ±±äÁ¿ --Ê×´Î¿ª»úÉÏµçÆô¶¯Ê±£¬zigbÆ÷¼şÑÓ³ÙÆô¶¯£¬·ÀÖ¹ÉÏÒ»´Î¸ü»»Íø¹ØÊ±×ÓÉè±¸Ã»ÓĞÍêÈ«¹
             -ÒÆğ
  43          u16 idata devZigbNwk_startUp_delayCounter = 20;
  44          
  45          //zigbÉè±¸ÍøÂç¹ÒÆğÊôĞÔ²ÎÊı
  46          attr_devNwkHold xdata devNwkHoldTime_Param = {0};
  47          
  48          //ĞÄÌø
  49          bit heartBeatCycle_FLG                  = 0; //ĞÄÌøÖÜÆÚ´¥·¢
  50          u8      xdata heartBeatCount            = 0; //ĞÄÌøÖÜÆÚ¼ÆÊı
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 2   

  51          u8      xdata heartBeatPeriod           = PERIOD_HEARTBEAT_ASR; //ĞÄÌø¼ÆÊıÖÜÆÚ
  52          u8      xdata heartBeatHang_timeCnt = 0; //ĞÄÌø¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ·¢ËÍĞÄÌø£¬·ñÔòĞÄÌø¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  53          
  54          //»¥¿Ø¶ÔÍâÖÜÆÚĞÔÍ¨Öª×ÔÉíµØÖ·
  55          u8      xdata dnCounter_mutualAddrPeriodPingOut = PERIOD_HEARTBEAT_ASR * 2; //ÖÜÆÚ¼ÆÊ±Öµ    µ¥Î»£ºs --Ä¬ÈÏÎª2±¶
             -ĞÄÌø
  56          u16 xdata dnCounter_mutAddrsPingLoopPeriod = 0; //Èı×é»¥¿Ø²ÎÊıÁ¬ĞøÍ¨Öª¼ä¸ô    µ¥Î»£ºms
  57          bit idata cycleFlg_mutualAddrPeriodPingOut = 0;
  58          
  59          //¼¯ÈºÊÜ¿ØÖÜÆÚÂÖÑ¯-<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>
  60          u8      xdata colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÑ¯²é¼ÆÊ±¼ÆÊıÖµ
  61          u8      xdata colonyCtrlGet_statusLocalEaCtrl[clusterNum_usr] = {0}; //¼¯Èº¿ØÖÆ-±¾µØ»¥¿Ø×´Ì¬Î»¼ÇÂ¼
  62          u8      xdata localDataRecord_eaCtrl[clusterNum_usr] = {0}; //±¾µØ¾²Ì¬Êı¾İ¼ÇÂ¼£º»¥¿ØÊµ¼ÊÖµ
  63          u8      xdata colonyCtrlGet_statusLocalScene = 0; //¼¯Èº¿ØÖÆ-±¾µØ³¡¾°×´Ì¬Î»¼ÇÂ¼
  64          u8      xdata colonyCtrlGetHang_timeCnt = 0; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÂÖÑ¯¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ½øĞĞÖÜÆÚÑ¯²é£¬·ñ
             -ÔòÑ¯²é¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  65          
  66          //´®¿Ú½ÓÊÕ³¬Ê±±êÖ¾
  67          bit uartRX_toutFLG      = 0;
  68          //´®¿Ú½ÓÊÕ³¬Ê±¼ÆÊı
  69          bit rxTout_count_EN = 0;
  70          u8  rxTout_count        = 0;
  71          //´®¿ÚÊı¾İ»º´æ
  72          u8      datsRcv_length  = 0;
  73          uartTout_datsRcv xdata datsRcv_ZIGB = {{0}, 0};
  74          
  75          //zigbeeÍ¨ĞÅÏß³Ìµ±Ç°ÔËĞĞ×´Ì¬±êÖ¾
  76          threadRunning_Status devRunning_Status = status_NULL;
  77          
  78          //zigbeeĞ­µ÷Æ÷¶ªÊ§¼ì²â¼ÆÊ±±äÁ¿ --ÏŞ¶¨Ê±¼äÄÚÃ»ÓĞÊÕµ½Íø¹ØµÄÊı¾İ
  79          u8 xdata timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; 
  80          //zigbeeĞ­µ÷Æ÷¶ªÊ§ºóÓĞ¶à³¤Ê±¼ä --Íø¹Ø¶ªÊ§ºó¿ªÊ¼¼ÆÊ±
  81          u8 xdata timeCounter_coordinatorLost_keeping = 0;
  82          
  83          u8      xdata factoryRecover_HoldTimeCount = 0; //»Ö¸´³ö³§µÈ´ıÊ±¼ä
  84          bit idata factoryRecover_standBy_FLG = 0; //»Ö¸´³ö³§Ô¤ÖÃ±êÖ¾
  85          
  86          void zigbUart_pinInit(void){
  87   1      
  88   1              //TXÍÆÍìÊä³ö
  89   1              P3M1 &= 0xFD;   
  90   1              P3M0 |= 0x02;   
  91   1              
  92   1              //RX¸ß×èÊäÈë
  93   1              P3M1 |= 0x01;
  94   1              P3M0 &= 0xFE;
  95   1              
  96   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                      
                      P2M1 &= ~0x40;
                      P2M0 |= 0x40;
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                      
              #else
 103   1              
 104   1              P2M1 &= ~0x08;
 105   1              P2M0 |= 0x08;
 106   1      #endif
 107   1      }
 108                  
 109          /*--------------------------------------------------------------*/
 110          void uartObjZigb_Init(void){
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 3   

 111   1      
 112   1              EA = 0;
 113   1      
 114   1              PS = 0;
 115   1              SCON = (SCON & 0x3f) | UART_8bit_BRTx;
 116   1      
 117   1      {
 118   2              u32 j = (MAIN_Fosc / 4) / ZIGB_BAUND;   //°´1T¼ÆËã
 119   2                      j = 65536UL - j;
 120   2              
 121   2              TH2 = (u8)(j>>8);
 122   2              TL2 = (u8)j;
 123   2      }
 124   1              AUXR &= ~(1<<4);        //Timer stop
 125   1              AUXR |= 0x01;           //S1 BRT Use Timer2;
 126   1              AUXR &= ~(1<<3);        //Timer2 set As Timer
 127   1              AUXR |=  (1<<2);        //Timer2 set as 1T mode
 128   1      
 129   1              IE2  &= ~(1<<2);        //½ûÖ¹ÖĞ¶Ï
 130   1              AUXR &= ~(1<<3);        //¶¨Ê±
 131   1              AUXR |=  (1<<4);        //Timer run enable
 132   1      
 133   1              ES        = 1;
 134   1              REN   = 1;
 135   1              P_SW1 = (P_SW1 & 0x3f) | (UART1_SW_P30_P31 & 0xc0);
 136   1              
 137   1              memset(TX1_Buffer, 0, sizeof(char) * COM_TX1_Lenth);
 138   1      
 139   1              EA = 1;
 140   1      
 141   1              PrintString1("i'm UART1 for wifi data translate !!!\n");
 142   1              PrintString1_logOut("i'm UART1 for datsLog !!!\n");
 143   1      }
 144          
 145          ///*----------------------------
 146          //·¢ËÍ´®¿ÚÊı¾İ
 147          //----------------------------*/
 148          //void uartObjWIFI_Send_Byte(u8 dat)    //´®¿Ú1
 149          //{
 150          //      TX1_write2buff(dat);
 151          //}
 152          
 153          //void uartObjWIFI_Send_String(char *s,unsigned char ucLength){  //´®¿Ú1
 154          //      
 155          //      uart1_datsSend(s, ucLength);
 156          //}
 157          
 158          //void rxBuff_WIFI_Clr(void){
 159          
 160          //      memset(rxBuff_WIFI, 0xff, sizeof(char) * COM_RX1_Lenth);
 161          //      COM1.RX_Cnt = 0;
 162          //}
 163          
 164          /********************* UART1(WIIF)ÖĞ¶Ïº¯Êı_×Ô¶¨ÒåÖØ¹¹************************/
 165          void UART1_Rountine (void) interrupt UART1_VECTOR
 166          {
 167   1              
 168   1              if(RI)
 169   1              {
 170   2                      RI = 0;
 171   2                      if(COM1.B_RX_OK == 0)
 172   2                      {
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 4   

 173   3                              
 174   3      //                      if(COM1.RX_Cnt >= COM_RX1_Lenth)        COM1.RX_Cnt = 0;
 175   3      //                      RX1_Buffer[COM1.RX_Cnt++] = SBUF;
 176   3      //                      COM1.RX_TimeOut = TimeOutSet1;
 177   3                              
 178   3                              if(!rxTout_count_EN){
 179   4                              
 180   4                                      rxTout_count_EN = 1;
 181   4                                      rxTout_count    = 0;
 182   4                                      datsRcv_length  = 0;
 183   4                                      
 184   4                                      memset(RX1_Buffer, 0xff, sizeof(char) * COM_RX1_Lenth);
 185   4                              }
 186   3                                              
 187   3                              RX1_Buffer[datsRcv_length ++] = SBUF;
 188   3                              rxTout_count = 0;
 189   3                      }
 190   2              }
 191   1      
 192   1              if(TI)
 193   1              {
 194   2                      TI = 0;
 195   2                      if(COM1.TX_read != COM1.TX_write)
 196   2                      {
 197   3                              SBUF = TX1_Buffer[COM1.TX_read];
 198   3                              if(++COM1.TX_read >= COM_TX1_Lenth)     COM1.TX_read = 0;
 199   3                      }
 200   2                      else COM1.B_TX_busy = 0;
 201   2              }
 202   1      }
 203          
 204          /* ×Ô¶¨ÒåĞ£Ñé*///×Ô¼Ò²úÆ·Ğ­Òé²ã
 205          static 
 206          unsigned char frame_Check(unsigned char frame_temp[], u8 check_num){
 207   1        
 208   1              unsigned char loop              = 0;
 209   1              unsigned char val_Check = 0;
 210   1              
 211   1              for(loop = 0; loop < check_num; loop ++){
 212   2              
 213   2                      val_Check += frame_temp[loop];
 214   2              }
 215   1              
 216   1              val_Check  = ~val_Check;
 217   1              val_Check ^= 0xa7;
 218   1              
 219   1              return val_Check;
 220   1      }
 221          
 222          /*´ËÊı¾İ·â×°±ØĞëÔÚÊı¾İ°ü·¢ËÍÇ°×îºóµ÷ÓÃ£¬×Ô¶¨Òå¶ÔÏó½øĞĞÊı¾İ·â×°*///±ÜÃâĞ£Ñé±»ÌáÇ°¶ø³ö´í
 223          static 
 224          u8 dtasTX_loadBasic_CUST(bit ifRemoteDats,
 225                                                       u8 dats_Tx[],
 226                                                       u8 datsLen_TX,
 227                                                       u8 frame_Type,
 228                                                       u8 frame_CMD,
 229                                                       bit ifSpecial_CMD){
 230   1                                                         
 231   1              dats_Tx[2]      = frame_Type;
 232   1              dats_Tx[3]      = frame_CMD;
 233   1              
 234   1              if(!ifSpecial_CMD)dats_Tx[10] = SWITCH_TYPE;    //¿ª¹ØÀàĞÍÌî³ä
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 5   

 235   1              
 236   1              memcpy(&dats_Tx[5], &MAC_ID[1], 5);     //MACÌî³ä
 237   1                                                        
 238   1              dats_Tx[4]      = frame_Check(&dats_Tx[5], 28);
 239   1                                                                 
 240   1              if(ifRemoteDats){
 241   2                      
 242   2                      u8 xdata dats_Temp[64] = {0};
 243   2              
 244   2                      dats_Tx[0] = ZIGB_FRAMEHEAD_CTRLREMOTE;
 245   2                      dats_Tx[1]      = datsLen_TX + 12;
 246   2                      
 247   2                      memcpy(dats_Temp, &dats_Tx[1], datsLen_TX - 13);
 248   2                      memset(&dats_Tx[1], 0, datsLen_TX - 1);
 249   2                      memcpy(&dats_Tx[13], dats_Temp, datsLen_TX - 13);
 250   2                      memcpy(&dats_Tx[1], MAC_ID_DST, 6);
 251   2                      memcpy(&dats_Tx[8], &MAC_ID[1], 5);
 252   2                      
 253   2                      return 45;
 254   2                      
 255   2              }else{
 256   2              
 257   2                      dats_Tx[0]      = ZIGB_FRAMEHEAD_CTRLLOCAL;
 258   2                      dats_Tx[1]      = datsLen_TX;
 259   2                      
 260   2                      return 33;
 261   2              }
 262   1      }
 263          
 264          /*Êı¾İÒì»òĞ£Ñé*///ZNPĞ­Òé²ã
 265          static 
 266          u8 XORNUM_CHECK(u8 buf[], u8 length){
 267   1      
 268   1              u8 loop = 0;
 269   1              u8 valXOR = buf[0];
 270   1              
 271   1              for(loop = 1;loop < length;loop ++)valXOR ^= buf[loop];
 272   1              
 273   1              return valXOR;
 274   1      }
 275          
 276          /*zigbeeÊı¾İÖ¡¼ÓÔØ*/
 277          static 
 278          u8 ZigB_TXFrameLoad(u8 frame[],u8 cmd[],u8 cmdLen,u8 dats[],u8 datsLen){                
 279   1      
 280   1              const u8 frameHead = ZIGB_FRAME_HEAD;   //ZNP,SOFÖ¡Í·
 281   1              u8 xor_check = datsLen;                                 //Òì»òĞ£Ñé£¬Ö¡Î²
 282   1              u8 loop = 0;
 283   1              u8 ptr = 0;
 284   1              
 285   1              frame[ptr ++] = frameHead;
 286   1              frame[ptr ++] = datsLen;
 287   1              
 288   1              memcpy(&frame[ptr],cmd,cmdLen);
 289   1              ptr += cmdLen;
 290   1              for(loop = 0;loop < cmdLen;loop ++)xor_check ^= cmd[loop];
 291   1      
 292   1              memcpy(&frame[ptr],dats,datsLen);
 293   1              ptr += datsLen;
 294   1              for(loop = 0;loop < datsLen;loop ++)xor_check ^= dats[loop];    
 295   1              
 296   1              frame[ptr ++] = xor_check;
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 6   

 297   1              
 298   1              return ptr;
 299   1      }
 300          
 301          /*ÖÜÆÚĞÔÖ÷¶¯·¢ÂëÍ¨ĞÅ¹ÒÆğ£¬Í¨ĞÅÇåÕÏ*/
 302          void periodDataTrans_momentHang(u8 hangTime){ //¹ÒÆğÊ±¼ä µ¥Î»£ºs
 303   1      
 304   1              heartBeatCount = 0;
 305   1              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
 306   1              
 307   1              heartBeatHang_timeCnt = colonyCtrlGetHang_timeCnt = hangTime;
 308   1      }
 309          
 310          /*zigbeeµ¥Ö¸ÁîÊı¾İÇëÇó£¬·µ»ØÓ¦´ğÊı¾İ³¤¶È*/
 311          static 
 312          u8 zigb_datsRequest( u8 frameREQ[],             //ÇëÇóÖ¡
 313                                                   u8 frameREQ_Len,       //ÇëÇóÖ¡³¤
 314                                                   u8 resp_cmd[2],        //ËùĞèÓ¦´ğÖ¸Áî
 315                                                   u8 resp_dats[],        //Ó¦´ğÊı¾İ»º´æ
 316                                                   u8 loopReapt,u16 timeWait){    //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 317   1                                                
 318   1              u16 Local_Delay = timeWait;             
 319   1              u8      loop = 0;
 320   1                                                       
 321   1              for(loop = 0;loop < loopReapt;loop ++){
 322   2              
 323   2                      uartRX_toutFLG = 0;
 324   2                      zigbNwkAction_counter = timeWait;       
 325   2                  uartZigB_datsSend(frameREQ, frameREQ_Len);
 326   2                      
 327   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 328   3      
 329   3                              if(uartRX_toutFLG){
 330   4                              
 331   4                                      uartRX_toutFLG = 0;
 332   4                                      
 333   4                                      if(!memcmp(&(datsRcv_ZIGB.rcvDats[2]), resp_cmd, 2)){
 334   5                                      
 335   5                                              memcpy(resp_dats, datsRcv_ZIGB.rcvDats, datsRcv_ZIGB.rcvDatsLen);
 336   5                                              return datsRcv_ZIGB.rcvDatsLen;
 337   5                                              
 338   5                                      }
 339   4                              }
 340   3                      }
 341   2              }       
 342   1      
 343   1              return 0;
 344   1      }
 345          
 346          /*zigbeeµ¥Ö¸ÁîÏÂ·¢¼°ÏìÓ¦ÑéÖ¤*///×èÈû
 347          bit zigb_VALIDA_INPUT(u8 REQ_CMD[2],            //Ö¸Áî
 348                                                    u8 REQ_DATS[],                //Êı¾İ
 349                                                    u8 REQdatsLen,                //Êı¾İ³¤¶È
 350                                                    u8 ANSR_frame[],              //ÏìÓ¦Ö¡
 351                                                    u8 ANSRdatsLen,               //ÏìÓ¦Ö¡³¤¶È
 352                                                    u8 times,u16 timeDelay){      //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 353   1                                                 
 354   1      #define dataLen_validaInput     96
 355   1              u8 xdata dataTXBUF[dataLen_validaInput] = {0};
 356   1              u8      loop = 0;
 357   1              u8      datsTX_Len;
 358   1      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 7   

 359   1              datsTX_Len = ZigB_TXFrameLoad(dataTXBUF,REQ_CMD, 2, REQ_DATS, REQdatsLen);
 360   1      
 361   1              for(loop = 0;loop < times;loop ++){
 362   2              
 363   2                      uartRX_toutFLG = 0;
 364   2                      zigbNwkAction_counter = timeDelay;
 365   2                      uartZigB_datsSend(dataTXBUF, datsTX_Len);
 366   2                      
 367   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 368   3                              
 369   3                              if(uartRX_toutFLG){
 370   4                              
 371   4                                      uartRX_toutFLG = 0;
 372   4                                      
 373   4                                      if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ANSR_frame, ANSRdatsLen)){
 374   5                                      
 375   5                                              delayMs(2);
 376   5                                              return 1;
 377   5                                      }
 378   4                              }
 379   3                      }
 380   2              }
 381   1              
 382   1              return 0;
 383   1      }
 384          
 385          ///*zigbeeÍ¨ĞÅ´ØÉèÖÃ*///×èÈû
 386          //bit zigb_clusterSet(u16 deviveID, u8 endPoint){
 387          
 388          //      datsAttr_ZigbInit code default_param = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x01,0x00,0x00,
             -0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,300};       //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 389          //      u8 code frameResponse_Subs[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾­×¢²á
 390          //              
 391          //#define       dataLen_zigbClusterSet  64
 392          //      u8 xdata paramTX_temp[dataLen_zigbClusterSet] = {0};
 393          //      
 394          //      bit setResult = 0;
 395          //      
 396          //      memcpy(paramTX_temp, default_param.zigbInit_reqDAT, default_param.reqDAT_num);
 397          //      paramTX_temp[0] = endPoint;
 398          //      paramTX_temp[3] = (u8)((deviveID & 0x00ff) >> 0);
 399          //      paramTX_temp[4] = (u8)((deviveID & 0xff00) >> 8);
 400          //      
 401          //      setResult =  zigb_VALIDA_INPUT( (u8 *)default_param.zigbInit_reqCMD,
 402          //                                                                      (u8 *)paramTX_temp,
 403          //                                                                      default_param.reqDAT_num,
 404          //                                                                      (u8 *)default_param.zigbInit_REPLY,
 405          //                                                                      default_param.REPLY_num,
 406          //                                                                      2,              //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 407          //                                                                      default_param.timeTab_waitAnsr);
 408          //      
 409          //      if(setResult)return setResult;
 410          //      else{
 411          //      
 412          //              return zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 413          //                                                               (u8 *)paramTX_temp,
 414          //                                                               default_param.reqDAT_num,
 415          //                                                               (u8 *)frameResponse_Subs,
 416          //                                                               6,
 417          //                                                               2,             //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 418          //                                                               default_param.timeTab_waitAnsr);
 419          //      }
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 8   

 420          //}
 421          
 422          ///*zigbeeÖØĞÂÈëÍø*///×èÈûº¯Êı£¬½ö¹©²âÊÔÊ¹ÓÃ
 423          //bit ZigB_NwkJoin(u16 PANID, u8 CHANNELS){
 424          
 425          //#define       cmdNum_zigbNwkJoin      8       
 426          //      
 427          //#define        loop_PANID             5
 428          //#define        loop_CHANNELS  6
 429          
 430          //      datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkJoin] = {
 431          //              
 432          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 433          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 434          //              {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³
             -õÊ¼»¯£¬È«²¿Çå¿Õ
 435          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¶ş´Î¸´Î»
 436          //              
 437          ////            {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨Ğ­µ÷Æ÷£©
 438          //              {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Â·ÓÉÆ÷£©
 439          ////            {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨ÖÕ¶Ë£©
 440          //              
 441          //              {       {0x27,0x02},    {0x34,0x12},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ
             -÷ÉèÖÃ
 442          //              {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµ
             -À¼Ä´æÆ÷ÅäÖÃ
 443          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 444          //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 445          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 446          //      };
 447          //      
 448          //#define       dataLen_zigbNwkJoin 64
 449          //      u8 xdata paramTX_temp[dataLen_zigbNwkJoin] = {0};
 450          //      
 451          //      u8  loop;
 452          //      u32 chnl_temp = 0x00000800UL << CHANNELS;
 453          //      
 454          //      for(loop = 1; loop < cmdNum_zigbNwkJoin; loop ++){
 455          //              
 456          //              memset(paramTX_temp, 0, dataLen_zigbNwkJoin * sizeof(u8));
 457          //              
 458          //              switch(loop){   //×ÔÑ¡²ÎÊı&Ä¬ÈÏ²ÎÊı
 459          //              
 460          //                      case loop_PANID:{
 461          //                      
 462          //                              paramTX_temp[0] = (u8)((PANID & 0x00ff) >> 0);
 463          //                              paramTX_temp[1] = (u8)((PANID & 0xff00) >> 8);
 464          //                              
 465          //                      }break;
 466          //                      
 467          //                      case loop_CHANNELS:{
 468          //                      
 469          //                              paramTX_temp[0] = (u8)((chnl_temp & 0x000000ff) >>  0);
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 9   

 470          //                              paramTX_temp[1] = (u8)((chnl_temp & 0x0000ff00) >>  8);
 471          //                              paramTX_temp[2] = (u8)((chnl_temp & 0x00ff0000) >> 16);
 472          //                              paramTX_temp[3] = (u8)((chnl_temp & 0xff000000) >> 24);
 473          //                              
 474          //                      }break;
 475          //                      
 476          //                      default:{
 477          //                      
 478          //                              memcpy(paramTX_temp,ZigbInit_dats[loop].zigbInit_reqDAT,ZigbInit_dats[loop].reqDAT_num);
 479          //                              
 480          //                      }break;
 481          //              }
 482          //      
 483          //              delayMs(100);
 484          //              if(0 == zigb_VALIDA_INPUT((u8 *)ZigbInit_dats[loop].zigbInit_reqCMD,
 485          //                                                                (u8 *)paramTX_temp,
 486          //                                                                ZigbInit_dats[loop].reqDAT_num,
 487          //                                                                (u8 *)ZigbInit_dats[loop].zigbInit_REPLY,
 488          //                                                                ZigbInit_dats[loop].REPLY_num,
 489          //                                                                3,
 490          //                                                                ZigbInit_dats[loop].timeTab_waitAnsr)
 491          //                                                               )loop = 0;
 492          //      }
 493          //      
 494          //      return zigb_clusterSet(13, 13); //Éè±¸ID 13£¬ÖÕ¶Ëµã 13£»
 495          //}
 496          
 497          /*zigbee Ö÷¶¯¿ª·ÅÍøÂç*///×èÈû
 498          bit ZigB_nwkOpen(bit openIF, u8 openTime){
 499   1      
 500   1              datsAttr_ZigbInit code default_param = {{0x26,0x08}, {0xFC,0xFF,0x00}, 0x03, {0xFE,0x01,0x66,0x08,0x00,0x
             -6F}, 0x06, 150}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 501   1              
 502   1              bit resultSet = 0;
 503   1              
 504   1              u8 openTime_temp = 0;
 505   1              
 506   1      #define paramLen_zigbNwkOpen 3
 507   1              u8 xdata paramTX_temp[paramLen_zigbNwkOpen] = {0xFC,0xFF,0x00};
 508   1              
 509   1              (openIF)?(paramTX_temp[2] = openTime):(paramTX_temp[2] = 0);
 510   1              
 511   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 512   1                                                                        (u8 *)paramTX_temp,
 513   1                                                                        default_param.reqDAT_num,
 514   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 515   1                                                                        default_param.REPLY_num,
 516   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 517   1                                                                        default_param.timeTab_waitAnsr);
 518   1      
 519   1      //#if(DEBUG_LOGOUT_EN == 1)     
 520   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 521   1      //              
 522   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 523   1      //              sprintf(log_buf, "nwkOpen result:%d.\n", (int)resultSet);
 524   1      //              PrintString1_logOut(log_buf);
 525   1      //      }
 526   1      //#endif
 527   1              
 528   1              return resultSet;
 529   1      }
 530          
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 10  

 531          /*zigbee PANID»ñÈ¡*///×èÈû
 532          static u16 ZigB_getPanIDCurrent(void){
 533   1      
 534   1              u16 PANID_temp = 0;
 535   1              
 536   1      #define paramLen_zigbPanIDGet 32
 537   1              u8 xdata paramTX_temp[paramLen_zigbPanIDGet] = {0};
 538   1              
 539   1              u8 code frameREQ_zigbPanIDGet[6] = {0xFE, 0x01, 0x26, 0x06, 0x06, 0x27};        //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 540   1              u8 code cmdResp_zigbPanIDGet[2]  = {0x66, 0x06};        //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 541   1              u8 datsResp_Len = 0;
 542   1      
 543   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbPanIDGet, 6, cmdResp_zigbPanIDGet, paramTX_temp, 2, 300);
 544   1      
 545   1              if(datsResp_Len){
 546   2      
 547   2                      PANID_temp |= (((u16)(paramTX_temp[5]) << 0) & 0x00FF);
 548   2                      PANID_temp |= (((u16)(paramTX_temp[6]) << 8) & 0xFF00);
 549   2      
 550   2      //              printf_datsHtoA("[Tips_uartZigb]: resultDats:", local_datsParam->frameResp, local_datsParam->frameResp
             -Len);
 551   2              }
 552   1      
 553   1              return PANID_temp;
 554   1      }
 555          
 556          /*zigbeeÏµÍ³Ê±¼ä»ñÈ¡²¢¸üĞÂ*///×èÈû
 557          static bit getSystemTime_reales(void){
 558   1              
 559   1              bit resultOpreat = 0;
 560   1      
 561   1      #define paramLen_zigbSystimeGet 32
 562   1              u8 xdata paramTX_temp[paramLen_zigbSystimeGet] = {0};
 563   1              
 564   1              u8 code frameREQ_zigbSystimeGet[5] = {0xFE, 0x00, 0x21, 0x11, 0x30};    //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 565   1              u8 code cmdResp_zigbSystimeGet[2]  = {0x61, 0x11};      //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 566   1              u8 datsResp_Len = 0;
 567   1      
 568   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbSystimeGet, 5, cmdResp_zigbSystimeGet, paramTX_temp, 2, 300)
             -;
 569   1              
 570   1              if(!datsResp_Len)resultOpreat = 0;
 571   1              else{
 572   2                      
 573   2                      u16 Y_temp16 = ((u16)paramTX_temp[13] << 0) | ((u16)paramTX_temp[14] << 8);
 574   2                      u8  Y_temp8 = 0;
 575   2                      u8  M_temp8 = 0;
 576   2                      
 577   2                      u8 Y = (u8)(Y_temp16 % 2000);
 578   2                      u8 M = paramTX_temp[11];
 579   2                      u8 D = paramTX_temp[12];
 580   2                      u8 W = 0;
 581   2                      
 582   2                      /*¼ÆËã»º´æ¸³Öµ*/
 583   2                      Y_temp8 = Y;
 584   2                      if(M == 1 || M == 2){ //Ò»ÔÂºÍ¶şÔÂµ±×÷ÉÏÒ»ÄêÊ®ÈıÔÂºÍÊ®ËÄÔÂ
 585   3                      
 586   3                              M_temp8 = M + 12;
 587   3                              Y_temp8 --;
 588   3                      }
 589   2                      else M_temp8 = M;
 590   2                      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 11  

 591   2                      /*¿ªÊ¼¼ÆËã*/
 592   2                      W =      Y_temp8 + (Y_temp8 / 4) + 5 - 40 + (26 * (M_temp8 + 1) / 10) + D - 1;  //²ÌÀÕ¹«Ê½
 593   2                      W %= 7; 
 594   2                      
 595   2                      /*¼ÆËã½á¹û¸³Öµ*/
 596   2                      W?(systemTime_current.time_Week = W):(systemTime_current.time_Week = 7);
 597   2                      
 598   2                      systemTime_current.time_Month =         M;
 599   2                      systemTime_current.time_Day =           D;
 600   2                      systemTime_current.time_Year =          Y;
 601   2                      
 602   2                      systemTime_current.time_Hour =          paramTX_temp[8];
 603   2                      systemTime_current.time_Minute =        paramTX_temp[9];
 604   2                      systemTime_current.time_Second =        paramTX_temp[10];
 605   2                      
 606   2                      /*±¾µØÊ±¼äÎ¬³Ö¼ÆÊıÖµĞ£×¼¸üĞÂ*/
 607   2                      sysTimeKeep_counter = systemTime_current.time_Minute * 60 + systemTime_current.time_Second; //ÏµÍ³Ê±¼äÎ¬
             -³Ö¼ÆÊıÖµ¸üĞÂ
 608   2                      
 609   2                      resultOpreat = 1;
 610   2              }
 611   1              
 612   1      //#if(DEBUG_LOGOUT_EN == 1)     
 613   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 614   1      //              
 615   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 616   1      //              sprintf(log_buf, "sysTime reales result:%d.\n", (int)resultOpreat);
 617   1      //              PrintString1_logOut(log_buf);
 618   1      //      }
 619   1      //#endif
 620   1              
 621   1              return resultOpreat;
 622   1      }
 623          
 624          /*zigbeeÏµÍ³Ê±¼äÉèÖÃ*///×èÈû
 625          static
 626          bit zigB_sysTimeSet(u32 timeStamp, bit timeZoneAdjust_IF){
 627   1      
 628   1              datsAttr_ZigbInit code default_param = {{0x21,0x10},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00},0x0B,{0xFE,0x01,0x61,0x10,0x00},0x05,100}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 629   1              u8 xdata timeStampArray[0x0B] = {0};
 630   1              bit resultSet = 0;
 631   1              u32 timeStamp_temp = timeStamp;
 632   1              
 633   1              if(timeZoneAdjust_IF){ //ÊÇ·ñĞèÒªÊ±Çøµ÷Õû
 634   2              
 635   2                      if(sysTimeZone_H <= 12){
 636   3                      
 637   3                              timeStamp_temp += (3600UL * (long)sysTimeZone_H + 60UL * (long)sysTimeZone_M); //Ê±ÇøÕı
 638   3                              
 639   3                      }else
 640   2                      if(sysTimeZone_H > 12 && sysTimeZone_H <= 24){
 641   3                      
 642   3                              timeStamp_temp -= (3600UL * (long)(sysTimeZone_H - 12) + 60UL * (long)sysTimeZone_M); //Ê±Çø¸º
 643   3                              
 644   3                      }else
 645   2                      if(sysTimeZone_H >= 30){
 646   3                      
 647   3                              timeStamp_temp += (3600UL * (long)(sysTimeZone_H - 17) + 60UL * (long)sysTimeZone_M); //Ê±ÇøÌØÊâ
 648   3                      }
 649   2              }
 650   1      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 12  

 651   1              timeStampArray[0] = (u8)((timeStamp_temp & 0x000000ff) >> 0);
 652   1              timeStampArray[1] = (u8)((timeStamp_temp & 0x0000ff00) >> 8);
 653   1              timeStampArray[2] = (u8)((timeStamp_temp & 0x00ff0000) >> 16);
 654   1              timeStampArray[3] = (u8)((timeStamp_temp & 0xff000000) >> 24);
 655   1              
 656   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 657   1                                                                        (u8 *)timeStampArray,
 658   1                                                                        default_param.reqDAT_num,
 659   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 660   1                                                                        default_param.REPLY_num,
 661   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 662   1                                                                        default_param.timeTab_waitAnsr);
 663   1              
 664   1      //#if(DEBUG_LOGOUT_EN == 1)     
 665   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 666   1      //              
 667   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 668   1      //              sprintf(log_buf, "sysTime set result:%d.\n", (int)resultSet);
 669   1      //              PrintString1_logOut(log_buf);
 670   1      //      }
 671   1      //#endif
 672   1              
 673   1              return resultSet;
 674   1      }
 675          
 676          ///*zigbeeÓ²¼ş¸´Î»³õÊ¼»¯*///×èÈû
 677          //bit ZigB_resetInit(void){
 678          
 679          //#define zigbInit_loopTry              3
 680          //#define zigbInit_onceWait     5000
 681          
 682          //      u8 code initCmp_Frame[11] = {0xFE, 0x06, 0x41, 0x80, 0x01, 0x02, 0x00, 0x02, 0x06, 0x03, 0xC3};
 683          //      
 684          //      u8      loop = 0;
 685          //      u16 timeWait = 0;
 686          //      
 687          //      for(loop = 0; loop < zigbInit_loopTry; loop ++){
 688          //      
 689          //              zigbPin_RESET = 0;
 690          //              delayMs(100);
 691          //              zigbPin_RESET = 1;
 692          //              
 693          //              timeWait = zigbInit_onceWait;
 694          //              while(timeWait --){
 695          //              
 696          //                      delayMs(2);     //±ØĞëÑÓÊ±
 697          //                      if(uartRX_toutFLG){
 698          //                      
 699          //                              uartRX_toutFLG = 0;
 700          //                              
 701          //                              if(!memcmp(datsRcv_ZIGB.rcvDats, initCmp_Frame, 11)){
 702          //                              
 703          //                                      return 1;
 704          //                                      
 705          //                              }else{
 706          //                                      
 707          //                                      delayMs(1);     //±ØĞëÑÓÊ±
 708          //                              }
 709          //                      }
 710          //              }
 711          //      }
 712          //      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 13  

 713          //      return 0;
 714          //}
 715          
 716          ///*zigbee³õÊ¼»¯×Ô¼ì*///×èÈû
 717          //bit ZigB_inspectionSelf(void){        
 718          //      
 719          //#define       paramLen_zigbInspection 64
 720          //      u8 xdata paramTX_temp[paramLen_zigbInspection] = {0};
 721          //      
 722          ////    bit REQResult = 0;
 723          //      
 724          ////    u8 code frameREQ_zigbStatusCheck[5] = {0xFE, 0x00, 0x27, 0x00, 0x27};   //zigb×´Ì¬²éÑ¯Ö¸ÁîÖ¡
 725          ////    u8 code cmdResp_zigbStatusCheck[2]      = {0x67, 0x00}; //zigb×´Ì¬²éÑ¯ÏìÓ¦Ö¸Áî
 726          //      u8 code frameREQ_zigbJoinNWK[5]         = {0xFE, 0x00, 0x26, 0x00, 0x26};       //zigb¼¤»îÍøÂçÖ¸ÁîÖ¡
 727          //      u8 code cmdResp_zigbJoinNWK[2]          = {0x45, 0xC0}; //zigb¼¤»îÍøÂçÏìÓ¦Ö¸Áî
 728          //      u8 datsResp_Len = 0;
 729          //      
 730          ////    datsResp_Len = zigb_datsRequest(frameREQ_zigbStatusCheck, 5, cmdResp_zigbStatusCheck, paramTX_temp, 2
             -, 500);
 731          ////    if(paramTX_temp[16] == 0x07)REQResult
 732          //      
 733          //      datsResp_Len = zigb_datsRequest(frameREQ_zigbJoinNWK, 5, cmdResp_zigbJoinNWK, paramTX_temp, 2, 5000);
 734          //      if(paramTX_temp[4] == 0x07)return (zigb_clusterSet(13, 13) & zigb_clusterSet(13, 14));  //Éè±¸ID 13£¬ÖÕ¶
             -Ëµã 13£»        
 735          //      else{
 736          //      
 737          //              return 0;
 738          //      }
 739          //}
 740          
 741          /*zigbee·Ç×èÈûÈëÍøÇëÇó×´Ì¬»ú*///·Ç×èÈû ---ĞÅµÀÄ¬ÈÏµÚËÄĞÅµÀ
 742          static 
 743          void zigB_nwkJoinRequest(bit reJoin_IF){
 744   1      
 745   1      #define cmdNum_zigbNwkREQ       9       
 746   1      
 747   1              datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkREQ] = {
 748   1      
 749   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Ó²¼ş)
 750   1      //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x00,0x02,0x00,0x02,0x06,0x03,0xC2},       0x0B,   4000    },      
             -//¸´Î»(Ìæ²¹)
 751   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Èí¼ş)
 752   1                      {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³õÊ
             -¼»¯£¬È«²¿Çå¿Õ
 753   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¶ş´Î¸´Î»(Èí¼ş)
 754   1                      
 755   1      //              {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Ğ­µ÷Æ÷£©
 756   1                      {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖÃ£
             -¨Â·ÓÉÆ÷£©
 757   1      //              {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨ÖÕ¶Ë£©
 758   1                      
 759   1                      {       {0x27,0x02},    {0xFF,0xFF},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ÷É
             -èÖÃ
 760   1                      {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµÀ¼
             -Ä´æÆ÷ÅäÖÃ
 761   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 14  

 762   1                      {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   8000    },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨½ÇÉ
             -«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 763   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 764   1                      {       {0x26,0x08},    {0xFC,0xFF,0x00},               0x03,   {0xFE,0x01,0x66,0x08,0x00,0x6F},                                                        0x06,   150             },  //¹Ø±Õ
             -ÍøÂç
 765   1              };
 766   1              
 767   1              datsAttr_ZigbInit code defaultParam_clusterRegister = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x
             -01,0x00,0x00,0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,500};  //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 768   1              u8 code frameResponseSubs_clusterRegister[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾
             -­×¢²á
 769   1              
 770   1      #define clusterNum_default 3
 771   1              datsAttr_clusterREG code cluster_Default[clusterNum_default] = {
 772   1              
 773   1                      {ZIGB_ENDPOINT_CTRLSECENARIO, zigbDatsDefault_ClustID}, 
 774   1                      {ZIGB_ENDPOINT_CTRLNORMAL, zigbDatsDefault_ClustID}, 
 775   1                      {ZIGB_ENDPOINT_CTRLSYSZIGB, zigbDatsDefault_ClustID}
 776   1              };
 777   1              
 778   1      #define dataLen_zigbNwkREQ 64
 779   1              u8 xdata paramTX_temp[dataLen_zigbNwkREQ] = {0};
 780   1              
 781   1              static u8 xdata step_CortexA = 0, //×´Ì¬»ú-Ö÷²½Öè
 782   1                                xdata step_CortexB = 0; //×´Ì¬»ú-×Ó²½Öè
 783   1              static u8 xdata reactionLoop = 0; //ÖØ¸´´ÎÊı»º´æ
 784   1                         u8 xdata actionReaptDefine_normal = 2; //ÖØ¸´´ÎÊı¶¨Òå_³£¹æÖ¸ÁîÏÂ
 785   1              
 786   1              u8 datsTX_Len = 0;
 787   1              
 788   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
 789   2              
 790   2                      devStatus_switch.statusChange_IF = 0;
 791   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
 792   2                      
 793   2                      step_CortexA = 0;
 794   2                      step_CortexB = 0;
 795   2                      reactionLoop = 0;
 796   2                      zigbPin_RESET = 1;
 797   2                      
 798   2                      return;
 799   2              }
 800   1              
 801   1              if(step_CortexA > (cmdNum_zigbNwkREQ + clusterNum_usr + clusterNum_default)){ //ÅĞ¶Ïµ±Ç°×´Ì¬»úÄÚ²¿×´Ì¬Á÷³
             -ÌÊÇ·ñÍê³É
 802   2              
 803   2                      step_CortexA = 0;
 804   2                      step_CortexB = 0;
 805   2                      reactionLoop = 0;
 806   2                      zigbPin_RESET = 1;
 807   2                      
 808   2                      dnCounter_mutualAddrPeriodPingOut = 10; //±¾µØ»¥¿Ø×é¶ÔÓ¦Éè±¸µØÖ·¶ÔÍâÍ¨ÖªÖÜÆÚÖØÖÃÖÁ10s
 809   2                      
 810   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES; //systime¸üĞÂÖÜÆÚÖØÖÃ£¬·ÀÖ¹¶àÖ¸Áî¶ÂÈû³åÍ»
 811   2                      
 812   2                      devRunning_Status = status_passiveDataRcv; //Íâ²¿×´Ì¬ÇĞ»»
 813   2                      devTips_status = status_Normal; //Éè±¸ÏµÍ³tips×´Ì¬ÇĞ»»
 814   2                      
 815   2                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //Íø¹ØÊ§Áª¼ì²âÊ±¼äÖØÖÃ 
 816   2                      
 817   2                      if(reJoin_IF)statusSave_zigbNwk_nwkExistIF(1); //ÍøÂç´æÔÚ±¾µØ´æ´¢ÅĞ¶ÏÖµ¸üĞÂÎªÒÑ´æÔÚ
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 15  

 818   2                      
 819   2                      dev_currentPanid = ZigB_getPanIDCurrent(); //¶ÁÈ¡¸üĞÂÒ»´ÎPANID,±ÜÃâ¶ş´ÎÖØĞÂ¼ÓÍø²ĞÁôÀÏµÄPANID
 820   2                      
 821   2      #if(DEBUG_LOGOUT_EN == 1)
                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                      sprintf(log_buf, "nwkZigb connect/rejoin all complete.\n");
                                      PrintString1_logOut(log_buf);
                              }                       
              #endif
 828   2                      
 829   2                      return;
 830   2              }
 831   1              
 832   1              if(!reJoin_IF)if(step_CortexA == 1)step_CortexA = 7; //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔò²»½øĞĞÓ²¼ş¸´Î»(Ó²¼ş¸
             -´Î»½«µ¼ÖÂ±¾µØÊ±¼ä±»ÖØÖÃ) ´Ó1¿ªÊ¼¾ÍÓĞÓ²¼ş¸´Î»£¬·ñÔòÃ»ÓÃ
 833   1              if((step_CortexA == 7) || (step_CortexA == 0))sysTimeReales_counter     = PERIOD_SYSTIMEREALES; //·Ç×èÈû¹Ø¼üÖ
             -¸Áî²»ÄÜ±»×èÈûÖ¸Áî´ò¶Ï£¨Ó²¼ş¸´Î» ºÍ ÈëÍøÊ± ÖĞ¶Ï×èÈûÖ¸ÁîÏÂ´ï£©
 834   1              
 835   1      #if(DEBUG_LOGOUT_EN == 1)
                      {//Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                      #define STATUSMACHINE_NWKREQ_DISPINITVAL 255
                              static u8 xdata stepDisp_CortexA = STATUSMACHINE_NWKREQ_DISPINITVAL;
                              
                              if(stepDisp_CortexA != step_CortexA){
                              
                                      stepDisp_CortexA = step_CortexA;
                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                      sprintf(log_buf, "nwkZigb connect/rejoin mainStep-%02d@method:%d complete.\n", (int)stepDisp_CortexA, (
             -int)reJoin_IF);
                                      PrintString1_logOut(log_buf);
                              }
                      }
              #endif
 849   1              
 850   1              if(step_CortexA == 0){ //ÌØÊâÖ¸Áî_Ó²¼ş¸´Î»:<0>
 851   2              
 852   2                      switch(step_CortexA){
 853   3                      
 854   3                              case 0:{ //Ê×ÌõÖ¸Áî£¬Ó²¼ş¸´Î»
 855   4                              
 856   4                                      switch(step_CortexB){
 857   5                                      
 858   5                                              case 0:{ //²½ÖèÒ»£ºÓ²¼şÀ­µÍ100ms
 859   6                                              
 860   6                                                      zigbPin_RESET = 0;
 861   6                                                      zigbNwkAction_counter = 200;
 862   6                                                      step_CortexB = 1;
 863   6                                              
 864   6                                              }break;
 865   5                                      
 866   5                                              case 1:{ //²½Öè¶ş£ºÓ²¼şÀ­µÍÍê±ÏºóÈ·ÈÏÓ¦´ğÖ¡Ê±³¤
 867   6                                              
 868   6                                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı6000ms
 869   7                                                      
 870   7                                                              zigbPin_RESET = 1;
 871   7                                                              zigbNwkAction_counter = 6000;
 872   7                                                              step_CortexB = 2;
 873   7                                                      }
 874   6                                                      
 875   6                                              }break;
 876   5                                              
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 16  

 877   5                                              case 2:{ //²½Öè¶ş£ºÈ·ÈÏÓ¦´ğÖ¡
 878   6                                                      
 879   6                                                      if(!zigbNwkAction_counter)step_CortexB = 0; //·Ç×èÈûµÈ´ıÏìÓ¦
 880   6                                              
 881   6                                                      if(uartRX_toutFLG){
 882   7                                                      
 883   7                                                              uartRX_toutFLG = 0;
 884   7                                                              
 885   7                                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[0].zigbInit_REPLY, ZigbInit_dats[0].RE
             -PLY_num)){
 886   8                              
 887   8                                                                      step_CortexB = 0;
 888   8                                                                      reactionLoop = 0;
 889   8                                                                      step_CortexA ++;
 890   8                                                              }
 891   7                                                      }
 892   6                                                      
 893   6                                              }break;
 894   5                                      }
 895   4                                      
 896   4                              }break;
 897   3                      }
 898   2              }else
 899   1              if(step_CortexA > 0 && step_CortexA < cmdNum_zigbNwkREQ){ //³£¹æÖ¸Áî:<1 - 9>
 900   2                      
 901   2      //              if(!reJoin_IF)if(step_CortexA == 2)step_CortexA = 7;    //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔòÖ»½øĞĞ±»¶¯ÍøÂç¼¤»
             -î
 902   2      
 903   2                      switch(step_CortexB){
 904   3                      
 905   3                              case 0:{
 906   4                                      
 907   4                                      (step_CortexA == 7)?(actionReaptDefine_normal = 12):(actionReaptDefine_normal =  2); //ÓÉÓÚÈëÍø¹ı³Ì½Ï¸
             -´ÔÓ£¬ÈëÍøÖ¸ÁîµÈ´ıÊ±¼ä·Å³¤
 908   4                                      
 909   4                                      if(reactionLoop > actionReaptDefine_normal){
 910   5                                              
 911   5                                              reactionLoop = 0;
 912   5                                              step_CortexA = 0;
 913   5                                              break;
 914   5                                      }
 915   4                                      
 916   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 917   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqCMD, 
 918   4                                                                                                2, 
 919   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqDAT, 
 920   4                                                                                                ZigbInit_dats[step_CortexA].reqDAT_num);
 921   4                                      
 922   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 923   4                                      
 924   4                                      zigbNwkAction_counter = ZigbInit_dats[step_CortexA].timeTab_waitAnsr;
 925   4                                      step_CortexB = 1;
 926   4                                      
 927   4                              }break;
 928   3                                      
 929   3                              case 1:{
 930   4                                      
 931   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 932   5                                      
 933   5                                              reactionLoop ++;
 934   5                                              step_CortexB = 0;
 935   5                                      }
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 17  

 936   4                                      else
 937   4                                      if(uartRX_toutFLG){
 938   5                                      
 939   5                                              uartRX_toutFLG = 0;
 940   5                                              
 941   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[step_CortexA].zigbInit_REPLY, ZigbInit_d
             -ats[step_CortexA].REPLY_num)){
 942   6                                              
 943   6                                                      step_CortexB = 0;
 944   6                                                      reactionLoop = 0;
 945   6                                                      step_CortexA ++;
 946   6                                              }
 947   5                                      }
 948   4                                      
 949   4                              }break;
 950   3                      }
 951   2                      
 952   2              }else
 953   1              if(step_CortexA >= cmdNum_zigbNwkREQ){ //ÌØÊâÖ¸Áî_³£¹æÍ¨ĞÅ´Ø×¢²á:<10 - n>
 954   2                      
 955   2                      u8 datsREG_cluster[16] = {0};
 956   2                      memcpy(datsREG_cluster, defaultParam_clusterRegister.zigbInit_reqDAT, defaultParam_clusterRegister.reqDA
             -T_num);
 957   2                      if(step_CortexA < (cmdNum_zigbNwkREQ + clusterNum_default)){ //Ä¬ÈÏ×¨ÓÃÍ¨ĞÅ´Ø²ÎÊıÌî×°
 958   3                      
 959   3                              datsREG_cluster[0] = cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].endpoint;
 960   3                              datsREG_cluster[3] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0x00ff) >> 0);
 961   3                              datsREG_cluster[4] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0xff00) >> 8);
 962   3                              
 963   3                      }else{  //ÓÃ»§Í¨ĞÅ´Ø£¨»¥¿Ø£©×¢²á²ÎÊıÌî×°
 964   3                      
 965   3                              if((CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] >= 0x10) && (CTRLEATHER_PORT[ste
             -p_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] < 255)){ //Í¨ĞÅ´Ø¶Ë¿ÚºÏ·¨ĞÔÅĞ¶Ï
 966   4                              
 967   4                                      datsREG_cluster[0] = CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr];
 968   4                                      datsREG_cluster[3] = zigbDatsDefault_ClustID; //Ä¬ÈÏ´ØID <LSB>
 969   4                                      datsREG_cluster[4] = 0; //Ä¬ÈÏ´ØID <MSB>
 970   4                                      
 971   4                              }else{
 972   4                              
 973   4                                      step_CortexA ++;
 974   4                                      return;
 975   4                              }
 976   3                      }
 977   2              
 978   2                      switch(step_CortexB){
 979   3                      
 980   3                              case 0:{
 981   4                                      
 982   4                                      if(reactionLoop > 2){
 983   5                                              
 984   5                                              reactionLoop = 0;
 985   5                                              step_CortexA = 0;
 986   5                                              break;
 987   5                                      }
 988   4                                      
 989   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 990   4                                                                                                defaultParam_clusterRegister.zigbInit_reqCMD, 
 991   4                                                                                                2, 
 992   4                                                                                                datsREG_cluster, 
 993   4                                                                                                defaultParam_clusterRegister.reqDAT_num);
 994   4                                      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 18  

 995   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 996   4                                      
 997   4                                      zigbNwkAction_counter = defaultParam_clusterRegister.timeTab_waitAnsr;
 998   4                                      step_CortexB = 1;
 999   4                                      
1000   4                              }break;
1001   3                                      
1002   3                              case 1:{
1003   4                                      
1004   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
1005   5                                      
1006   5                                              reactionLoop ++;
1007   5                                              step_CortexB = 0;
1008   5                                      }
1009   4                                      else
1010   4                                      if(uartRX_toutFLG){
1011   5                                      
1012   5                                              uartRX_toutFLG = 0;
1013   5                                              
1014   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, defaultParam_clusterRegister.zigbInit_REPLY, defaultPa
             -ram_clusterRegister.REPLY_num) || //Ô¤ÆÚÏìÓ¦
1015   5                                                 memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, frameResponseSubs_clusterRegister, 6)){ //Ìæ²¹ÏìÓ¦
1016   6                                              
1017   6                                                      step_CortexB = 0;
1018   6                                                      reactionLoop = 0;
1019   6                                                      step_CortexA ++;
1020   6                                              }
1021   5                                      }
1022   4                                      
1023   4                              }break;
1024   3                      }
1025   2              }
1026   1      }
1027          
1028          /*zigbeeÍøÂçÊı¾İ·¢ËÍ¸ñÊ½»¯Ìî×°*/
1029          static 
1030          u8 zigb_datsLoad_datsSend(u8  frame_Temp[NORMALDATS_DEFAULT_LENGTH],
1031                                                            u16 DstAddr,
1032                                                            u8  portPoint,
1033                                                            u8  dats[],
1034                                                            u8  datsLen){
1035   1              
1036   1              u8 code zigbCMD_DatsSend[2] = {0x24, 0x01};
1037   1              
1038   1      #define zigbDatsSend_datsTransLen       (128 + 25)
1039   1              u8 xdata buf_datsLOAD[zigbDatsSend_datsTransLen] = {0};
1040   1              u8 datsTX_Len = 0;
1041   1                                                                
1042   1              memset(frame_Temp, 0, NORMALDATS_DEFAULT_LENGTH * sizeof(u8));  
1043   1      
1044   1              //·¢ËÍÖ¡Ìî×°
1045   1              buf_datsLOAD[0] = (u8)((DstAddr & 0x00ff) >> 0);
1046   1              buf_datsLOAD[1] = (u8)((DstAddr & 0xff00) >> 8);
1047   1              buf_datsLOAD[2] = portPoint;
1048   1              buf_datsLOAD[3] = portPoint;
1049   1              buf_datsLOAD[4] = zigbDatsDefault_ClustID;
1050   1              buf_datsLOAD[6] = zigbDatsDefault_TransID;
1051   1              buf_datsLOAD[7] = zigbDatsDefault_Option;
1052   1              buf_datsLOAD[8] = zigbDatsDefault_Radius;
1053   1              buf_datsLOAD[9] = datsLen;
1054   1              memcpy(&buf_datsLOAD[10], dats, datsLen);       
1055   1              
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 19  

1056   1              return ZigB_TXFrameLoad(frame_Temp, (u8 *)zigbCMD_DatsSend, 2, buf_datsLOAD, datsLen + 10);
1057   1      }
1058          
1059          /*zigbeeÎŞÊÓÏìÓ¦»Ø¸´Ö±½Ó·¢ËÍÊı¾İ*///×èÈû
1060          static
1061          void dataSendRemote_straightforward( u16 DstAddr, //Ô¶¶ËÍøÂç¶ÌµØÖ·
1062                                                                                    u8 port,       //¶Ëµã¿Ú
1063                                                                                    u8 dats[], //Êı¾İ
1064                                                                                    u8 datsLen ){ //Êı¾İ³¤¶È
1065   1                                                                                                                                                
1066   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1067   1              u8 datsTX_Len = 0;
1068   1              
1069   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, DstAddr, port, dats, datsLen);
1070   1              
1071   1              uartZigB_datsSend(buf_datsTX, datsTX_Len);
1072   1      }
1073          
1074          /*zigbeeÍøÂçÊı¾İ·¢ËÍÇëÇó×´Ì¬»ú*///·Ç×èÈû
1075          static
1076          void dataTransRequest_datsSend(void){
1077   1      
1078   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1079   1              u8 datsTX_Len = 0;
1080   1              
1081   1      #define zigbDatsSend_datsRespLen        64
1082   1              u8 xdata buf_datsRX[zigbDatsSend_datsRespLen] = {0};
1083   1              u8 datsRX_Len = 0;
1084   1              
1085   1      #define zigbDatsSend_ASR_datsLen        3
1086   1              u8              ASR_dats[zigbDatsSend_ASR_datsLen] = {0};
1087   1              u8 code ASR_cmd[2] = {0x44,0x80};       //±¾µØZNPĞ­Òé²ãÈ·ÈÏ·¢ËÍÏìÓ¦
1088   1              
1089   1      #define resCODE_datsSend_NOROUTER 0xCD  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-Â·ÓÉÊ§Áª£¬Í¨Ñ¶Ã½½é¶ªÊ§
1090   1      #define resCODE_datsSend_NOREMOTE 0xE9  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-¶Ô·½²»ÔÚÏß£¬Ä¿±êµØÖ·½ÚµãÉè±¸²»´æÔÚ
1091   1      #define resCODE_datsSend_TIMEOUT  0x01  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³¬Ê±
1092   1      #define resCODE_datsSend_SUCCESS  0x00  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³É¹¦
1093   1              static u8 datsTrans_respondCode = 0; //·¢ËÍÍê³ÉÏìÓ¦Âë
1094   1              
1095   1              static u8 step = 0;
1096   1              static u8 reactionLoop = 0;
1097   1              
1098   1              const  u8 dataReq_failLoop_limit = 15; //Ê§°Ü´ÎÊıÏŞ¶¨Öµ
1099   1              static u8 dataReq_failLoop_record = 0; //Ê§°Ü´ÎÊı¼ÇÂ¼ -³¬³öÏŞÖÆ½«´¥·¢ÖØÁ¬
1100   1              
1101   1              if(devStatus_switch.statusChange_IF){   //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1102   2              
1103   2                      devStatus_switch.statusChange_IF = 0;
1104   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1105   2                      
1106   2                      step = 0;
1107   2                      reactionLoop = 0;
1108   2                      
1109   2                      return;
1110   2              }
1111   1              
1112   1              //½ÓÊÕÖ¡Ìî×°_±¾µØ
1113   1              ASR_dats[0] = resCODE_datsSend_SUCCESS; //·¢ËÍ³É¹¦ÏìÓ¦´úÂë
1114   1              ASR_dats[1] = datsSend_request.portPoint;
1115   1              ASR_dats[2] = zigbDatsDefault_TransID;
1116   1              datsRX_Len = ZigB_TXFrameLoad(buf_datsRX, (u8 *)ASR_cmd, 2, ASR_dats, zigbDatsSend_ASR_datsLen);
1117   1              
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 20  

1118   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, datsSend_request.nwkAddr, datsSend_request.portPoint, dat
             -sSend_request.datsTrans.dats, datsSend_request.datsTrans.datsLen);
1119   1              
1120   1              switch(step){
1121   2              
1122   2                      case 0:{ //ÏìÓ¦½ÓÊÕ¾ÍĞ÷£¬ÉèÖÃÏìÓ¦Ê±¼ä
1123   3                              
1124   3                              if(reactionLoop > 3){ //ÖØ·¢´ÎÊıÒÑ³¬³ö
1125   4                                      
1126   4                                      datsTrans_respondCode = resCODE_datsSend_TIMEOUT; //ÏìÓ¦Âë¸ÄÎª³¬Ê±
1127   4                                      
1128   4                                      reactionLoop = 0;
1129   4                                      step = 4;
1130   4                                      
1131   4                                      break;
1132   4                              }
1133   3                      
1134   3                              zigbPin_RESET = 1; //±£ÏÕÆğ¼û£¬¸´Î»À­¸ß
1135   3                              if(!devRemoteDataReqMethod.keepTxUntilCmp_IF)uartZigB_datsSend(buf_datsTX, datsTX_Len); //·ÇËÀ¿Ä£¬·¢Ò»´
             -Î¾ÍĞĞ
1136   3                              zigbNwkAction_counter = REMOTE_DATAREQ_TIMEOUT; //Ä¬ÈÏĞ­Òé²ãÏìÓ¦Ê±¼ä<Ê±¼äÌ«¶ÌÎŞ·¨ÊÕµ½ºóÃæµÄ½ÓÊÕ×´Ì¬ÏìÓ¦
             -Ö¸Áî£¬Ö»ÄÜÊÕµ½ÏµÍ³ÏìÓ¦>
1137   3                              step = 1;
1138   3                              
1139   3                      }break;
1140   2                      
1141   2                      case 1:{ //·Ç×èÈûµÈ´ıÏµÍ³ÏìÓ¦
1142   3                              
1143   3                              static u8 xdata local_funRecord = 0; //±¾µØ ³ı´Î±È ÅĞ¶Ï
1144   3                                         u8 xdata funRecord_temp = zigbNwkAction_counter / devRemoteDataReqMethod.datsTxKeep_Period; //³ı´Î±
             -È£¬ÓÃÓÚÖÜÆÚÅĞ¶Ï
1145   3                      
1146   3                              if(!zigbNwkAction_counter){ //³¬Ê±ÅĞ¶Ï
1147   4                              
1148   4                                      reactionLoop ++;
1149   4                                      step = 0;
1150   4                                      local_funRecord = 0;
1151   4                              }
1152   3                              else{
1153   4                                      
1154   4                                      if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //ËÀ¿Ä·½Ê½ÏÂ£¬³¬Ê±Ê±¼äÄÚ£¬ÖÜÆÚÑ­»·ÏÂ·¢Ö¸Áî
1155   5                                              
1156   5                                              if(local_funRecord != funRecord_temp){ //°´³ÖĞøÆµÂÊ³ÖĞø·¢ËÍ
1157   6                                              
1158   6                                                      local_funRecord = funRecord_temp; //±¾µØ³ı´Î±È¸üĞÂ
1159   6                                                      
1160   6                                                      uartZigB_datsSend(buf_datsTX, datsTX_Len);
1161   6                                              }
1162   5                                      }
1163   4                                      
1164   4                                      if(uartRX_toutFLG){
1165   5                                      
1166   5                                              uartRX_toutFLG = 0;
1167   5      
1168   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, buf_datsRX, datsRX_Len)){ //Ó¦´ğÖ¸ÁîºÍÓ¦´ğÂë¶¼ÕıÈ·
1169   6                                              
1170   6                                                      if(datsRcv_respond.datsTrans.datsLen == 0){ //ÅĞ¶ÏÌõ¼şÊÇ·ñĞèÒªÔ¶¶ËÏìÓ¦
1171   7                                                      
1172   7                                                              step = 3;
1173   7                                                              
1174   7                                                      }else{
1175   7                                                      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 21  

1176   7                                                              step = 2;
1177   7                                                              zigbNwkAction_counter = REMOTE_RESPOND_TIMEOUT; //Ä¬ÈÏÔ¶¶ËÏìÓ¦Ê±¼ä<¶Ô·½½ÚµãÏìÓ¦>
1178   7                                                      }
1179   6                                                      
1180   6                                                      local_funRecord = 0; //±¾µØ³ı´Î±È¸´Î»
1181   6                                                      
1182   6                                              }else{  
1183   6                                                      
1184   6                                                      if(!memcmp(&datsRcv_ZIGB.rcvDats[2], ASR_cmd, 2)){ //Ó¦´ğÖ¸ÁîÕıÈ·£¬µ«Ó¦´ğÂë´íÎó£¬ÔòÈ¡³ö´íÎóÂë
1185   7                                                      
1186   7                                                              datsTrans_respondCode = datsRcv_ZIGB.rcvDats[4]; //´íÎóÏìÓ¦Âë×°ÔØ
1187   7                                                              
1188   7                                                              if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //·¢ËÍ·½Ê½ÅĞ¶Ï-ÊÇ·ñÎªËÀ¿Ä·½Ê½
1189   8                                                              
1190   8                                                                      
1191   8                                                                      
1192   8                                                              }else{
1193   8                                                              
1194   8                                                                      step = 4; //·ÇËÀ¿Ä·½Ê½£¬ÔòÓĞÓ¦´ğÖ¸Áî£¬µ«Ó¦´ğÊı¾İ´íÎó£¬ÌøÖÁÊ§°Ü²½Öè
1195   8                                                              }
1196   7                                                      }
1197   6                                                      
1198   6      //#if(DEBUG_LOGOUT_EN == 1)
1199   6      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1200   6      // 
1201   6      //                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8)); //Êı¾İ´«ÊäÊ§°ÜĞ­Òé²ãÏìÓ¦´úÂë´òÓ¡
1202   6      //                                                      sprintf(log_buf, "dats_TX fail code: %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[2], (int)datsR
             -cv_ZIGB.rcvDats[3], (int)datsRcv_ZIGB.rcvDats[4]);
1203   6      //                                                      PrintString1_logOut(log_buf);
1204   6      //                                              }       
1205   6      //#endif                                
1206   6                                              }
1207   5                                      }
1208   4                              }
1209   3                              
1210   3                      }break;
1211   2                      
1212   2                      case 2:{ //·Ç×èÈûµÈ´ıÔ¶¶ËÏìÓ¦
1213   3      
1214   3                              if(!zigbNwkAction_counter){
1215   4                              
1216   4                                      reactionLoop ++;
1217   4                                      step = 0;
1218   4                              }
1219   3                              else{
1220   4                                      
1221   4                                      if(uartRX_toutFLG){
1222   5                                              
1223   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
1224   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë  
1225   5                                              
1226   5                                              uartRX_toutFLG = 0;
1227   5                                              
1228   5                                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
1229   6                                              
1230   6      #if(DEBUG_LOGOUT_EN == 1)
                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                      sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
                                                                      PrintString1_logOut(log_buf);
                                                              }                       
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 22  

              #endif  
1237   6                                              }
1238   5      
1239   5                                              if(!memcmp(&(datsRcv_ZIGB.rcvDats[21]), datsRcv_respond.datsTrans.dats, datsRcv_respond.datsTrans.dat
             -sLen) && 
1240   5                                                 (datsRcv_respond.nwkAddr == datsFrom_addr) &&
1241   5                                                      (datsRcv_respond.portPoint == dstPoint)){
1242   6                                              
1243   6                                                      step = 3;
1244   6                                                              
1245   6                                              }else{
1246   6                                              
1247   6      #if(DEBUG_LOGOUT_EN == 1)
                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                                      sprintf(log_buf, "data remoteRcv is %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[21], (int)datsR
             -cv_ZIGB.rcvDats[22], (int)datsRcv_ZIGB.rcvDats[23]);
                                                                      sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)dstPoint, (int)datsFrom_addr);
              //                                                      sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)datsRcv_respond.portPoint, (int)d
             -atsRcv_respond.nwkAddr);
                                                                      PrintString1_logOut(log_buf);
                                                              }       
              #endif  
1256   6                                              }
1257   5                                      }
1258   4                              }
1259   3                              
1260   3                      }break;
1261   2                      
1262   2                      case 3:{ //ÏìÓ¦³É¹¦
1263   3                      
1264   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1265   4                              
1266   4                                      reConnectAfterDatsReq_IF = 0;
1267   4                                      devRunning_Status = status_nwkReconnect;
1268   4                                      
1269   4                              }else{ 
1270   4                              
1271   4                                      devRunning_Status = status_passiveDataRcv;
1272   4                              }
1273   3                              
1274   3                              reactionLoop = 0;
1275   3                              step = 0;
1276   3                              
1277   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1278   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1279   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1280   3                              
1281   3                      }break;
1282   2                      
1283   2                      case 4:{ //ÏìÓ¦Ê§°Ü
1284   3                              
1285   3                              //Õë¶ÔÊı¾İ´«ÊäÊ§°ÜÏìÓ¦´úÂëÇé¿ö½øĞĞÑ¡ÔñĞÔÖØÁ¬£¬·ñÔò½öÊ±ÇøĞ­µ÷Æ÷Éè±¸¾Ígg
1286   3                              if(datsTrans_respondCode){ 
1287   4                                      
1288   4      #if(DEBUG_LOGOUT_EN == 1)                               
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "remote dataRequest fail, code:[0x%02X] --loop%d.\n", (int)datsTrans_respondCode, (i
             -nt)dataReq_failLoop_record);
                                                      PrintString1_logOut(log_buf);
                                              }
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 23  

              #endif  
1295   4                                      if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //ÈôÅÜÂíµÆÕıÔÚÔËĞĞÔòÖĞ¶ÏÅÜÂíµÆ
1296   4                                      
1297   4                                      switch(datsTrans_respondCode){ //ÏìÓ¦Ê§°ÜÂë·ÖÎö
1298   5                                      
1299   5                                              case resCODE_datsSend_NOROUTER:
1300   5                                              case resCODE_datsSend_NOREMOTE:
1301   5                                              case resCODE_datsSend_SUCCESS:{
1302   6                                              
1303   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1304   6                                                      
1305   6                                              }break;
1306   5                                              
1307   5                                              default:{
1308   6                                              
1309   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1310   6                                                      
1311   6                                              }break;
1312   5                                      }
1313   4                                      
1314   4                                      datsTrans_respondCode = 0;
1315   4                              }
1316   3                              
1317   3                              reactionLoop = 0;
1318   3                              step = 0;
1319   3                              
1320   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1321   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1322   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1323   3                              
1324   3                              if(dataReq_failLoop_record < dataReq_failLoop_limit){ //Êı¾İ´«ÊäÊ§°Ü´ÎÊı³¬ÏŞ£¬´¥·¢Ó¦ÓÃ²ãÖØÁ¬
1325   4                                              
1326   4                                      if(heartBeatPeriod == PERIOD_HEARTBEAT_ASR)dataReq_failLoop_record += (dataReq_failLoop_limit / 3);
1327   4                                      else dataReq_failLoop_record ++;
1328   4                              }
1329   3                              else
1330   3                              {
1331   4                              
1332   4                                      dataReq_failLoop_record = 0;
1333   4                                      devRunning_Status = status_nwkReconnect;
1334   4                                      
1335   4      #if(DEBUG_LOGOUT_EN == 1)                               
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      PrintString1_logOut(">>>dtFail too more, zigbee reconnect right now.\n");
                                              }
              #endif  
1340   4                                      return; //Á¢¼´Ö´ĞĞ
1341   4                              }
1342   3                      
1343   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1344   4                              
1345   4                                      reConnectAfterDatsReq_IF = 0;
1346   4                                      devRunning_Status = status_nwkReconnect;
1347   4                                      return; //Á¢¼´Ö´ĞĞ
1348   4                                      
1349   4                              }else{ 
1350   4                              
1351   4                                      devRunning_Status = status_passiveDataRcv;
1352   4                              }
1353   3                              
1354   3                      }break;
1355   2                              
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 24  

1356   2                      default:{
1357   3                      
1358   3                              step = 4;
1359   3                              
1360   3                      }break;
1361   2              }
1362   1      }
1363          
1364          /*Éè±¸Êı¾İ´«ÊäÖ÷×´Ì¬ÇĞ»»ÖÁÍøÂç¹ÒÆğ*/
1365          void devStatusChangeTo_devHold(bit zigbNwkSysNote_IF){ //Éè±¸ÍøÂç¹ÒÆğ
1366   1      
1367   1              devNwkHoldTime_Param.devHoldTime_counter = DEVHOLD_TIME_DEFAULT;
1368   1              if(zigbNwkSysNote_IF)devNwkHoldTime_Param.zigbNwkSystemNote_IF = 1;
1369   1              
1370   1              devStatus_switch.statusChange_standBy = status_devNwkHold; //Êı¾İ´«Êä×´Ì¬»ú¸ü±ä
1371   1              devStatus_switch.statusChange_IF = 1;
1372   1              
1373   1              devTips_status = status_devHold; //tips¸ü±ä
1374   1              thread_tipsGetDark(0x0F);
1375   1              
1376   1      #if(DEBUG_LOGOUT_EN == 1)                               
                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                              sprintf(log_buf, "devHold start right now.\n");
                              PrintString1_logOut(log_buf);
                      }
              #endif  
1383   1      }
1384          
1385          /*Éè±¸ÍøÂç¹ÒÆğÍ£Ö¹£¬Ê¹ÌáÇ°½áÊø*/
1386          void devHoldStop_makeInAdvance(void){ //Í£Ö¹Éè±¸ÍøÂç¹ÒÆğ£¨ÌáÇ°£©
1387   1      
1388   1              if(devNwkHoldTime_Param.devHoldTime_counter)devNwkHoldTime_Param.devHoldTime_counter = 0;
1389   1      }
1390          
1391          /*zigbeeÉè±¸ÍøÂç¹ÒÆğ×´Ì¬»ú*///·Ç×èÈû
1392          static 
1393          void function_devNwkHold(void){
1394   1              
1395   1              static status_Step = 0; //µ±Ç°×´Ì¬»ú²½Öè×´Ì¬Ö¸Ê¾
1396   1              
1397   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1398   2              
1399   2                      devStatus_switch.statusChange_IF = 0;
1400   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1401   2                      
1402   2                      status_Step = 0;
1403   2                      zigbNwkAction_counter = 0;
1404   2                      
1405   2                      zigbPin_RESET = 1;
1406   2                      
1407   2                      return;
1408   2              }
1409   1              
1410   1              if(devNwkHoldTime_Param.devHoldTime_counter){ //Ö±µ½¹ÒÆğÊ±¼ä½áÊø
1411   2              
1412   2                      if(devNwkHoldTime_Param.zigbNwkSystemNote_IF){ //Í¨Öªµ±Ç°ÍøÂçÄÚ×ÓÉè±¸¹ÒÆğ,±¨Ò»´Î
1413   3                              
1414   3                              u8 xdata dats_Note[3] = {ZIGB_SYSCMD_DEVHOLD, 1, 0}; //ÃüÁî¡¢Êı¾İ³¤¶È¡¢Êı¾İ
1415   3                      
1416   3                              devNwkHoldTime_Param.zigbNwkSystemNote_IF = 0; //Í¨ÖªÊ¹ÄÜ¸´Î»
1417   3                              
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 25  

1418   3                              dataSendRemote_straightforward( 0xFFFF, //¹ã²¥Í¨ÖªÍøÄÚËùÓĞ×ÓÉè±¸¹ÒÆğ
1419   3                                                                                              ZIGB_ENDPOINT_CTRLSYSZIGB,
1420   3                                                                                              dats_Note,
1421   3                                                                                              3 );
1422   3                              
1423   3                              delayMs(50); //±ØĞèÑÓÊ±£¬·ñÔòÊı¾İ»¹Ã»·¢ËÍ³öÈ¥£¬¾ÍÅÜµ½ÏÂÒ»²½¸´Î»ÁË
1424   3                      }
1425   2                      
1426   2                      { //Éè±¸¹ÒÆğ,Ñ­»·¸´Î»
1427   3                              
1428   3                              switch(status_Step){
1429   4                              
1430   4                                      case 0:{ //¸´Î»200ms
1431   5                                      
1432   5                                              zigbPin_RESET = 0;
1433   5                                              zigbNwkAction_counter = 200;
1434   5                                              status_Step = 1;
1435   5                                      
1436   5                                      }break;
1437   4                                              
1438   4                                      case 1:{ //Ã¿6s¸´Î»Ò»´Î
1439   5                                      
1440   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1441   6                                              
1442   6                                                      zigbPin_RESET = 1;
1443   6                                                      zigbNwkAction_counter = 6000;
1444   6                                                      status_Step = 2;
1445   6                                              }
1446   5                                      
1447   5                                      }break;
1448   4                                      
1449   4                                      case 2:{
1450   5                                      
1451   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1452   6                                              
1453   6                                                      status_Step = 0;
1454   6                                                      
1455   6      #if(DEBUG_LOGOUT_EN == 1)                               
                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                      sprintf(log_buf, "devHold time count remind: %02d s.\n", (int)devNwkHoldTime_Param.devHoldTime_coun
             -ter);
                                                                      PrintString1_logOut(log_buf);
                                                              }
              #endif
1462   6                                              }
1463   5                                      
1464   5                                      }break;
1465   4                                      
1466   4                                      default:{
1467   5                                              
1468   5                                              status_Step = 0;
1469   5                                              
1470   5                                      }break;
1471   4                              }
1472   3                      }
1473   2      
1474   2              }else{
1475   2              
1476   2                      //¹ÒÆğÊ±¼ä½áÊø,Ö÷×´Ì¬»Ö¸´ÖÁÖØÁ¬£¬±¾µØ×´Ì¬»Ö¸´
1477   2                      status_Step = 0;
1478   2                      zigbPin_RESET = 1;
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 26  

1479   2                      
1480   2                      devRunning_Status = status_nwkReconnect; //Ö±½Ó½«Ö÷×´Ì¬ÇĞ»»ÖÁÍøÂçÖØÁ¬,²»×ßstandbyÁ÷³Ì
1481   2                      devTips_status = status_Normal; //tips¸ü±ä
1482   2              
1483   2      #if(DEBUG_LOGOUT_EN == 1)                               
                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                      sprintf(log_buf, "devHold stop.\n");
                                      PrintString1_logOut(log_buf);
                              }
              #endif  
1490   2              }
1491   1      }
1492          
1493          /*zigbee¼¯Èº¿ØÖÆÊı¾İ½âÎö*/
1494          static 
1495          void dataParing_scenarioCtrl(u8 datsFrame[]){
1496   1      
1497   1              u8 dataTX_temp = CTRLSECENARIO_RESPCMD_SPECIAL;
1498   1              
1499   1              colonyCtrlGet_statusLocalScene = datsFrame[0]; //±¾µØ³¡¾°¿ØÖÆÂÖÑ¯Öµ¸üĞÂ(³¡¾°¿ØÖÆ½öÀ´×ÔÓÚÊÖ»ú¿ØÖÆ)
1500   1              
1501   1              dataSendRemote_straightforward(0, ZIGB_ENDPOINT_CTRLSECENARIO, &dataTX_temp, 1); //³¡¾°¿ØÖÆÔ¶¶Ë»Ø¸´
1502   1              
1503   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED) //Ç¿ÖÆÉè±¸ÀàĞÍÎªºìÍâ×ª·¢Æ÷Ê±£¬³¡¾°´¥·¢¶ÔÓ¦ĞòºÅµÄºìÍâ¿ØÖÆ
                      if(infraredStatus_GET() == infraredSMStatus_free)infraredOpreatAct_remoteControlStart(datsFrame[0]); //¿Õ
             -ÏĞÌ¬ÏÂ£¬²Ù×÷¿ÉÓÃ£¬±ÜÃâ¹¦ÄÜÖØ¸´´¥·¢
                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER) //Ç¿ÖÆÉè±¸ÀàĞÍÎªÈÈË®Æ÷Ê±£¬°´¼ü×´Ì¬ËæÖ®¸üĞÂ
                      (datsFrame[0] == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKeepOpen):(heater_ActPara
             -m.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                      devHeater_actOpeartionExecute(heater_ActParam.heater_currentActMode); //¶¯×÷Ö´ĞĞ
                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)         
                      swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
                      swCommand_fromUsr.actMethod = relay_OnOff;
                       
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                      swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
                      swCommand_fromUsr.actMethod = relay_OnOff;      
              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                      swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
                      swCommand_fromUsr.actMethod = relay_OnOff;
                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                      swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
                      swCommand_fromUsr.actMethod = relay_OnOff;
                      
              #else
1527   1              swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
1528   1              swCommand_fromUsr.actMethod = relay_OnOff;
1529   1              
1530   1              if((SWITCH_TYPE == SWITCH_TYPE_CURTAIN) && //¿ª¹ØÀàĞÍÎª´°Á±ÇÒ¿ØÖÆ×´Ì¬Îª·ÇÍ£Ö¹ÇÒ¹ìµÀÊ±¼ä¿ÉÓÃÊ±£¬½ûÖ¹´¥·¢»¥
             -¿Ø
1531   1                 (swCommand_fromUsr.objRelay != 2) &&
1532   1                 (curtainAct_Param.act_period)){
1533   2                      
1534   2                              specialFlg_curtainEachctrlEn = 0; 
1535   2              }
1536   1              
1537   1      #endif
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 27  

1538   1              
1539   1      #if(DEBUG_LOGOUT_EN == 1)
                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                              sprintf(log_buf, "cmdScenarioCtrl comming, statusData:%02X.\n", (int)datsFrame[0]);
                              PrintString1_logOut(log_buf);
                      }                       
              #endif          
1546   1      }
1547          
1548          /*zigbeeÏµÍ³½»»¥Êı¾İ½âÎö*/
1549          static 
1550          void dataParing_zigbSysCtrl(u8 datsFrame[]){
1551   1      
1552   1              /*>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<*/
1553   1              /*----------------------------------------------*/
1554   1              /*  frame_CMD   |       frame_dataLen|  frame_data      |
1555   1              /*----------------------------------------------*/
1556   1              /*      1byte           |       1byte            |      < 256byte       |       
1557   1              /*----------------------------------------------*/
1558   1              
1559   1              frame_zigbSysCtrl xdata dats = {0};
1560   1              
1561   1              dats.command = datsFrame[0];
1562   1              memcpy(dats.dats, &datsFrame[2], datsFrame[1]);
1563   1              dats.datsLen = datsFrame[1];
1564   1              
1565   1              switch(dats.command){
1566   2              
1567   2                      case ZIGB_SYSCMD_NWKOPEN:{ //ÍøÂç¿ª·Å
1568   3                              
1569   3                              bit resultSet = 0;
1570   3                              
1571   3                              resultSet = ZigB_nwkOpen(1, dats.dats[0]); //¹¦ÄÜ´¥·¢
1572   3                              tips_statusChangeToZigbNwkOpen(dats.dats[0]); //tips´¥·¢
1573   3                              
1574   3      #if(DEBUG_LOGOUT_EN == 1)
                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                              sprintf(log_buf, "master cmdComing:nwkOpen:%02ds.\n", (int)dats.dats[0]);
                                              PrintString1_logOut(log_buf);
                                      }                       
              #endif          
1581   3                              
1582   3                      }break;
1583   2                      
1584   2                      case ZIGB_SYSCMD_TIMESET:{ //ÏµÍ³Ê±¼äÉè¶¨
1585   3                      
1586   3                              bit resultSet = 0;
1587   3                              bit timeZoneAdjust_needIF = 0;
1588   3                              u32 time_Temp = 0UL;
1589   3                              
1590   3                              time_Temp |= (u32)dats.dats[0] << 0;
1591   3                              time_Temp |= (u32)dats.dats[1] << 8;
1592   3                              time_Temp |= (u32)dats.dats[2] << 16;
1593   3                              time_Temp |= (u32)dats.dats[3] << 24;
1594   3                              if((sysTimeZone_H != dats.dats[4]) || (sysTimeZone_M != dats.dats[5])){ //Ê±ÇøÍ¬²½
1595   4                              
1596   4                                      sysTimeZone_H = dats.dats[4];
1597   4                                      sysTimeZone_M = dats.dats[5];
1598   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1599   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 28  

1600   4                              }
1601   3                              
1602   3                              if(dats.dats[6])timeZoneAdjust_needIF = 1; //Ê±Çø²¹³¥Ê¹ÄÜÅĞ¶Ï
1603   3                              if(time_Temp > ZIGB_UTCTIME_START)resultSet = zigB_sysTimeSet(time_Temp - ZIGB_UTCTIME_START, timeZoneA
             -djust_needIF); //zigbee ±¾µØÏµÍ³Ê±¼äÉèÖÃ<UTC¸º²¹³¥>
1604   3                              
1605   3      #if(DEBUG_LOGOUT_EN == 1)
                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                              
                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                              sprintf(log_buf, "master UTC coming:[0x%02X%02X%02X%02X].\n", (int)dats.dats[3], (int)dats.dats[2], (i
             -nt)dats.dats[1], (int)dats.dats[0]);
                                              PrintString1_logOut(log_buf);
                                      }                       
              #endif  
1613   3                      }break;
1614   2                      
1615   2                      case ZIGB_SYSCMD_DEVHOLD:{ //ÍøÂç¹ÒÆğ£¨ÓÃ×÷Íø¹ØÇĞ»»£©
1616   3                              
1617   3      #if(DEBUG_LOGOUT_EN == 1)
                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                              sprintf(log_buf, "node cmdComing:devNwk hold.\n");
                                              PrintString1_logOut(log_buf);
                                      }                       
              #endif  
1624   3                              devStatusChangeTo_devHold(0); //Éè±¸ÍøÂç±»¶¯¹ÒÆğ,²»½øĞĞÍøÂçÍ¨Öª
1625   3                              
1626   3                      }break;
1627   2                      
1628   2                      case ZIGB_SYSCMD_DATATRANS_HOLD:{ //Í¨ĞÅÖ÷¶¯±ÜÕÏ£¬½«ÖÜÆÚĞÔÍ¨ĞÅ¹ÒÆğ
1629   3                              
1630   3      #if(DEBUG_LOGOUT_EN == 1)
                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                              
                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                              sprintf(log_buf, "master cmd: dtPeriod hold, time:%d.\n", (int)dats.dats[0]);
                                              PrintString1_logOut(log_buf);
                                      }                       
              #endif  
1638   3                              if(!heartBeatHang_timeCnt && !colonyCtrlGetHang_timeCnt){ //ÓĞĞ§ÖÜÆÚÄÚ£¬¸¨Öú²¹³ä¹ã²¥Ò»´Î£¬·ÀÖ¹ÆäËû½ÚµãÃ
             -»ÊÕµ½
1639   4                                      
1640   4      //                              PrintString1_logOut("dtPeriod hold one more time.\n");
1641   4      //                              dataSendRemote_straightforward(0xffff, ZIGB_ENDPOINT_CTRLSYSZIGB, datsFrame, datsFrame[1] + 2);
1642   4                                      
1643   4                              }else{
1644   4                              
1645   4      //#if(DEBUG_LOGOUT_EN == 1)
1646   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1647   4      //                      
1648   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1649   4      //                                      sprintf(log_buf, "dtPeriod holdAdd err, parm1: %d, parm2: %d.\n", (int)heartBeatHang_timeCnt, (int)
             -colonyCtrlGetHang_timeCnt);
1650   4      //                                      PrintString1_logOut(log_buf);
1651   4      //                              }                       
1652   4      //#endif        
1653   4                              }
1654   3                              
1655   3                              periodDataTrans_momentHang(dats.dats[0]);  //±ÜÕÏÊ±¼ä¼ÓÔØ£¬¶¯×÷Ö´ĞĞ
1656   3                              
1657   3                      }break;
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 29  

1658   2      
1659   2      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                              case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ¹ÄÜ*///¸üĞÂ¼¯ÈºĞÅÏ¢²¢¶¯×÷
                              
                                      /*>>>>>>>>>>>>>>>>>>>frame_data reference<<<<<<<<<<<<<<<*/
                                      /*------------------------------------------------------*/
                                      /*  frame_data[0]                       |       frame_data[1...3]               |
                                      /*------------------------------------------------------*/
                                      /*      ×î½üÒ»´Î³¡¾°¿ØÖÆ×´Ì¬Öµ  |       ×î½üÒ»´Î»¥¿Ø¸üĞÂ×´Ì¬Öµ  |
                                      /*------------------------------------------------------*/
                                      
                                      u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
                                      
              //#if(DEBUG_LOGOUT_EN == 1)
              //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
              //                      
              //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                      sprintf(log_buf, "curRealy_Val:%02X, dataQuery result:%02X %02X %02X %02X.\n",
              //                                                                       (int)status_Relay,
              //                                                                       (int)dats.dats[0],
              //                                                                       (int)dats.dats[1],
              //                                                                       (int)dats.dats[2],
              //                                                                       (int)dats.dats[3]);
              //                                      PrintString1_logOut(log_buf);
              //                              }                       
              //#endif                
                                      if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ scene detect from poling.\n");
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              
                                              //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              colonyCtrlGet_statusLocalScene = dats.dats[0];
                                              
                                              if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
                                              }
                                      }
                                      
                                      if(memcmp(&dats.dats[1], colonyCtrlGet_statusLocalEaCtrl, clusterNum_usr)){ //»¥¿Ø×´Ì¬ÖµÖµÂÖÑ¯¸üĞÂ
                                              
                                              u8 idata loop;
                                              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ eachCtrl detect from poling, currentVal is: %02X %02X %02X.\n", (int)colonyC
             -trlGet_statusLocalEaCtrl[0],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[1],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[2]);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif
                                              //ÉÏÒ»´Î»¥¿ØÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              memcpy(colonyCtrlGet_statusLocalEaCtrl, &dats.dats[1], clusterNum_usr);
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 30  

                                              
                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //ÑÚÂëÅĞ¶Ï²Ù×÷Î»£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_ON)statusRelay_temp |= (
             -1 << loop);
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_OFF)statusRelay_temp &= 
             -~(1 << loop);
                                                      
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = statusRelay_temp;
                                              }
                                      }
                                      
                              }break;
              #else /*ºêÅĞÖĞ*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1732   2                      case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ§ÄÜ*///½ö½ÓÊÕ³¡¾°¿ØÖÆĞÅÏ¢²¢¶¯×÷
1733   3                      
1734   3                              u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
1735   3                              
1736   3                              if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
1737   4                              
1738   4      #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ scene detect from poling.\n");
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
1745   4                                      
1746   4                                      //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
1747   4                                      colonyCtrlGet_statusLocalScene = dats.dats[0];
1748   4                                      
1749   4                                      if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
1750   5                                      
1751   5                                              swCommand_fromUsr.actMethod = relay_OnOff;
1752   5                                              swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
1753   5                                      }
1754   4                              }
1755   3                              
1756   3                      }break;
1757   2      #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1758   2                      default:break;
1759   2              }
1760   1      }
1761          
1762          /*zigbee³£¹æ¿ØÖÆ×ª·¢Êı¾İ½âÎö*/
1763          static 
1764          void dataParing_Nomal(u8 datsParam[], u16 nwkAddr_from, u8 port_from){
1765   1              
1766   1      #define dataLen_dataParingNomal (128 + 25)
1767   1              u8 xdata paramTX_temp[dataLen_dataParingNomal] = {0};
1768   1              
1769   1              bit dataFromRemote_IF = 0;      //ÊÇ·ñÎª·şÎñÆ÷¶ËÊı¾İ±êÖ¾
1770   1      
1771   1              /*²úÆ·¶ş¼¶Ğ­ÒéºË¶Ô_³£¹æ¿ØÖÆ*///¿ØÖÆÏÂ´ï
1772   1              switch(datsParam[0]){
1773   2              
1774   2                      /*Ô¶¶Ë*/
1775   2                      case ZIGB_FRAMEHEAD_CTRLREMOTE:{
1776   3                              
1777   3                              dataFromRemote_IF = 1;
1778   3                              
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 31  

1779   3                              memcpy(MAC_ID_DST, &datsParam[7], 6);
1780   3                              memcpy(&datsParam[1], &datsParam[13], datsRcv_ZIGB.rcvDats[20] - 13);
1781   3                      }
1782   2                      
1783   2                      /*±¾µØ*/
1784   2                      case ZIGB_FRAMEHEAD_CTRLLOCAL:{
1785   3                              
1786   3                              bit frameCheck_Done = 0; //Êı¾İ¼ì²âºÏ¸ñ±êÖ¾
1787   3                              
1788   3                              {
1789   4                                      bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
1790   4                                      bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
1791   4                                      
1792   4                                      if(datsParam[4] == frame_Check(&datsParam[5], 28))frameCodeCheck_PASS = 1; //Ğ£ÑéÂë¼ì²â
1793   4                                      if(!memcmp(&datsParam[5], &MAC_ID[1], 5))frameMacCheck_PASS = 1; //MAC¼ì²â
1794   4      
1795   4                                      if(datsParam[3] == FRAME_MtoZIGBCMD_cmdConfigSearch){ //ÌØÊâÖ¸Áî²»×öMAC¼ì²â
1796   5                                      
1797   5                                              frameMacCheck_PASS = 1;
1798   5                                              
1799   5                                      }else
1800   4                                      if((datsParam[3] == FRAME_MtoZIGBCMD_cmdCfg_swTim) || //ÌØÊâÖ¸Áî²»×öĞ£ÑéÂë¼ì²â
1801   4                                         (datsParam[3] == FRAME_MtoZIGBCMD_cmdswTimQuery)){
1802   5                                         
1803   5                                              frameCodeCheck_PASS = 1;
1804   5                                      }
1805   4                                         
1806   4                                      if(frameCodeCheck_PASS && frameCodeCheck_PASS)frameCheck_Done = 1;
1807   4                              }
1808   3                                 
1809   3                              if(frameCheck_Done){ //Ö¡¼ì²éÍ¨¹ı£¬¿ªÊ¼½âÎö¡¢¶¯×÷¼°ÏìÓ¦
1810   4                                      
1811   4                                      bit respond_IF          = 0;    //ÊÇ·ñ»Ø¸´
1812   4                                      bit specialCmd_IF       = 0;    //ÊÇ·ñÎªÌØÊâÖ¸Áî£¨ÌØÊâÖ¸ÁîÕ¼ÓÃ¿ª¹ØÀàĞÍÄÇÒ»¸ö×Ö½Ú£©
1813   4                                      
1814   4                                      beeps_usrActive(3, 50, 1);
1815   4                                      
1816   4      #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "cmdComing:%02X.\n", (int)datsParam[3]);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif          
1823   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_dataParingNomal);
1824   4                              
1825   4                                      switch(datsParam[3]){
1826   5                                      
1827   5                                              case FRAME_MtoZIGBCMD_cmdConfigSearch:{
1828   6                                                      
1829   6                                                      if(!deviceLock_flag){ //Éè±¸ÊÇ·ñÉÏËø
1830   7                                                              
1831   7      //                                                      tips_statusChangeToNormal();
1832   7                                                              tips_statusChangeToZigbNwkOpen(10); //ËÑË÷Ê±Ò²Ê¹ÓÃ¿ªÍøÌáÊ¾£¬ÌáÊ¾ºÏ²¢
1833   7                                                              
1834   7                                                              if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //´¥ÃşÊÍ·Å¼ÆÊ±Ê§ÄÜ
1835   7                                                              
1836   7                                                              paramTX_temp[11] = status_Relay; //¿ª¹Ø×´Ì¬»Ø¸´Ìî×°
1837   7                                                              paramTX_temp[12] = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
1838   7                                                              
1839   7                                                              paramTX_temp[14] = (u8)((dev_currentPanid & 0xFF00) >> 8); //ÍøÂçPANID»Ø¸´Ìî×°
1840   7                                                              paramTX_temp[15] = (u8)((dev_currentPanid & 0x00FF) >> 0);
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 32  

1841   7                                                              
1842   7                                                              if((sysTimeZone_H != datsParam[12]) || //Ê±Çø²»Í¬²Å½øĞĞ¸üĞÂ´æ´¢
1843   7                                                                 (sysTimeZone_M != datsParam[13])){
1844   8                                                                 
1845   8                                                                      sysTimeZone_H = datsParam[12];
1846   8                                                                      sysTimeZone_M = datsParam[13];
1847   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1848   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);   
1849   8                                                              }
1850   7                                                              
1851   7                                                              periodDataTrans_momentHang(10); //½ÓÊÕµ½ËÑË÷Âëºó ½«ÆäËûÖÜÆÚÖ÷¶¯·¢ÂëÍ¨ĞÅ½øĞĞ±ÜÈÃ ÎªËÑË÷ÏìÓ¦ÇåÂ· 10s
1852   7                                                      
1853   7                                                              respond_IF              = 1; //ÏìÓ¦»Ø¸´
1854   7                                                              specialCmd_IF   = 0;
1855   7                                                              
1856   7                                                      }else{
1857   7                                                      
1858   7                                                              
1859   7                                                      }
1860   6                                                      
1861   6                                              }break;
1862   5                                              
1863   5                                              case FRAME_MtoZIGBCMD_cmdControl:{
1864   6      
1865   6                                                      paramTX_temp[11] = 0;
1866   6                                                      paramTX_temp[11] |= (datsParam[11] & 0x07);     //×´Ì¬Î»Ìî×°
1867   6                                                      if(             (datsParam[11] & 0x01) != (status_Relay & 0x01))paramTX_temp[11] |= 0x20; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ»>µ
             -ÚÒ»Î»
1868   6                                                      else if((datsParam[11] & 0x02) != (status_Relay & 0x02))paramTX_temp[11] |= 0x40; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚ¶şÎ»
1869   6                                                      else if((datsParam[11] & 0x04) != (status_Relay & 0x04))paramTX_temp[11] |= 0x80; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚÈıÎ»
1870   6                                                      
1871   6                                                      swCommand_fromUsr.objRelay = datsParam[11];
1872   6                                                      swCommand_fromUsr.actMethod = relay_OnOff;
1873   6                                                      
1874   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                                                              paramTX_temp[11] = datsParam[11]; //µ÷¹âÖ±½Ó»ØÁÁ¶ÈÖµ£¬²»´ø¸ßÎ»
                                                              EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
                                                              (swCommand_fromUsr.objRelay == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKeepOp
             -en):(heater_ActParam.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                                                              devHeater_actOpeartionExecute(heater_ActParam.heater_currentActMode); //¶¯×÷Ö´ĞĞ
                                                              
              #else
1886   6                                                      if(SWITCH_TYPE == SWITCH_TYPE_SWBIT1 || SWITCH_TYPE == SWITCH_TYPE_SWBIT2 || SWITCH_TYPE == SWITCH_T
             -YPE_SWBIT3)EACHCTRL_realesFLG |= (status_Relay ^ swCommand_fromUsr.objRelay); //ÓĞĞ§»¥¿Ø´¥·¢
1887   6                                                      else
1888   6                                                      if(SWITCH_TYPE == SWITCH_TYPE_CURTAIN)EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
1889   6                                                      
1890   6      #endif
1891   6      
1892   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1893   6                                                      specialCmd_IF   = 0;                                                    
1894   6                                                      
1895   6                                              }break;
1896   5                                                      
1897   5                                              case FRAME_MtoZIGBCMD_cmdQuery:{
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 33  

1898   6                                              
1899   6                                                      paramTX_temp[11] = status_Relay & 0x07;
1900   6                                                      paramTX_temp[12] = 0;
1901   6                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1902   6                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1903   6                                                      
1904   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1905   6                                                      specialCmd_IF   = 0;    
1906   6                                              
1907   6                                              }break;
1908   5                                                      
1909   5                                              case FRAME_MtoZIGBCMD_cmdInterface:{}break;
1910   5                                                      
1911   5                                              case FRAME_MtoZIGBCMD_cmdReset:{}break;
1912   5                                                      
1913   5                                              case FRAME_MtoZIGBCMD_cmdDevLockON:{
1914   6                                              
1915   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1916   6                                                      {
1917   7                                                              u8 deviceLock_IF = 1;
1918   7                                                              
1919   7                                                              deviceLock_flag  = 1;
1920   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1921   7                                                      }               
1922   6                                                      
1923   6                                              }break;
1924   5                                                      
1925   5                                              case FRAME_MtoZIGBCMD_cmdDevLockOFF:{
1926   6                                              
1927   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1928   6                                                      {
1929   7                                                              u8 deviceLock_IF = 0;
1930   7                                                              
1931   7                                                              deviceLock_flag  = 0;
1932   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1933   7                                                      }       
1934   6                                              
1935   6                                              }break;
1936   5                                                      
1937   5                                              case FRAME_MtoZIGBCMD_cmdswTimQuery:{
1938   6                                              
1939   6                                                      //·ÖÀà»Ø¸´
1940   6                                                      switch(datsParam[13]){ //×ÓÃüÁî½âÎö
1941   7                                                      
1942   7                                                              case 0: /*ÉÏÎ»»úÔÚ¶¨Ê±µÄÊ±ºò¸ø0£¬´ıĞ­ÉÌ*/
1943   7                                                              case cmdConfigTim_normalSwConfig:{
1944   8                                                              
1945   8                                                                      u8 loop = 0;
1946   8                                                              
1947   8                                                                      //Êı¾İÏìÓ¦¼°»Ø¸´
1948   8                                                                      EEPROM_read_n(EEPROM_ADDR_swTimeTab, &paramTX_temp[14], 12);    //¶¨Ê±±í»Ø¸´Ìî×°
1949   8                                                                      
1950   8                                                                      //»Ø¸´Êı¾İ¶ş´Î´¦Àí£¨Õë¶ÔÒ»´ÎĞÔ¶¨Ê±Êı¾İ£©
1951   8                                                                      for(loop = 0; loop < 4; loop ++){
1952   9                                                                      
1953   9                                                                              if(swTim_oneShoot_FLAG & (1 << loop)){
1954  10                                                                                      
1955  10                                                                                      paramTX_temp[14 + loop * 3] &= 0x80;
1956  10                                                                              }
1957   9                                                                      }
1958   8                                                                                      
1959   8                                                                      specialCmd_IF = 1; //ÌØÊâÕ¼Î»Ö¸Áî
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 34  

1960   8                                                                      
1961   8      #if(DEBUG_LOGOUT_EN == 1)
                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                      sprintf(log_buf, ">>>>>>>>timer_tab3 respond:[%02X-%02X-%02X].\n", (int)paramTX_temp[20], (int)pa
             -ramTX_temp[21], (int)paramTX_temp[22]);
                                                                                      PrintString1_logOut(log_buf);
                                                                              }                       
              #endif  
1968   8                                                                      
1969   8                                                              }break;
1970   7                                                              
1971   7                                                              case cmdConfigTim_onoffDelaySwConfig:{
1972   8                                                              
1973   8                                                                      if(!delayCnt_onoff)paramTX_temp[14] = 0;
1974   8                                                                      else paramTX_temp[14] = delayPeriod_onoff - (u8)(delayCnt_onoff / 60);
1975   8                                                                      paramTX_temp[15] = delayUp_act;
1976   8                                                                      
1977   8                                                              }break;
1978   7                                                              
1979   7                                                              case cmdConfigTim_closeLoopSwConfig:{
1980   8                                                              
1981   8                                                                      paramTX_temp[14] = delayPeriod_closeLoop;
1982   8                                                                      
1983   8                                                              }break;
1984   7                                                              
1985   7                                                              case cmdConfigTim_nightModeSwConfig:{  
1986   8                                                              
1987   8                                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &paramTX_temp[14], 6);      //Ò¹¼äÄ£Ê½¶¨Ê±±í»Ø¸´Ìî×°
1988   8                                                                      
1989   8                                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1990   8                                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1991   8                                                                      
1992   8                                                              }break;
1993   7                                                              
1994   7                                                              default:break;
1995   7                                                      }
1996   6                                                      
1997   6                                                      paramTX_temp[13] = datsParam[13]; //¶¨Ê±×ÓÃüÁîÍ¬²½»Ø¸´
1998   6                                                      
1999   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2000   6                                                      
2001   6                                              }break;
2002   5                                                      
2003   5                                              case FRAME_MtoZIGBCMD_cmdConfigAP:{}break;
2004   5                                                      
2005   5                                              case FRAME_MtoZIGBCMD_cmdBeepsON:{ //Ò¹¼äÄ£Ê½¹Ø
2006   6                                              
2007   6                                                      u8 datsTemp = 0;
2008   6                                                      
2009   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
2010   6                                                      datsTemp &= ~0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,È¡ÏûÍ·×Ö½ÚÈ«Õ¼Âú,Ê§ÄÜÈ«Ìì
2011   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
2012   6                                                      
2013   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2014   6                                                      
2015   6                                              }break;
2016   5                                                      
2017   5                                              case FRAME_MtoZIGBCMD_cmdBeepsOFF:{ //Ò¹¼äÄ£Ê½¿ª
2018   6                                              
2019   6                                                      u8 datsTemp = 0;
2020   6                                                      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 35  

2021   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
2022   6                                                      datsTemp |= 0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,Í·×Ö½ÚÈ«Õ¼Âú,Ç¿ÖÆÈ«Ìì
2023   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);        
2024   6                                                      
2025   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2026   6                                                      
2027   6                                              }break;
2028   5                                                      
2029   5                                              case FRAME_MtoZIGBCMD_cmdftRecoverRQ:{
2030   6                                              
2031   6                                                      respond_IF = 1;
2032   6                                                      
2033   6                                              }break;
2034   5                                                      
2035   5                                              case FRAME_MtoZIGBCMD_cmdRecoverFactory:{
2036   6                                              
2037   6                                                      Factory_recover();
2038   6                                              
2039   6                                              }break;
2040   5                                                      
2041   5                                              case FRAME_MtoZIGBCMD_cmdCfg_swTim:{
2042   6                                                      
2043   6                                                      u8 loop = 0;
2044   6                                                      
2045   6                                                      switch(datsParam[13]){ //¶¨Ê±Êı¾İ´¦Àí¼°¸üĞÂ,·ÖÀà´¦Àí
2046   7                                                      
2047   7                                                              case cmdConfigTim_normalSwConfig:{      /*ÆÕÍ¨¶¨Ê±*/
2048   8                                                                      
2049   8                                                                      for(loop = 0; loop < 4; loop ++){
2050   9                                                                      
2051   9                                                                              if(datsParam[14 + loop * 3] == 0x80){   /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±»´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞ
             -Ô
2052  10                                                                              
2053  10                                                                                      swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
2054  10                                                                                      datsParam[14 + loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½øĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´
             -ÎÖ´ĞĞÍê±ÏºóÇå³ı
2055  10                                                                                      
2056  10                                                                              }else{
2057  10                                                                              
2058  10                                                                                      swTim_oneShoot_FLAG &= ~(1 << loop);//Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
2059  10                                                                              }
2060   9                                                                      }
2061   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, &datsParam[14], 4 * 3);      //¶¨Ê±±í
2062   8                                                                      itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2063   8      #if(DEBUG_LOGOUT_EN == 1)
                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                      sprintf(log_buf, ">>>>>>>>timer_tab3 has been set:[%02X-%02X-%02X].\n", (int)datsParam[20], (int)
             -datsParam[21], (int)datsParam[22]);
                                                                                      PrintString1_logOut(log_buf);
                                                                              }                       
              #endif  
2070   8                                                              
2071   8                                                              }break;
2072   7                                                              
2073   7                                                              case cmdConfigTim_onoffDelaySwConfig:{  /*¿ª¹ØÑÓÊ±*/
2074   8                                                              
2075   8                                                                      if(datsParam[14]){
2076   9                                                                      
2077   9                                                                              ifDelay_sw_running_FLAG |= (1 << 1);
2078   9                                                                              delayPeriod_onoff               = datsParam[14];
2079   9                                                                              
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 36  

2080   9                                                                              delayUp_act                             = datsParam[15];
2081   9                                                                              
2082   9                                                                              delayCnt_onoff                  = 0;
2083   9                                                                              
2084   9                                                                      }else{
2085   9                                                                      
2086   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 1);
2087   9                                                                              delayPeriod_onoff               = 0;
2088   9                                                                              delayCnt_onoff                  = 0;
2089   9                                                                      }
2090   8                                                                      
2091   8                                                              }break;
2092   7                                                              
2093   7                                                              case cmdConfigTim_closeLoopSwConfig:{   /*ÂÌÉ«¹¦ÄÜ(×Ô¶¯Ñ­»·¹Ø±Õ)*/
2094   8                                                              
2095   8                                                                      if(datsParam[14]){
2096   9                                                                      
2097   9                                                                              ifDelay_sw_running_FLAG |= (1 << 0);
2098   9                                                                              delayPeriod_closeLoop   = datsParam[14];
2099   9                                                                              delayCnt_closeLoop              = 0;
2100   9                                                                              
2101   9                                                                      }else{
2102   9                                                                      
2103   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 0);
2104   9                                                                              delayPeriod_closeLoop   = 0;
2105   9                                                                              delayCnt_closeLoop              = 0;
2106   9                                                                      }
2107   8                                                                      
2108   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1);
2109   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2110   8                                                                      
2111   8                                                              }break;         
2112   7      
2113   7                                                              case cmdConfigTim_nightModeSwConfig:{  /*Ò¹¼äÄ£Ê½ ±³¹â°ëÁÁ*/
2114   8                                                              
2115   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsParam[14], 6);   //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢
2116   8                                                                      itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2117   8                                                                      
2118   8                                                              }break;
2119   7                                                              
2120   7                                                              default:break;
2121   7                                                      }
2122   6                                                      
2123   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2124   6                                                      
2125   6                                              }break;
2126   5                                              
2127   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ctrlEachO:{
2128   6                                              
2129   6                                                      u8 loop = 0;
2130   6                                                      u8 effective_oprate = datsParam[12]; //ÓĞĞ§²Ù×÷Êı¾İÕ¼Î»»ñÈ¡
2131   6                                                      
2132   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2133   7                                                      
2134   7                                                              if((effective_oprate >> loop) & 0x01){ //ÓĞĞ§Êı¾İÅĞ¶Ï
2135   8                                                              
2136   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &datsParam[14 + loop], 1); //¶ÔÓ¦Èı×é»¥¿
             -ØºÅ»ñÈ¡²¢½øĞĞ±¾µØ´æ´¢
2137   8                                                                      CTRLEATHER_PORT[loop] = datsParam[14 + loop]; //»º´æ¸üĞÂ
2138   8                                                                      reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2139   8                                                              }
2140   7                                                      }
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 37  

2141   6                                                      
2142   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2143   6                                              
2144   6                                              }break;
2145   5                                              
2146   5                                              case FRAME_MtoZIGBCMD_cmdQue_ctrlEachO:{
2147   6                                              
2148   6                                                      u8 loop = 0;
2149   6                                                      
2150   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2151   7                                                      
2152   7                                                              EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther + loop, &paramTX_temp[14 + loop], 1);
2153   7                                                      }
2154   6                                                      
2155   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2156   6                                              
2157   6                                              }break;
2158   5                                                      
2159   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ledBackSet:{
2160   6                                              
2161   6                                                      memcpy(&devBackgroundLight_param, &datsParam[14], sizeof(bkLightColorInsert_paramAttr)); //»º´æ¸üĞÂ
2162   6                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, (u8*)&devBackgroundLight_param, sizeof(bkLightColor
             -Insert_paramAttr)); //±¾µØ´æ´¢¸üĞÂ
2163   6                                                      
2164   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2165   6                                              
2166   6                                              }break;
2167   5                                              
2168   5                                              case FRAME_MtoZIGBCMD_cmdQue_ledBackSet:{
2169   6                                              
2170   6                                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround, &datsParam[14], sizeof(bkLightColorInsert_paramAttr)); //
             -±¾µØ´æ´¢Öµ¶ÁÈ¡
2171   6                                                      
2172   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2173   6                                              
2174   6                                              }break;
2175   5                                              
2176   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioSet:{
2177   5      //                                              
2178   5      //                                              u16 xdata panid_Temp = ZigB_getPanIDCurrent(); //ÅäÖÃ»Ø¸´Ìí¼ÓPANID
2179   5      //                                      
2180   5      //                                              bit opt_result = swScenario_oprateSave(datsParam[12], datsParam[14]);
2181   5      //                                              if(opt_result)paramTX_temp[12] = 0;
2182   5      //                                              else paramTX_temp[12] = 0x0A; //³¡¾°ÉèÖÃÎŞĞ§»Ø¸´£¨³¡¾°´æ´¢ÒÑÂú£©
2183   5      //                                              
2184   5      //                                              paramTX_temp[14] = (u8)((panid_Temp & 0xFF00) >> 8);
2185   5      //                                              paramTX_temp[15] = (u8)((panid_Temp & 0x00FF) >> 0);
2186   5      //                                              
2187   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ£¨±¾µØ´æ´¢ÒÑ±»Õ¼Âú£©
2188   5      //                                      
2189   5      //                                      }break;
2190   5      //                                      
2191   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioCtl:{
2192   5      //                                              
2193   5      //                                              u8 sw_Act = swScenario_oprateCheck(datsParam[12]);
2194   5      //                                              if(sw_Act != SW_SCENCRAIO_ACTINVALID){ //ÈôË÷Òıµ½ÓĞĞ§²Ù×÷Î»
2195   5      //                                                      
2196   5      //                                                      swCommand_fromUsr.actMethod = relay_OnOff;
2197   5      //                                                      swCommand_fromUsr.objRelay = sw_Act;
2198   5      //                                              
2199   5      //                                                      paramTX_temp[12] = 0;
2200   5      //                                                      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 38  

2201   5      //                                              }else{ //ÈôÎŞ·¨Ë÷Òıµ½ÓĞĞ§²Ù×÷Î»
2202   5      //                                              
2203   5      //                                                      paramTX_temp[12] = 0x0A; //³¡¾°¿ØÖÆÎŞĞ§»Ø¸´£¨³¡¾°ºÅÎŞ·¨±»Ë÷Òı£©
2204   5      //                                              }
2205   5      //                                      
2206   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2207   5      //                                      
2208   5      //                                      }break;
2209   5      //                                      
2210   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioDel:{
2211   5      //                                              
2212   5      //                                              swScenario_oprateDele(datsParam[12]);
2213   5      //                                              paramTX_temp[12] = 0;
2214   5      //                                      
2215   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2216   5      //                                      
2217   5      //                                      }break;
2218   5                                              
2219   5                                              default:{
2220   6                                              
2221   6                                                      respond_IF = 0;
2222   6                                              
2223   6                                              }break;
2224   5                                      }
2225   4                                      
2226   4                                      /*»Ø¸´ÏìÓ¦*/
2227   4                                      if(respond_IF){ //Êı¾İ°ü»Ø¸´ÏìÓ¦¶¯×÷
2228   5                                      
2229   5                                              u8 datsTX_Len = 0;
2230   5                                              
2231   5                                              respond_IF = 0;
2232   5                                              
2233   5                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
2234   5                                                                                                                 paramTX_temp,
2235   5                                                                                                                 33,
2236   5                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
2237   5                                                                                                                 datsParam[3],
2238   5                                                                                                                 specialCmd_IF);
2239   5                                              
2240   5                                              heartBeatCount += 1; //ÑÓÊ±ĞÔĞ­µ÷ĞÄÌøÖÍºó 1s
2241   5                                              
2242   5                                              datsSend_request.nwkAddr = nwkAddr_from;
2243   5                                              datsSend_request.portPoint = port_from;
2244   5                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
2245   5                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
2246   5                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
2247   5                                              datsRcv_respond.datsTrans.datsLen = 0;
2248   5                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
2249   5                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 8; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆ
             -ÚÄÚ ·¢ 8 ´Î
2250   5                                              devRunning_Status = status_dataTransRequestDatsSend;
2251   5                                              
2252   5      //#if(DEBUG_LOGOUT_EN == 1)
2253   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2254   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2255   5      //                                              sprintf(log_buf, ">>>>>>>>standby dataTX_buf_tab3:[%02X-%02X-%02X].\n", (int)datsSend_request.dats
             -Trans.dats[20], (int)datsSend_request.datsTrans.dats[21], (int)datsSend_request.datsTrans.dats[22]);
2256   5      //                                              PrintString1_logOut(log_buf);
2257   5      //                                      }                       
2258   5      //#endif        
2259   5                                      }
2260   4                              }
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 39  

2261   3                      }break;
2262   2                      
2263   2                      /*ĞÄÌø_Íø¹ØÔÚÏß*/
2264   2                      case ZIGB_FRAMEHEAD_HEARTBEAT:{
2265   3                      
2266   3                              
2267   3                              
2268   3                      }break;
2269   2                      
2270   2                      /*ĞÄÌø_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2271   2                      case ZIGB_FRAMEHEAD_HBOFFLINE:{
2272   3                      
2273   3                              
2274   3                              
2275   3                      }break;
2276   2                      
2277   2      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) /*ºêÅĞÍ·*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2278   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2279   2                      case DTMODEKEEPACESS_FRAMEHEAD_OFFLINE:{
2280   3                              
2281   3                              periodDataTrans_momentHang(6); //internetÀëÏßÇé¿öÏÂ£¬ÖÜÆÚÍ¨Ñ¶¾ÍÃ»ÓÃÁË£¬Í¨ĞÅÆµ´ÎÏÂ½µµ½ 6s/´Î
2282   3      #if(DEBUG_LOGOUT_EN == 1)
                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                              
                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                              sprintf(log_buf, ">>>>>>>>internet offline.\n");
                                              PrintString1_logOut(log_buf);
                                      }       
              #endif
2290   3                      } /*²»×öbreak*///internetÀëÏßÇé¿öÏÂ£¬Êı¾İ°ü»Ø·¢¸ø×ÓÉè±¸£¬·ÀÖ¹×ÓÉè±¸×öÎŞÒâÒåĞÄÌøÖØ·¢
2291   2                      
2292   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÔÚÏß*/
2293   2                      case DTMODEKEEPACESS_FRAMEHEAD_ONLINE:{
2294   3                      
2295   3                              stt_agingDataSet_bitHold code   agingCmd_Temp = {0};
2296   3                              stt_devOpreatDataPonit xdata    dev_dataPointTemp = {0};
2297   3                              
2298   3                              bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
2299   3                              bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
2300   3                              bit frameDataOnceReserve_PASS = 0; //µ±Ç°Êı¾İ°üµ¥´Î¿ÉÓÃ±êÖ¾
2301   3                              
2302   3                              static u8 dataTrans_oncePword = 0; //Êı¾İ´«Êäµ¥´Î¿ÉÓÃ¿ÚÁî -ÓÃÓÚÇø·Ö²Ù×÷½ØÖ¹/ÖØ·¢
2303   3                              
2304   3      //#if(DEBUG_LOGOUT_EN == 1)
2305   3      //                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2306   3      //                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2307   3      //                              sprintf(log_buf, "periodKeepAcess respondRcv, cmd[%02X], dataLen[%02d].\n", (int)datsParam[8], (int)
             -datsParam[1]);
2308   3      //                              PrintString1_logOut(log_buf);
2309   3      //                      }                       
2310   3      //#endif        
2311   3                              
2312   3                              if(datsParam[datsParam[1] - 1] == frame_Check(&datsParam[1], datsParam[1] - 2))frameCodeCheck_PASS = 1;
             - //Ğ£ÑéÂëĞ£Ñé
2313   3                              if(!memcmp(&datsParam[2], &MAC_ID[1], 5))frameMacCheck_PASS = 1; //MACµØÖ·Ğ£Ñé
2314   3                              
2315   3                              if(frameCodeCheck_PASS && frameMacCheck_PASS){ 
2316   4                      
2317   4                                      memcpy(&dev_dataPointTemp, &datsParam[15], sizeof(stt_devOpreatDataPonit)); //Êı¾İ½á¹¹»¯
2318   4                                      
2319   4      //#if(DEBUG_LOGOUT_EN == 1)
2320   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 40  

2321   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2322   4      //                                      sprintf(log_buf, "agingCmd[%02X], swAging[%d], val[%02X].\n", (int)datsParam[8],
2323   4      //                                                                                                                                                                (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat, 
2324   4      //                                                                                                                                                                (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2325   4      //                                      PrintString1_logOut(log_buf);
2326   4      //                              }                       
2327   4      //#endif        
2328   4                              
2329   4                                      switch(datsParam[8]){ //Ö¡ÃüÁî
2330   5                                      
2331   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
2332   6                                                      
2333   6                                                      static bit local_ftyRecover_standbyFLG = 0; //»Ö¸´³ö³§ÉèÖÃ²Ù×÷Ô¤¶¯×÷±êÖ¾
2334   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                                                              static u8 local_infraredOpreat_ReserveNum = 1; //ºìÍâ²Ù×÷¿ÉÓÃ¿ÚÁîÖµ -±ÜÃâĞÅºÅ²»ºÃÊ±£¬Ê±Ğ§Î»ÖØ¸´´¥·¢º
             -ìÍâ²Ù×÷£¨Ã¿´Î²Ù×÷¶¼²úÉúĞÂµÄ¿ÚÁîÖµ£©
              #endif          
2337   6                                                      /*·ÇÊ±Ğ§ĞÔÃüÁîÅĞ¶Ï*///Êı¾İ²»Ò»ÖÂÊ±£¬¸üĞÂ»º´æºóÖ´ĞĞ¶¯×÷¼´¿É£¨·ÇÊ±Ğ§ÔòÃ¿´Î»ñÈ¡Êı¾İÊ±¶¼ÒªÓë±¾µØÊı¾İ×÷±È
             -½Ï£©
2338   6      //                                              { //ÆÕÍ¨¿ª¹Ø²Ù×÷£¬ÎŞĞèÊ±Ğ§
2339   6      //                                              
2340   6      //                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2341   6      //                                                      
2342   6      //                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2343   6      //                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2344   6      //                                                              
2345   6      //#if(DEBUG_LOGOUT_EN == 1)
2346   6      //                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2347   6      //                                                                      
2348   6      //                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2349   6      //                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x0
             -7, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2350   6      //                                                                      PrintString1_logOut(log_buf);
2351   6      //                                                              }                       
2352   6      //#endif        
2353   6      //                                                      }
2354   6      //                                              }
2355   6                                                      
2356   6      //                                              { //¿ª¹Ø¶¨Ê±²Ù×÷£¬ÎŞĞèÊ±Ğ§
2357   6      //                                              
2358   6      //                                                      timing_Dats xdata timDatsTemp_CalibrateTab[TIMEER_TABLENGTH] = {0};
2359   6      //                                                      
2360   6      //                                                      datsTiming_read_eeprom(timDatsTemp_CalibrateTab);
2361   6      //                                                      if(memcmp(timDatsTemp_CalibrateTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) * TIMEER
             -_TABLENGTH)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2362   6      //                                                      
2363   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) 
             -* TIMEER_TABLENGTH);
2364   6      //                                                      }
2365   6      //                                              }
2366   6                                                      
2367   6      //                                              { //ÂÌÉ«Ä£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2368   6      //                                              
2369   6      //                                                      if(delayPeriod_closeLoop != dev_dataPointTemp.devData_greenMode){
2370   6      //                                                      
2371   6      //                                                              
2372   6      //                                                      }
2373   6      //                                              }
2374   6                                                      
2375   6      //                                              { //Ò¹¼äÄ£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2376   6      //                                                      
2377   6      //                                                      timing_Dats xdata nightDatsTemp_CalibrateTab[2];
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 41  

2378   6      //                                                      
2379   6      //                                                      datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
2380   6      //                                                      if(memcmp(nightDatsTemp_CalibrateTab, dev_dataPointTemp.devData_nightMode, sizeof(timing_Dats) * 
             -2)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2381   6      //                                                      
2382   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dev_dataPointTemp.devData_nightMode, sizeof(ti
             -ming_Dats) * 2);
2383   6      //                                                      }       
2384   6      //                                              }
2385   6                                                      
2386   6      //                                              { //±³¹âµÆÉèÖÃ²Ù×÷£¬ÎŞĞèÊ±Ğ§
2387   6      //                                              
2388   6      //                                              }
2389   6                                                      
2390   6                                                      /*Ê±Ğ§ĞÔÃüÁîÅĞ¶Ï*///¸üĞÂÊ±Ğ§²Ù×÷ºó£¬Çå¿ÕÊ±Ğ§²Ù×÷Î»£¨Ê±Ğ§ÊÇÎªÁË½ÚÔ¼ĞÔÄÜ²»ÓÃÃ¿´Î²éÑ¯Ê±¶¼×÷±È½Ï£©
2391   6                                                      if(memcmp(&agingCmd_Temp, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_agingDataSet_
             -bitHold))){ //Ò»µ©ÓĞÊ±Ğ§Ö¸ÁîÎ»ÖÃ 1 £¬Ö»ÒªÓĞÊ±Ğ§Õ¼Î»£¬¾ÍÔ­Î»»Ø·¢
2392   7                                                              
2393   7                                                              heartBeatCount = PERIOD_HEARTBEAT_ASR; //ÓĞÊ±Ğ§¿ØÖÆ£¬Ç¿ĞĞÌáÇ°ĞÄÌøÁ¢¼´»ØÂë
2394   7                                                              
2395   7                                                              memcpy(&dev_agingCmd_rcvPassive, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_aging
             -DataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬ÓÃÓÚÔ­Î»»Ø·¢
2396   7                                                      
2397   7                                                              if(dataTrans_oncePword != datsParam[datsParam[1] - 2]){ //Êı¾İ°üµ¥´Î´«Êä¿ÉÓÃ¿ÚÁî¼ì²â -¿ÚÁîÏàÍ¬ÔòÎªÖ
             -Ø·¢£¬ÖØ·¢Ö»»ØÂë£¬µ¥²»½øĞĞÏìÓ¦²Ù×÷
2398   8                                                              
2399   8                                                                      dataTrans_oncePword = datsParam[datsParam[1] - 2]; //±¾µØ¿ÚÁî¸üĞÂ£¬ÓÃÓÚÏÂ´ÎÅĞ¶Ï
2400   8                                                                      frameDataOnceReserve_PASS = 1;
2401   8                                                              }
2402   7                                                              
2403   7                                                              if(frameDataOnceReserve_PASS){ //·ÇÖØ·¢Ö¸Áî£¬ÏìÓ¦²Ù×÷²ÅÉúĞ§
2404   8                                                              
2405   8                                                                      beeps_usrActive(3, 50, 1);
2406   8                                                                      
2407   8                                                                      /*Ê±Ğ§²Ù×÷½âÎö*/                
2408   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat){ //¿ª¹Ø×´Ì¬²Ù×÷£¬ĞèÒªÊ±Ğ§
2409   9                                                                              
2410   9      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                                                                                      if(status_Relay != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){
                                                                                      
                                                                                              swCommand_fromUsr.objRelay = datsParam[21]; //Õû×Ö½Ú±íÊ¾ÁÁ¶È
                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                      
                                                                                              EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
                                                                                              devActionPush_IF.push_IF = 0; //ÍÆËÍÊ§ÄÜ£¬²»ÊÇ¶àÎ»¿ª¹Ø£¬²»ÍÆËÍ
               #if(DEBUG_LOGOUT_EN == 1)
                                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                                      
                                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay, (int
             -)datsParam[21]);
                                                                                                      PrintString1_logOut(log_buf);
                                                                                              }                       
               #endif 
                                                                                      }
                                                                                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
                                                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
                                                                                      
                                                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                                              (swCommand_fromUsr.objRelay == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKe
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 42  

             -epOpen):(heater_ActParam.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                                                                                      }
                                                                                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                                                                      swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus; //ÏàÍ¬³¡¾°
             -°´¼ü¿É·´¸´²Ù×÷
                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                                                      
              #else
2441   9                                                                              if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2442  10                                                                              
2443  10                                                                                      swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2444  10                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
2445  10                                                                                      
2446  10                                                                                      if((SWITCH_TYPE == SWITCH_TYPE_SWBIT1) || //¶àÎ»¿ª¹Ø²Å½øĞĞÁ¢ÂíÍÆËÍ
2447  10                                                                                         (SWITCH_TYPE == SWITCH_TYPE_SWBIT2) ||
2448  10                                                                                         (SWITCH_TYPE == SWITCH_TYPE_SWBIT3)){
2449  11      
2450  11                                                                                                      EACHCTRL_realesFLG |= (status_Relay ^ swCommand_fromUsr.objRelay); //ÓĞĞ§»¥¿Ø´¥·¢
2451  11                                                                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
2452  11                                                                                                 
2453  11                                                                                      }
2454  10                                                                                      else
2455  10                                                                                      if(SWITCH_TYPE == SWITCH_TYPE_CURTAIN)EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢                                                                       
2456  10                                                                              }
2457   9      #endif
2458   9                                                                              
2459   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x07
             -, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }                       
               #endif
2467   9                                                                      }
2468   8                                                                      
2469   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_delaySetOpreat){ //ÑÓÊ±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2470   9                                      
2471   9                                                                              if(dev_dataPointTemp.devData_delayer){ //ÑÓÊ±Ê±¼ä´óÓÚ0¾ÍÊÇ¿ª
2472  10                                                                              
2473  10                                                                                      ifDelay_sw_running_FLAG |= (1 << 1); //ÑÓÊ±±êÖ¾¸üĞÂ£¬Æô¶¯
2474  10                                                                                      delayPeriod_onoff               = dev_dataPointTemp.devData_delayer; //ÑÓÊ±Ê±¼ä
2475  10                                                                                      delayUp_act                             = dev_dataPointTemp.devData_delayUpStatus; //ÑÓÊ±µ½´ïÊ±£¬¿ª¹ØÏìÓ¦×´Ì¬
2476  10                                                                                      delayCnt_onoff                  = 0; //ÑÓÊ±¼ÆÊıÇåÁã
2477  10       #if(DEBUG_LOGOUT_EN == 1)
                                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                                      
                                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                                      sprintf(log_buf, ">>>>>>>>delayPeriod:[%d], delayUpAct:[%02X].\n", (int)delayPeriod_onoff, (int
             -)delayUp_act);
                                                                                                      PrintString1_logOut(log_buf);
                                                                                              }                       
               #endif 
2485  10                                                                                      
2486  10                                                                              }else{
2487  10                                                                              
2488  10                                                                                      ifDelay_sw_running_FLAG &= ~(1 << 0); //ÑÓÊ±±êÖ¾¸üĞÂ
2489  10                                                                                      delayPeriod_onoff               = 0; 
2490  10                                                                                      delayCnt_onoff                  = 0; 
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 43  

2491  10                                                                              }
2492   9                                                                      }
2493   8                                                                      
2494   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devResetOpreat){ //³ö³§ÉèÖÃ¸´Î»¶¯×÷£¬Ğ
             -èÒªÊ±Ğ§
2495   9                                                                              
2496   9                                                                              local_ftyRecover_standbyFLG = 1; //½ÓÊÕµ½»Ö¸´³ö³§¶¯×÷ºó£¬½«»Ö¸´³ö³§ÉèÖÃ¶¯×÷½øĞĞ¾ÍĞ÷Ì¬¼ÇÂ¼£¬µÈ´ıÊ±
             -Ğ§±êÖ¾ÖÃÁãºóÔÙ½øĞĞÊµ¼Ê¶¯×÷                                    
2497   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                      
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>factory recover standBy!.\n");
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }                       
               #endif         
2505   9                                                                      }
2506   8                                                                      
2507   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devLock){ //Éè±¸ËøÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2508   9                                                                      
2509   9                                                                              u8 deviceLock_IF = 0; //²Ù×÷×Ö½Ú»º´æ
2510   9                                                                              
2511   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd devLock coming, lockIf:[%d].\n", (int)dev_dataPointTemp.devSt
             -atus_Reference.statusRef_devLock);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }                       
               #endif 
2519   9                                                                              
2520   9                                                                              if(dev_dataPointTemp.devStatus_Reference.statusRef_devLock){ //Êı¾İ·ÅÔÚ×´Ì¬Àï
2521  10                                                                              
2522  10                                                                                      deviceLock_flag = deviceLock_IF = 1; //ÔËĞĞ»º´æ¸üĞÂ
2523  10                                                                                      
2524  10                                                                              }else{
2525  10                                                                              
2526  10                                                                                      deviceLock_flag = deviceLock_IF = 0; //ÔËĞĞ»º´æ¸üĞÂ
2527  10                                                                              }
2528   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2529   9                                                                      }
2530   8                                                                      
2531   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_timerSetOpreat){ //¶¨Ê±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2532   9                                                                              
2533   9                                                                              u8 loop = 0;
2534   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd timer coming, dataTab1:[%02X-%02X-%02X].\n", (int)dev_dataPoi
             -ntTemp.devData_timer[0],
                                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_timer[1],
                                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_timer[2]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }                       
               #endif 
2544   9                                                                              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //ÔËĞĞ»º´æ¸üĞÂ
2545  10                                                                              
2546  10                                                                                      if(dev_dataPointTemp.devData_timer[loop * 3] == 0x80){  /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±
             -»´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞÔ
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 44  

2547  11                                                                                      
2548  11                                                                                              swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
2549  11                                                                                              dev_dataPointTemp.devData_timer[loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½
             -øĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´ÎÖ´ĞĞÍê±ÏºóÇå³ı
2550  11                                                                                              
2551  11                                                                                      }else{
2552  11                                                                                      
2553  11                                                                                              swTim_oneShoot_FLAG &= ~(1 << loop); //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
2554  11                                                                                      }
2555  10                                                                              }
2556   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) *
             - TIMEER_TABLENGTH); //Ö±½Ó¸üĞÂeepromÊı¾İ
2557   9                                                                              itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2558   9                                                                              timerActionDone_FLG_RESET(); //¶¨Ê±¶ÎÍê³É±êÖ¾Çå¿Õ¸´Î»£¬ÔÊĞíÖØ¸´½øĞĞµ±Ç°Ê±¼ä¶¨Ê±Á¢¼´ÏìÓ¦
2559   9                                                                              
2560   9      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED) //Ç¿ÖÆ¿ª¹ØÀàĞÍÎªºìÍâ×ª·¢Æ÷Ê±£¬ÒòÎª3bit²»×ãÒÔ±íÊ¾ºìÍâÖ¸Áî
             -ĞòºÅ£¬ËùÒÔĞèÒªÊ¹ÓÃÁíÍâÀ©Õ¹µÄ8bytesÀ´½øĞĞÒµÎñ²Ù×÷
                                                                                      
               #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>timer opreatIR cmdNum1 is: %d.\n", (int)dev_dataPointTemp.union_devPar
             -am.infrared_param.irTimeAct_timeUpNum[0]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }       
               #endif 
                                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTypeForceInfrared_timeUpActNum, dev_dataPointTemp.union_devPara
             -m.infrared_param.irTimeAct_timeUpNum, TIMEER_TABLENGTH); //8¶ÎºìÍâ¶¨Ê±ÏìÓ¦²Ù×÷Ö¸ÁîĞòºÅ´æ´¢
              #endif                                                          
2572   9                                                                      }
2573   8                                                                      
2574   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_greenModeSetOpreat){ //ÂÌÉ«Ä£Ê½ÉèÖÃ²Ù×
             -÷£¬ĞèÒªÊ±Ğ§
2575   9                                                                              
2576   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd greenMode coming, timeSet:%d.\n", (int)dev_dataPointTemp.devD
             -ata_greenMode);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }                       
               #endif 
2584   9                      
2585   9                                                                              (dev_dataPointTemp.devData_greenMode)?(ifDelay_sw_running_FLAG |= (1 << 0)):(ifDelay_sw_running_F
             -LAG &= ~(1 << 0)); //¸üĞÂÔËĞĞ»º´æ
2586   9                                                                              delayPeriod_closeLoop = dev_dataPointTemp.devData_greenMode;
2587   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2588   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2589   9                                                                      }
2590   8                                                                      
2591   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_nightModeSetOpreat){ //Ò¹¼äÄ£Ê½ÉèÖÃ²Ù×
             -÷£¬ĞèÒªÊ±Ğ§
2592   9                                                                              
2593   9                                                                              u8 dataTemp[sizeof(timing_Dats) * 2] = {0};
2594   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd nightMode coming with dats:[%02X %02X %02X", (int)dev_dataPoi
             -ntTemp.devData_nightMode[0],
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 45  

                                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[1],
                                                                                                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[2]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                                                                                                                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_dataPointTemp.devData_nightMode[3],
                                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[4],
                                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[5]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }                       
               #endif 
2610   9                                                                              (dev_dataPointTemp.devData_nightMode[0])?(dataTemp[0] |= 0x7f):(dataTemp[0] &= ~0x7f); //È«ÌìÒ¹¼ä
2611   9                                                                              (dev_dataPointTemp.devData_nightMode[1])?(dataTemp[0] |= 0x80):(dataTemp[0] &= ~0x80); //Ê±¶ÎÒ¹¼ä
2612   9                                                                              dataTemp[1] = dev_dataPointTemp.devData_nightMode[2]; //×Ö½ÚÏÂ±ê2 µÍ5Î» Ê±
2613   9                                                                              dataTemp[2] = dev_dataPointTemp.devData_nightMode[3]; //×Ö½ÚÏÂ±ê3 È«8Î» ·Ö
2614   9                                                                              dataTemp[4] = dev_dataPointTemp.devData_nightMode[4]; //×Ö½ÚÏÂ±ê4 µÍ5Î» Ê±
2615   9                                                                              dataTemp[5] = dev_dataPointTemp.devData_nightMode[5]; //×Ö½ÚÏÂ±ê5 È«8Î» ·Ö
2616   9                                                                              
2617   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dataTemp, sizeof(timing_Dats) * 2); //Ö±½Ó¸üĞÂe
             -epromÊı¾İ
2618   9                                                                              itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2619   9                                                                      }
2620   8                                                                      
2621   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_bkLightSetOpreat){ //±³¹âµÆÉèÖÃ²Ù×÷£¬Ğ
             -èÒªÊ±Ğ§
2622   9                                                                              
2623   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd bkLight coming, on-Isrt:%02d, off-Isrt:%02d.\n", (int)dev_dat
             -aPointTemp.devData_bkLight[0], (int)dev_dataPointTemp.devData_bkLight[1]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }                       
               #endif 
2631   9                                                                      
2632   9                                                                              memcpy(&devBackgroundLight_param, dev_dataPointTemp.devData_bkLight, sizeof(bkLightColorInsert_pa
             -ramAttr)); //»º´æ¸üĞÂ
2633   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, (u8*)&devBackgroundLight_param, sizeof(bkLightCo
             -lorInsert_paramAttr)); //±¾µØ´æ´¢¸üĞÂ
2634   9                                                                      }
2635   8                                                                      
2636   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_horsingLight){ //ÅÜÂíµÆÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2637   9                                                                      
2638   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd horsingLight coming, opreatData:%02X.\n", (int)dev_dataPointT
             -emp.devStatus_Reference.statusRef_horsingLight);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }       
               #endif 
2646   9                                                                              
2647   9                                                                              ifHorsingLight_running_FLAG = dev_dataPointTemp.devStatus_Reference.statusRef_horsingLight;
2648   9                                                                              if(ifHorsingLight_running_FLAG)counter_ifTipsFree = 0;
2649   9                                                                              else tips_statusChangeToNormal();
2650   9                                                                      }
2651   8                                                                      
2652   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat){ //¿ª¹ØÎ»»¥¿Ø°
             -ó¶¨²Ù×÷ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 46  

2653   9                                                                      
2654   9                                                                              u8 xdata loop = 0;
2655   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd switchBindSet coming, opreatBitHold:%02X bindData:%02X %02X %
             -02X.\n", (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat,
                                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[0], 
                                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[1], 
                                                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.devData_switchBitBind[2]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }       
               #endif 
2666   9                                                                              
2667   9                                                                              for(loop = 0; loop < 3; loop ++){ //´æ´¢Öµ¼°»º´æÖµ¸üĞÂ
2668  10                                                                              
2669  10                                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat & (1 << loop)
             -){
2670  11                                                                                      
2671  11                                                                                              coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &dev_dataPointTemp.devData_switchBitB
             -ind[loop], 1);
2672  11                                                                                              CTRLEATHER_PORT[loop] = dev_dataPointTemp.devData_switchBitBind[loop];
2673  11                                                                                              
2674  11                                                                                              mutualCtrlSysParam_dataReset(1 << loop); //¶ÔÓ¦»¥¿Ø×éÏà¹ØµØÖ·ÁĞ±íÇåÁã
2675  11                                                                                      }
2676  10                                                                              }
2677   9                                                                              
2678   9                                                                              reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2679   9                                                                      }
2680   8                                                                      
2681   8      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_infrareOpreat){ //ºìÍâ×ª·¢Æ÷²Ù×÷£¬ĞèÒª
             -Ê±Ğ§
               #if(DEBUG_LOGOUT_EN == 1)                                                              
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd infrareOpreat coming, optCmd:%02X, insertNum:%d .\n", (int)de
             -v_dataPointTemp.union_devParam.infrared_param.opreatAct,
                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.union_devParam.infrared_param.opreatInsert);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }
               #endif                                                         
                                                                                      if(local_infraredOpreat_ReserveNum != dev_dataPointTemp.union_devParam.infrared_param.currentOpre
             -atReserveNum){ //²Ù×÷¿ÉÓÃÅĞ¶Ï
                                                                                      
                                                                                              local_infraredOpreat_ReserveNum = dev_dataPointTemp.union_devParam.infrared_param.currentOpreatR
             -eserveNum; //ºìÍâ²Ù×÷¿ÉÓÃ¿ÚÁîÖµ¸üĞÂ
                                                                                              
                                                                                              infraredOpreatAct_Stop(); //ÖĞ¶ÏºìÍâµ±Ç°²Ù×÷
                                                                                              
                                                                                              switch(dev_dataPointTemp.union_devParam.infrared_param.opreatAct){ //ºìÍâ²Ù×÷Ö¸Áî½âÎö
                                                                                              
                                                                                                      case IR_OPREATCMD_CONTROL:{ //¿ØÖÆ
                                                                                                      
                                                                                                              infraredOpreatAct_remoteControlStart(dev_dataPointTemp.union_devParam.infrared_param.opreatIns
             -ert);
                                                                                                      
                                                                                                      }break;
                                                                                                      
                                                                                                      case IR_OPREATCMD_LEARNNING:{ //Ñ§Ï°
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 47  

                                                                                                      
                                                                                                              infraredOpreatAct_learnningStart(dev_dataPointTemp.union_devParam.infrared_param.opreatInsert)
             -;
                                                                                                      
                                                                                                      }break;
                                                                                                      
                                                                                                      default:{}break;
                                                                                              }
                                                                                      }
                                                                              }
                                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_scenarioSwOpreat){ //³¡¾°¿ª¹ØÉèÖÃ²Ù×÷£
             -¬×¢²á»ò×¢Ïú³¡¾°
                                                                                      
                                                                                      u8 loop = 0;
                                                                                                                                              
                                                                                      for(loop = 0; loop < 3; loop ++){
                                                                                              
                                                                                              if(dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioKeyBind[loop]){ //·ÇÁã²ÅÊÇÓĞĞ§²Ù×÷£
             -¬·ñÔò¶ÔÓ¦¼üÎ»°ó¶¨³¡¾°ºÅ½ûÖ¹¸ü¸Ä
                                                                                              
                                                                                                      switch(dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioOpreatCmd){
                                                                                                      
                                                                                                              case DATATRANS_KEEPACESS_SCENARIOSW_SONSCOMMAND_SCENARIOreg:{ //¼üÎ»°ó¶¨³¡¾°ºÅ×¢²á
                                                                                                              
                                                                                                                      scenario_ActParam.scenarioNum_record[loop] = dev_dataPointTemp.union_devParam.scenarioSw_para
             -m.scenarioKeyBind[loop];
                                                                                                              
                                                                                                              }break;
                                                                                                              
                                                                                                              case DATATRANS_KEEPACESS_SCENARIOSW_SONSCOMMAND_SCENARIOdel:{ //¼üÎ»°ó¶¨³¡¾°ºÅ×¢Ïú
                                                                                                              
                                                                                                                      scenario_ActParam.scenarioNum_record[loop] = 0;
                                                                                                              
                                                                                                              }break;
                                                                                                              
                                                                                                              default:{}break;
                                                                                                      }
                                                                                                      
                                                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTypeForceScenario_scencarioNumKeyBind, scenario_ActParam.scen
             -arioNum_record, 3); //µôµç´æ´¢¸üĞÂ
                                                                                              }
                                                                                      }
                                                                                      
               #if(DEBUG_LOGOUT_EN == 1)                                                              
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd scenarioSwOpreat coming, optCmd:%02X, current kNum: [%d, %d, 
             -%d]\n", (int)dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioOpreatCmd,
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[0],
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[1],
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[2]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }
               #endif 
                                                                                      
                                                                              }
              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 48  

              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)                                                               
              #else
2766   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_curtainOpPeriodSetOpreat){ //´°Á±¹ìµÀÖ
             -ÜÆÚÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2767   9                                                                      
2768   9       #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd curtainOrbitalSet coming, valSet:%d .\n", (int)dev_dataPointT
             -emp.union_devParam.curtain_param.orbital_Period);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }       
               #endif 
2776   9                                                                              //»º´æÊ±¼ä¼°´æ´¢Êı¾İ¸üĞÂ
2777   9                                                                              curtainAct_Param.act_period = dev_dataPointTemp.union_devParam.curtain_param.orbital_Period;
2778   9                                                                              if(curtainAct_Param.act_period == 0xff)curtainAct_Param.act_period = CURTAIN_ORBITAL_PERIOD_INITT
             -IME;
2779   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_curtainOrbitalPeriod, &(curtainAct_Param.act_period), 1);
2780   9                                                                              
2781   9                                                                              //Ã¿´ÎÉèÖÃ¹ìµÀÊ±¼äÊ±£¬¶¼½øĞĞÒ»´ÎÈ«¹Ø½ÃÕı²Ù×÷
2782   9                                                                              swCommand_fromUsr.objRelay = 1; //¹Ø²Ù×÷
2783   9                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2784   9      //                                                                      curtainAct_Param.act_counter = curtainAct_Param.act_period; //¹ìµÀÎ»ÖÃ¼ÆÊ±ÖµÖØĞÂ¸³ÖµĞ£×¼  --ĞèÒ
             -ªµÈ´ıÊµ¼Êµç»ú×ª¶¯£¬°Ñ´°Á±¹éÎ»£¬ËùÒÔ²»ÄÜÖ±½Ó½øĞĞÖµ¸üĞÂ
2785   9                                                                      }
2786   8      #endif
2787   8                                                              }
2788   7                                                      
2789   7                                                      }else{
2790   7                                                      
2791   7                                                              memset(&dev_agingCmd_rcvPassive, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2792   7                                                              
2793   7                                                              if(local_ftyRecover_standbyFLG){ //µ±Ê±Ğ§±êÖ¾ÖÃÁãºó²ÅÖ´ĞĞ»Ö¸´³ö³§¶¯×÷£¬·ñÔòÉÏÎ»»ú»áÒ»Ö±ÍùÏÂ·¢¸´Î»
2794   8                                                                      
2795   8      #if(DEBUG_LOGOUT_EN == 1)
                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                      
                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                      sprintf(log_buf, ">>>>>>>>factory recover doing now!.\n");
                                                                                      PrintString1_logOut(log_buf);
                                                                              }                       
              #endif  
2803   8                                                                      local_ftyRecover_standbyFLG = 0;
2804   8                                                                      Factory_recover();
2805   8                                                              }
2806   7                                                      }
2807   6                                                      
2808   6                                              }break;
2809   5                                                      
2810   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
2811   6                                                      
2812   6                                                      if(memcmp(&dev_agingCmd_sndInitative, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_a
             -gingDataSet_bitHold))){ //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬Ê±Ğ§Õ¼Î»Óë±¾µØ²»Ò»ÖÂ Ñ¯·ÃÃüÁî¾ÍÒ»Ö±ÎªÖ÷¶¯
2813   7                                                      
2814   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
2815   7                                                              
2816   7                                                      }else{
2817   7                                                      
2818   7                                                              heartBeatPeriod = PERIOD_HEARTBEAT_ASR; //ÇĞ»»Îª±»¶¯Ñ¯·Ã£¬ĞÄÌøÖÜÆÚ¸ÄÎª±»¶¯
2819   7                                                              memset(&dev_agingCmd_sndInitative, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 49  

2820   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR;
2821   7                                                      }
2822   6                                                      
2823   6                                              }break;
2824   5                                                      
2825   5                                              default:{}break;
2826   5                                      }
2827   4                              }
2828   3                              
2829   3                      }break;
2830   2      
2831   2      #endif /*ºêÅĞÎ²*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2832   2                      
2833   2                      default:{}break;
2834   2              }
2835   1      }
2836          
2837          /*»Ö¸´³ö³§Ô¤ÖÃ¶¯×÷*/
2838          void fun_factoryRecoverOpreat(void){
2839   1      
2840   1              devStatus_switch.statusChange_standBy = status_devFactoryRecoverStandBy;
2841   1              devStatus_switch.statusChange_IF = 1;
2842   1              
2843   1              factoryRecover_HoldTimeCount = 6;
2844   1              factoryRecover_standBy_FLG = 1;
2845   1              tips_statusChangeToFactoryRecover(6);
2846   1      }
2847          
2848          /*zigbeeÖ÷Ïß³Ì*///¶¯×÷×èÈû´óÓÚ200msµÄº¯Êı¶¼ÉèÎª×´Ì¬»úÔËĞĞ£¬ÆäËüĞ¡ÓÚ200msº¯Êı£¬×èÈûÎ¬³Ö£¬·ñÔò×´Ì¬»ú¸´ÔÓ¶È¼Ó
             -´ó
2849          void thread_dataTrans(void){
2850   1              
2851   1              u8 code cmd_datsComing[2] = {0x44, 0x81}; //Ô¶¶ËÊı¾İÖ¡Ö¸Áî
2852   1              u8 code cmd_nwkOpenNote[2] = {0x45, 0xCB}; //ÍøÂç¿ª·ÅÍ¨Öª
2853   1      
2854   1      #define dataLen_zigbDatsTrans (128 + 25)
2855   1              u8 xdata paramTX_temp[dataLen_zigbDatsTrans] = {0};
2856   1              u8 xdata paramRX_temp[dataLen_zigbDatsTrans] = {0};
2857   1              
2858   1              static bit heartBeat_cmdFLG = 0; //ĞÄÌøÆæÅ¼±êÖ¾
2859   1              
2860   1              /*zigbÖ÷Ïß³ÌÏµÍ³Ê±¼ä¸üĞÂ*/
2861   1              if(!sysTimeReales_counter){ 
2862   2              
2863   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES;
2864   2                      getSystemTime_reales();
2865   2              }
2866   1              
2867   1              /*zigbÖ÷Ïß³Ì×´Ì¬»ú£º¸ù¾İ×´Ì¬±êÖ¾ÔËĞĞ*/
2868   1              switch(devRunning_Status){
2869   2              
2870   2                      case status_passiveDataRcv:{
2871   3                              
2872   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
2873   4                              
2874   4                                      devStatus_switch.statusChange_IF = 0;
2875   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
2876   4                                      
2877   4                                      break;
2878   4                              }
2879   3                              
2880   3                              {/*³õÊ¼»¯Ê±¼ä¸³Öµ*///½ö¿ª»ú¸³ÖµÒ»´Î£¬²»×öÊ±Çøµ÷Õû
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 50  

2881   4                                      static bit FLG_timeSetInit = 1;
2882   4                                      
2883   4                                      if(FLG_timeSetInit){
2884   5                                      
2885   5                                              FLG_timeSetInit = 0;
2886   5                                              zigB_sysTimeSet(1533810700UL - 946713600UL, 0); //zigbeeÊ±¼ä´Á´Óunix¼ÍÔª946713600<2000/01/01 00:00:00
             ->¿ªÊ¼¼ÆËã
2887   5                                              
2888   5                                              dev_currentPanid = ZigB_getPanIDCurrent(); //¿ª»úºó»ñÈ¡Ò»´ÎPINID
2889   5      #if(DEBUG_LOGOUT_EN == 1)
                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                              
                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                              sprintf(log_buf, "currentPain get is :%d.\n", (int)dev_currentPanid);
                                                              PrintString1_logOut(log_buf);
                                                      }       
              #endif
2897   5                                      }
2898   4                              }
2899   3                              
2900   3                              {/*¼´Ê±¸üĞÂtips ¸üĞÂ²¹³¥*///·ÀÖ¹tips¸üĞÂÒÅÂ©
2901   4                              
2902   4                                      if(devTips_status == status_tipsNwkFind)tips_statusChangeToNormal(); //tips¸´Ô­(ÍøÂçÒÑ¼ÓÈë£¬»Ö¸´Õı³£ti
             -ps)
2903   4                                      
2904   4                                      if(!timeCounter_coordinatorLost_detecting){ //±»¶¯¶ªÊ§Íø¹Ø -ÓëÍø¹ØÊ§Áª
2905   5                                      
2906   5                                              devTips_nwkZigb = nwkZigb_outLine; //Íø¹Ø¶ªÊ§tipsÓëµôÏßtipsÅĞÎªÒ»Àà
2907   5                                              if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //´¥ÃşÊÍ·Å¼ÆÊ±Ê§ÄÜ£¬ÍøÂçÍ¨ĞÅÒì³££¬²»ÈÃÅÜÅÜÂíµÆ
2908   5                                              
2909   5                                              if(timeCounter_coordinatorLost_keeping > COORDINATOR_LOST_PERIOD_CONFIRM){ //Íø¹ØÊ§ÁªÊ±¼ä¹ı³¤£¬´¥·¢ÖØ
             -Á¬
2910   6                                              
2911   6                                                      timeCounter_coordinatorLost_keeping = 0; //Íø¹Ø¶ªÊ§ºóÀÛ¼Æ¼ÆÊ±±äÁ¿ÖØÖÃ
2912   6                                                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //¼ì²âÍø¹Ø¶ªÊ§¼ÆÊ±±äÁ¿ÖØÖÃ
2913   6                                                      
2914   6      #if(DEBUG_LOGOUT_EN == 1)                               
                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                      PrintString1_logOut(">>>coordinator lost too long, zigbee reconnect right now.\n");
                                                              }
              #endif  
2919   6                                                      devRunning_Status = status_nwkReconnect;
2920   6                                                      return; //Á¢¼´Ö´ĞĞ
2921   6                                              }
2922   5                                              
2923   5                                      }else{
2924   5                                      
2925   5                                              timeCounter_coordinatorLost_keeping = 0; //Íø¹Ø¶ªÊ§Ê±¼ä¼ÆÊ±±äÁ¿¸´Î»
2926   5                                      }
2927   4                              }
2928   3                              
2929   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ³ÖĞø·¢ËÍ»úÖÆÖ´ĞĞ£¨ÎŞÊÓ»ØÂë£©-------------------------
             ----//Ö÷ÒªÓÃÓÚÕë¶Ô»¥¿ØÒµÎñ
2930   3                              {
2931   4                                      
2932   4                                      u16 code DTREQ_EXATTR_ONCEPERIOD = 200; //µ¥´Î·¢ËÍ¼ä¸ôÊ±¼ä¶¨Òå µ¥Î»£ºms
2933   4                                      u16 idata constandLoop_reserve = datsSend_requestEx[0].constant_Loop + datsSend_requestEx[1].constant_
             -Loop + datsSend_requestEx[2].constant_Loop;
2934   4                                      
2935   4                                      if(constandLoop_reserve){
2936   5                                      
2937   5                                              if(!dtReqEx_counter){
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 51  

2938   6                                              
2939   6                                                      u16 idata current_Insert = constandLoop_reserve % 3; //´ÎĞòÂÖÁ÷
2940   6                                                      
2941   6                                                      dnCounter_mutualAddrPeriodPingOut = 10;
2942   6                                                      
2943   6      #if(DEBUG_LOGOUT_EN == 1)
                                                              if((constandLoop_reserve % 3) == 0){ //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä(3¸öloop´òÓ¡Ò»´Î
             -)
                                                                      
                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                      sprintf(log_buf, ">>>dtCtrlEach loopParam:%d %d %d, data:%d.\n", (int)datsSend_requestEx[0].constan
             -t_Loop,
                                                                                                                                                                                                       (int)datsSend_requestEx[1].constant_Loop,
                                                                                                                                                                                                       (int)datsSend_requestEx[2].constant_Loop,
                                                                                                                                                                                                       (int)datsSend_requestEx[0].dats[0]);
                                                                      PrintString1_logOut(log_buf);
                                                              }       
              #endif
2954   6                                                      
2955   6                                                      while(!datsSend_requestEx[current_Insert].constant_Loop){ //´ÎĞòÂÖÁ÷Ç°ÌáÏÂ£¬É¸Ñ¡¿ÉÓÃ
2956   7                                                      
2957   7                                                              current_Insert ++;
2958   7                                                              current_Insert %= 3;
2959   7                                                      }
2960   6                                                      
2961   6                                                      if(datsSend_requestEx[current_Insert].nwkAddr_loopInsert)datsSend_requestEx[current_Insert].nwkAddr_
             -loopInsert --;
2962   6                                                      else{
2963   7                                                      
2964   7                                                              datsSend_requestEx[current_Insert].nwkAddr_loopInsert = MUTUALCTRL_DEV_NUM_MAX - 1;
2965   7                                                              
2966   7                                                              datsSend_requestEx[current_Insert].constant_Loop --;
2967   7                                                      }
2968   6                                                      
2969   6                                                      if(datsSend_requestEx[current_Insert].nwkAddr[datsSend_requestEx[current_Insert].nwkAddr_loopInsert]
             - != 0xffff){
2970   7                                                      
2971   7                                                              datsSend_requestEx[current_Insert].dats[1] = datsSend_requestEx[current_Insert].constant_Loop; //Êµ
             -Ê±¸üĞÂ³ÖĞø·¢ËÍÊ£Óà´ÎÊıÖµ
2972   7                                                              datsSend_requestEx[current_Insert].dats[2] = 0; //
2973   7                                                              dataSendRemote_straightforward(datsSend_requestEx[current_Insert].nwkAddr[datsSend_requestEx[curren
             -t_Insert].nwkAddr_loopInsert], 
2974   7                                                                                                                         datsSend_requestEx[current_Insert].portPoint, 
2975   7                                                                                                                         datsSend_requestEx[current_Insert].dats, 
2976   7                                                                                                                         datsSend_requestEx[current_Insert].datsLen); 
2977   7                                                      }
2978   6                                                      
2979   6                                                      dtReqEx_counter = DTREQ_EXATTR_ONCEPERIOD;
2980   6                                              }
2981   5                                      }
2982   4                              }
2983   3                              
2984   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º»¥¿Ø×éÄÚµØÖ·ÖÜÆÚÏòÍâ¹ã²¥Í¨Öª£¨Õë¶Ô×ÔÉí¿ÉÓÃ»¥¿Ø×é£©-------
             --//Ö÷ÒªÓÃÓÚÕë¶Ô»¥¿ØÒµÎñ
2985   3                              {
2986   4                                      static u8 xdata devMutualPararmNoticeParam_noticeLoop = clusterNum_usr;                         
2987   4                                      u16 code MUTADDRSPINGLOOPPERIOD = 500;
2988   4      #define mutAddrsPingDatsReq_len 3
2989   4                                      struct stt_mutAddrsPingDatsReq{
2990   4                                      
2991   4                                              u8 dats[mutAddrsPingDatsReq_len];
2992   4                                              
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 52  

2993   4                                              u8      portPoint;
2994   4                                              u16     nwkAddr;
2995   4                                              
2996   4                                      }devMutAddrsPingDatsReq = {0};
2997   4                                      
2998   4                                      if(cycleFlg_mutualAddrPeriodPingOut){
2999   5                                              
3000   5      #if(DEBUG_LOGOUT_EN == 1)
                                                      {
                                                              static idata bit log_trigFlg = 0;
                                                              
                                                              if(log_trigFlg != cycleFlg_mutualAddrPeriodPingOut){
                                                              
                                                                      log_trigFlg = cycleFlg_mutualAddrPeriodPingOut;
                                                                      
                                                                      if(log_trigFlg)PrintString1_logOut("devMutualCtrlAddr notice trig.\n");
                                                              }
                                                      }
              #endif                                  
3012   5                                      
3013   5                                              if(!dnCounter_mutAddrsPingLoopPeriod){ //µ¥×éµ¥ÂÖ
3014   6                                              
3015   6                                                      dnCounter_mutAddrsPingLoopPeriod = MUTADDRSPINGLOOPPERIOD;
3016   6                                                      
3017   6                                                      if(devMutualPararmNoticeParam_noticeLoop --){
3018   7                                                              
3019   7                                                              memset(&devMutAddrsPingDatsReq, 0, sizeof(struct stt_mutAddrsPingDatsReq));
3020   7                                                              
3021   7                                                              if(CTRLEATHER_PORT[devMutualPararmNoticeParam_noticeLoop] > CTRLEATHER_PORT_NUMSTART &&
3022   7                                                                 CTRLEATHER_PORT[devMutualPararmNoticeParam_noticeLoop] < CTRLEATHER_PORT_NUMTAIL){
3023   8                                                                 
3024   8                                                                      devMutAddrsPingDatsReq.portPoint = CTRLEATHER_PORT[devMutualPararmNoticeParam_noticeLoop];
3025   8                                                                      devMutAddrsPingDatsReq.dats[2] = MUTUALCMD_MUTADDRS_NOTICE_OUT;
3026   8                                                                      dataSendRemote_straightforward(0xffff, 
3027   8                                                                                                                                 devMutAddrsPingDatsReq.portPoint,
3028   8                                                                                                                                 devMutAddrsPingDatsReq.dats,
3029   8                                                                                                                                 mutAddrsPingDatsReq_len);
3030   8                                                              }
3031   7                                                      
3032   7                                                      }else{
3033   7                                                      
3034   7                                                              devMutualPararmNoticeParam_noticeLoop = clusterNum_usr;
3035   7                                                              
3036   7                                                              cycleFlg_mutualAddrPeriodPingOut = 0;
3037   7                                                      }
3038   6                                              }
3039   5                                      }
3040   4                              }
3041   3                              
3042   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º³¡¾°·´Ïò´¥·¢¿ØÖÆ ¼ì²âÊÇ·ñĞèÒª·¢ËÍÊı¾İ--------------------
             ----//Ö÷ÒªÓÃÓÚÕë¶Ô³¡¾°¿ª¹ØÒµÎñ
3043   3      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                      if(scenario_ActParam.scenarioDataSend_FLG){
                                      
                                              frame_zigbScenarioReverseCtrl xdata scenarioData_temp = {0}; //´ı·¢³¡¾°Êı¾İ»º´æ
                                              
                                              scenario_ActParam.scenarioDataSend_FLG = 0;
                                              
                                              scenarioData_temp.command = zigbScenarioReverseCtrlCMD_scenarioCtrl; //×ÓÃüÁîÌî×°
                                              switch(scenario_ActParam.scenarioKey_currentTrig){ //³¡¾°ºÅÌî×°
                                              
                                                      case scenarioKey_current_S1:{
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 53  

                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[0];
                                                      
                                                      }break;
                                                      
                                                      case scenarioKey_current_S2:{
                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[1];
                                                      
                                                      }break;
                                                      
                                                      case scenarioKey_current_S3:{
                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[2];
                                                      
                                                      }break;
                                                              
                                                      default:{
                                                      
                                                              scenarioData_temp.scenario_Num = 0;
                                                              
                                                      }break;
                                              }
                                              (scenarioData_temp.dataOnceReserve_pWord != systemTime_current.time_Second)?\
                                                      (scenarioData_temp.dataOnceReserve_pWord = systemTime_current.time_Second):\
                                                      (scenarioData_temp.dataOnceReserve_pWord = systemTime_current.time_Second + 1); //Êı¾İ¿ÚÁîÌî×° -ÒÔµ±Ç
             -°Ê±¼äÃë×÷ÎªËæ»úÊı¿ÚÁî
                                              
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLSECENARIO; //³¡¾°Êı¾İ×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, &scenarioData_temp, sizeof(frame_zigbScenarioReverseCtrl)); //
             -Êı¾İ½á¹¹»Ø¹éÎªÖ¸Õë
                                              datsSend_request.datsTrans.datsLen = sizeof(frame_zigbScenarioReverseCtrl);
                                              datsRcv_respond.datsTrans.datsLen = 0;
                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 4; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆÚ
             -ÄÚ ·¢ 4´Î
                                              devRunning_Status = status_dataTransRequestDatsSend;
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif
3094   3              
3095   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºĞÄÌø-----------------------------------------------------
             ----//
3096   3                              if(heartBeatCycle_FLG && !heartBeatHang_timeCnt){ //ĞÄÌø´¥·¢±êÖ¾ ¼° ¹ÒÆğÊ±¼ä ÅĞ¶Ï
3097   4                                      
3098   4                                      u8 xdata frame_dataLen = 0; //´ı·¢ËÍÊı¾İÖ¡³¤¶È
3099   4                              
3100   4                                      heartBeatCycle_FLG = 0;
3101   4                                      heartBeat_cmdFLG = !heartBeat_cmdFLG;
3102   4                                      
3103   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
3104   4                                      
3105   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              frame_dataLen = 14;
                                              paramTX_temp[0] = ZIGB_FRAMEHEAD_HEARTBEAT;
                                              paramTX_temp[1] = frame_dataLen ;
                                              (heartBeat_cmdFLG)?(paramTX_temp[2] = FRAME_HEARTBEAT_cmdOdd):(paramTX_temp[2] = FRAME_HEARTBEAT_cmdEv
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 54  

             -en);
                                              memcpy(&paramTX_temp[4], &MAC_ID[1], 5);
                                              
                                              if(heartBeat_cmdFLG){ //Ææ°ü
                                              
                                                      
                                              
                                              }else{ //Å¼°ü
                                              
                                                      
                                              }
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS)  //ĞÂÖÜÆÚÑ¯·Ã»úÖÆÑ¯·ÃÖÜÆÚ
3122   4                                      
3123   4                                      //×´Ì¬Ìî×°-ÊµÊ±Öµ
3124   4      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                      
                                              //Õû×Ö½ÚÌîÖµ
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = (status_Relay & 0x07) >> 0;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_reserve              = (status_Relay & 0x18) >> 3;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush               = (status_Relay & 0xE0) >> 5;
                                              
              #elif(SWITCH_TYPE_FORCEDEF == 0) //¶àÎ»¿ª¹Ø¸ßÎ»ÍÆËÍÇø·Ö
3132   4                                      
3133   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İµã ¿ª¹Ø
             -×´Ì¬¸üĞÂ
3134   4                                      if(devActionPush_IF.push_IF){ //ÍÆËÍÊı¾İ¼ÓÔØ
3135   5                                      
3136   5                                              devActionPush_IF.push_IF = 0;
3137   5                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush = 0;
3138   5                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush |= devActionPush_IF.dats_Push;
3139   5                                      }
3140   4                                                              
3141   4      #else //ÆäËû¿ª¹ØÃ»ÓĞ¸ßÎ»ÍÆËÍÇø·Ö
                                              //Ö»×°×´Ì¬£¬±¾Éí¾ÍÊÇÍÆËÍ£¬ÆäËüÖµ¸ø0
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_reserve              = 0;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush               = 0;
                                              
              #endif
3148   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_timer                = ifTim_sw_running_FLAG; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İ
             -µã ¶¨Ê±Æ÷×´Ì¬¸üĞÂ
3149   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_devLock              = deviceLock_flag;
3150   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_delay                = (ifDelay_sw_running_FLAG & 0x02) >> 1;
3151   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_greenMode    = (ifDelay_sw_running_FLAG & 0x01) >> 0;
3152   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_nightMode    = ifNightMode_sw_running_FLAG;
3153   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_horsingLight = ifHorsingLight_running_FLAG;
3154   4                                      
3155   4                                      //ÊôĞÔÖµÌî×°-ÊµÊ±Öµ
3156   4                                      {
3157   5                                              u8 xdata loop = 0;
3158   5                                              EEPROM_read_n(EEPROM_ADDR_swTimeTab, &dev_currentDataPoint.devData_timer, sizeof(timing_Dats) * TIMEE
             -R_TABLENGTH); //¶¨Ê±Êı¾İ
3159   5                                              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //Ò»´ÎĞÔÖÜÕ¼Î»»Ö¸´
3160   6                                              
3161   6                                                      if(swTim_oneShoot_FLAG & (1 << loop))dev_currentDataPoint.devData_timer[3 * loop] = 0x80; //Õë¶ÔÒ»´Î
             -ĞÔ¶¨Ê±»ØÂëÖÜÕ¼Î»Çå¿Õ
3162   6                                              }
3163   5                                      }
3164   4                                      dev_currentDataPoint.devData_delayer            = delayPeriod_onoff - (delayCnt_onoff / 60); //ÑÓÊ±Êı¾İ
3165   4                                      dev_currentDataPoint.devData_delayUpStatus      = delayUp_act; //ÑÓÊ±ÏìÓ¦×´Ì¬Êı¾İ
3166   4                                      dev_currentDataPoint.devData_greenMode          = delayPeriod_closeLoop; //ÂÌÉ«Ä£Ê½×´Ì¬Êı¾İ
3167   4                                      { //Ò¹¼äÄ£Ê½Êı¾İÌØÊâ×ª»»
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 55  

3168   5                                              
3169   5                                              timing_Dats xdata nightDatsTemp_CalibrateTab[2] = {0};
3170   5                                              
3171   5                                              datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
3172   5                                              ((nightDatsTemp_CalibrateTab[0].Week_Num & 0x7F) == 0x7F)?(dev_currentDataPoint.devData_nightMode[0] 
             -= 1):(dev_currentDataPoint.devData_nightMode[0] = 0);
3173   5                                              (nightDatsTemp_CalibrateTab[0].if_Timing)?(dev_currentDataPoint.devData_nightMode[1] = 1):(dev_curren
             -tDataPoint.devData_nightMode[1] = 0);
3174   5                                              dev_currentDataPoint.devData_nightMode[2] = nightDatsTemp_CalibrateTab[0].Hour;
3175   5                                              dev_currentDataPoint.devData_nightMode[3] = nightDatsTemp_CalibrateTab[0].Minute;
3176   5                                              dev_currentDataPoint.devData_nightMode[4] = nightDatsTemp_CalibrateTab[1].Hour;
3177   5                                              dev_currentDataPoint.devData_nightMode[5] = nightDatsTemp_CalibrateTab[1].Minute;
3178   5                                              
3179   5      #if(DEBUG_LOGOUT_EN == 1)
              //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<Ò¹¼äÄ£Ê½ÂãÊı¾İ´òÓ¡
              //                                              
              //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                              sprintf(log_buf, ">>>nightMode dats upload: [%02X %02X %02X",   (int)dev_currentDataPoint.devData_n
             -ightMode[0],
              //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[1],
              //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[2]);
              //                                              PrintString1_logOut(log_buf);
              //                                                                                                                                                                              
              //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                              sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_currentDataPoint.devData_nightMode[3],
              //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[4],
              //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[5]);
              //                                              PrintString1_logOut(log_buf);
              //                                      }       
              
              //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<¶¨Ê±ÔËĞĞ±êÖ¾´òÓ¡
              //                                      
              //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                              sprintf(log_buf, "ifTim_sw_running_FLAG:%d\n",  (int)ifTim_sw_running_FLAG);
              //                                              PrintString1_logOut(log_buf);
              //                                      }
              #endif  
3202   5                                      }
3203   4                                      memcpy(&dev_currentDataPoint.devData_bkLight, &devBackgroundLight_param, 2); //±³¾°µÆÊı¾İÌî×°
3204   4                                      dev_currentDataPoint.devData_devReset = 0;
3205   4                                      EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther, dev_currentDataPoint.devData_switchBitBind, clusterNum_us
             -r); //»¥¿Ø°ó¶¨Êı¾İ
3206   4                                      { //¸ù¾İÉè±¸ÀàĞÍ£¬·ÖÀàÌî×°Êı¾İ
3207   5                                      
3208   5                                              switch(SWITCH_TYPE){
3209   6                                              
3210   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                                                              case SWITCH_TYPE_SOCKETS:{
                                                                      
                                                                      float code decimal_prtCoefficient = 10000.0F; //Ğ¡ÊıÖµ¼ÆËãÏµÊı  --10000±¶
                                                              
                                                                      { //µçÁ¿Ìî×°
                                                                      u16 integer_prt = (u16)socket_eleDetParam.ele_Consum & 0x00FF;  //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.ele_Consum - (float)integer_prt) * decimal_prtCoefficie
             -nt);        //µçÁ¿Ğ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[0]      = (u8)((integer_prt & 0x00FF) >>
             - 0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[1]      = (u8)((decimal_prt & 0xFF00) >>
             - 8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[2]      = (u8)((decimal_prt & 0x00FF) >>
             - 0);        //Ğ¡Êı²¿·ÖÌî×°
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 56  

                                                                      }
                                                                      
                                                                      { //¹¦ÂÊÌî×°
                                                                      u16 integer_prt = (u16)socket_eleDetParam.eleParam_power & 0xFFFF;      //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.eleParam_power - (float)integer_prt) * decimal_prtCoeff
             -icient);        //µçÁ¿Ğ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[0]       = (u8)((integer_prt & 0xFF00) >> 
             -8);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[1]       = (u8)((integer_prt & 0x00FF) >> 
             -0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[2]       = (u8)((decimal_prt & 0xFF00) >> 
             -8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[3]       = (u8)((decimal_prt & 0x00FF) >> 
             -0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_corTime = systemTime_current.time_Hour; //¶ÔÓ
             -¦Ğ¡Ê±Çø¼äÌî×°
                                      
                                                                      { //DebugÊı¾İÌî×°-powerFreq<´Ë²¿·ÖÊı¾İµ÷ÊÔºóÈ¥³ı>
                                                                      u16 integer_prt = (u16)socket_eleDetParam.eleParamFun_powerFreqVal & 0xFFFF;    //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.eleParamFun_powerFreqVal - (float)integer_prt) * decima
             -l_prtCoefficient);    //powerFreqĞ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[0] = (u8)((integer_prt & 0xFF0
             -0) >> 8);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[1] = (u8)((integer_prt & 0x00F
             -F) >> 0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[2] = (u8)((decimal_prt & 0xFF0
             -0) >> 8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[3] = (u8)((decimal_prt & 0x00F
             -F) >> 0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                                                              case SWITCH_TYPE_INFRARED:{
                                                              
                                                                      dev_currentDataPoint.union_devParam.infrared_param.opreatAct                                            = IR_currentOpreatRes;                                  //µ±Ç
             -°ºìÍâ²Ù×÷½á¹ûÌî×° -·Ç0¿ÉÓÃ
                                                                      dev_currentDataPoint.union_devParam.infrared_param.opreatInsert                                         = IR_currentOpreatinsert;                               /
             -/µ±Ç°ºìÍâ²Ù×÷¶ÔÓ¦ĞòºÅÌî×°
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentTemperature_integerPrt        = (u8)(temperatur
             -eCurrent_VAL / 100);  //µ±Ç°ºìÍâ×ª·¢Æ÷ÊÒÄÚÎÂ¶ÈÌî×° -ÕûÊı
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentTemperature_decimalPrt        = (u8)(temperature
             -Current_VAL % 100);   //µ±Ç°ºìÍâ×ª·¢Æ÷ÊÒÄÚÎÂ¶ÈÌî×° -Ğ¡Êı
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentOpreatReserveNum                      = 0;                                                                    //ÉÏĞĞ¿ÚÁ
             -îÔİÌî0
                                                                      EEPROM_read_n(EEPROM_ADDR_swTypeForceInfrared_timeUpActNum, dev_currentDataPoint.union_devParam.inf
             -rared_param.irTimeAct_timeUpNum, TIMEER_TABLENGTH);   //°Ë¶ÎºìÍâ¶¨Ê±ÏìÓ¦Ö¸ÁîĞòºÅÌî×°
                                                                      
              // #if(DEBUG_LOGOUT_EN == 1)
              //                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
              //                                                              
              //                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                                              sprintf(log_buf, "---data upload IR timerUp dataNum1:%d.\n", (int)dev_currentDataPoint.union_dev
             -Param.infrared_param.irTimeAct_timeUpNum[0]);
              //                                                              PrintString1_logOut(log_buf);
              //                                                      }                       
              // #endif       
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 57  

                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                                              case SWITCH_TYPE_SCENARIO:{
                                                              
                                                                      dev_currentDataPoint.union_devParam.scenarioSw_param.scenarioOpreatCmd                          = 0; //³¡¾°²Ù×÷ÏìÓ¦ÃüÁî£¬
             -Ôİ¸ø0
                                                                      memcpy(dev_currentDataPoint.union_devParam.scenarioSw_param.scenarioKeyBind,                     //°´¼ü¶ÔÓ¦°ó¶¨µÄ³¡¾
             -°ºÅ×°Ìî
                                                                                 scenario_ActParam.scenarioNum_record,
                                                                                 3);
                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)                                               
              #else
3283   6                                                      case SWITCH_TYPE_CURTAIN:{
3284   7                                                      
3285   7                                                              dev_currentDataPoint.union_devParam.curtain_param.orbital_Period = curtainAct_Param.act_period;
3286   7                                                      
3287   7                                                      }break;
3288   6      #endif
3289   6                                                      default:{}break;
3290   6                                              }
3291   5                                      }
3292   4                                      
3293   4                                      //Ê±Ğ§²Ù×÷Õ¼Î»Ö¸ÁîÌî×°
3294   4                                      switch(dtModeKeepAcess_currentCmd){
3295   5                                      
3296   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
3297   6                                              
3298   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_rcvPassive, sizeof(stt_agi
             -ngDataSet_bitHold));
3299   6                                              
3300   6                                              }break;
3301   5                                                      
3302   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
3303   6                                              
3304   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_sndInitative, sizeof(stt_a
             -gingDataSet_bitHold));
3305   6                                              
3306   6                                              }break;
3307   5                                                      
3308   5                                              default:{}break;
3309   5                                      }
3310   4                                      
3311   4                                      //Êı¾İÖ¡×ÜÊı¾İÌî×°
3312   4                                      frame_dataLen                                   = 0;
3313   4                                      paramTX_temp[frame_dataLen ++]  = DTMODEKEEPACESS_FRAMEHEAD_ONLINE; //Ö¡Í·
3314   4                                      paramTX_temp[frame_dataLen ++]  = 0;  //Ö¡³¤ÔİÌî0£¬×îºó¸üĞÂ
3315   4                                      memcpy(&paramTX_temp[frame_dataLen], &MAC_ID[1], 5); //MAC , Ç°ÎåÎ»
3316   4                                      frame_dataLen += 6; //¿Õ³ö1Byte MAC
3317   4                                      paramTX_temp[frame_dataLen ++]  = dtModeKeepAcess_currentCmd; //ÃüÁî
3318   4                                      paramTX_temp[frame_dataLen ++]  = SWITCH_TYPE; //¿ª¹ØĞÅÏ¢
3319   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0xFF00) >> 8); //PANIDÌî×°
3320   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0x00FF) >> 0); 
3321   4                                      paramTX_temp[frame_dataLen ++]  = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
3322   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_H; //Ê±Çø_Ê±
3323   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_M; //Ê±Çø_·Ö
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 58  

3324   4                                      memcpy(&paramTX_temp[frame_dataLen], &dev_currentDataPoint, sizeof(stt_devOpreatDataPonit)); //Ö±½ÓÊı¾
             -İÖ¸Õë¶ÔÆë,Êı¾İµãÏòÊı¾İÖ¡´ı·¢»º´æÇ¿í¡
3325   4                                      frame_dataLen += sizeof(stt_devOpreatDataPonit);
3326   4                                      frame_dataLen ++;
3327   4                                      paramTX_temp[1]                                 = frame_dataLen;
3328   4                                      paramTX_temp[frame_dataLen - 1] = frame_Check(&paramTX_temp[1], frame_dataLen - 2); //Ğ£ÑéÂë×îºóËã
3329   4                                      
3330   4      //#if(DEBUG_LOGOUT_EN == 1)
3331   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3332   4      //                      
3333   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3334   4      //                                      sprintf(log_buf, "package_num:[%02d], check_num[%02X].\n", (int)frame_dataLen, (int)paramTX_temp[fr
             -ame_dataLen - 1]);
3335   4      //                                      PrintString1_logOut(log_buf);
3336   4      //                              }                       
3337   4      //#endif        
3338   4                              
3339   4      #endif                          
3340   4                                      datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
3341   4                                      datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
3342   4                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
3343   4                                      memcpy(datsSend_request.datsTrans.dats, paramTX_temp, frame_dataLen );
3344   4                                      datsSend_request.datsTrans.datsLen = frame_dataLen ;
3345   4                                      datsRcv_respond.datsTrans.datsLen = 0;
3346   4                                      devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
3347   4                                      devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 4; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆÚ
             -ÄÚ ·¢ 4´Î
3348   4                                      devRunning_Status = status_dataTransRequestDatsSend;
3349   4                                      
3350   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3351   4                              }
3352   3                              
3353   3                              //------------------------------Ö÷×´Ì¬ÒµÎñ£º±¾µØ¿ª¹ØÊÜ¼¯Èº¿ØÖÆ×´Ì¬Î»ÖÜÆÚĞÔÂÖÑ¯<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>-------
             ---//
3354   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                                      if(!colonyCtrlGet_queryCounter && !colonyCtrlGetHang_timeCnt){ //ÖÜÆÚÑ¯²é ¼° ¹ÒÆğÊ±¼äÅĞ¶Ï
                                      
                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<<<<<<<<<<<<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2...6]       |       frame_data[7]                   |       frame_data[8...10]      |
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾»úMACµØÖ·                     |       ³¡¾°ËµÃ÷(ÔİÎŞËµÃ÷)              |       »¥¿ØËµÃ÷(µ±Ç°×éºÅ)      |               
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              paramTX_temp[0] = ZIGB_SYSCMD_COLONYPARAM_REQPERIOD; //ÃüÁî
                                              paramTX_temp[1] = clusterNum_usr + 5 + 1; //Êı¾İ³¤¶ÈËµÃ÷
                                              memcpy(&paramTX_temp[2], &MAC_ID[1], 5); //MACµØÖ·Ìî×°
                                              paramTX_temp[7] = 0; //³¡¾°ËµÃ÷×°ÔØ(ÎŞËµÃ÷£¬0Ìî³ä)
                                              memcpy(&paramTX_temp[8], CTRLEATHER_PORT, clusterNum_usr); //»¥¿ØËµÃ÷×°ÔØ(ËµÃ÷¶Ë¿ÚºÅ)
                                              
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLSYSZIGB; //zigbÏµÍ³½»»¥×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, paramTX_temp[1] + 2); 
                                              datsSend_request.datsTrans.datsLen = paramTX_temp[1] + 2;
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 59  

                                              datsRcv_respond.datsTrans.datsLen = 0; //²»ĞèÒªÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend;
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
3383   3                              
3384   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İÍÆËÍ-------------------------------------------------
             ---//        
3385   3                              if(devActionPush_IF.push_IF){
3386   4                                      
3387   4                                      const bit dataFromRemote_IF = 1; //Ô¶³ÌÍÆËÍ
3388   4                                      const bit specialCmd_IF = 0; //·ÇÌØÊâÕ¼Î»
3389   4                                      
3390   4                                      u8 xdata datsTX_Len = 0;
3391   4                                      
3392   4                                      devActionPush_IF.push_IF = 0;
3393   4                                      
3394   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              
                                              paramTX_temp[11] = devActionPush_IF.dats_Push; //ÍÆËÍĞÅÏ¢Ìî×°
              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "swData push:%02X.\n", (int)devActionPush_IF.dats_Push);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
                                                                                                                 paramTX_temp,
                                                                                                                 33,
                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
                                                                                                                 FRAME_MtoZIGBCMD_cmdControl,
                                                                                                                 specialCmd_IF);
                                      
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) //ÖÜÆÚÑ¯·Ã»úÖÆÎŞĞèÍÆËÍ£¬Ö»Ğè´¥·¢Ö÷¶¯Ê±Ğ§ÃüÁ
             -î¼´¿É
3424   4                                      
3425   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swPush = (devActionPush_IF.dats_Push & 0xE0) >> 5; 
             -//ÊôĞÔÖµÌî×°
3426   4                                      dev_agingCmd_sndInitative.agingCmd_swOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ğ§Õ¼Î»ÖÃÒ»
3427   4                                      dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
3428   4                                      
3429   4                                      heartBeatPeriod = PERIOD_HEARTBEAT_PST; //Ö÷¶¯Ñ¯·ÃÇĞ»»£¬ĞÄÌøÖÜÆÚ¸ÄÎªÖ÷¶¯
3430   4                                      heartBeatCount  = heartBeatPeriod; 
3431   4      #endif
3432   4      
3433   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 60  

3434   4                              }
3435   3                              
3436   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º»¥¿ØÍ¬²½-------------------------------------------------
             ---//
3437   3                              if(EACHCTRL_realesFLG){ //¹ã²¥»¥¿ØÖµ
3438   4                              
3439   4                                      if(devRunning_Status == status_passiveDataRcv){
3440   5                                      
3441   5      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER) //µ÷¹â¿ª¹ØµÄ»¥¿ØÖ±½Ó·ÅÔÚ»¥¿Ø×éÒ»ÄÚ£¬»¥¿ØÊı¾İÎª×´Ì¬Öµ
                                                      if(EACHCTRL_realesFLG == 1){
                                                              
                                                              EACHCTRL_realesFLG = 0; //»¥¿ØÓĞĞ§Î»ÇåÁã
                                                              
                                                              (swCommand_fromUsr.actMethod != actionNull)?
                                                                      (paramTX_temp[0] = swCommand_fromUsr.objRelay):
                                                                      (paramTX_temp[0] = status_Relay);
                                                              paramTX_temp[0] = status_Relay; //Ö±½Ó¸øÁÁ¶ÈÖµ
                                                              colonyCtrlGet_statusLocalEaCtrl[0] = paramTX_temp[0]; //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
                                                              localDataRecord_eaCtrl[0] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
                                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢Î´
             -¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
                                                              
                                                              /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
                                                              datsSend_requestEx[0].nwkAddr[0] = mutualCtrlDevList[0][0]; //µ¥²¥
                                                              datsSend_requestEx[0].nwkAddr[1] = mutualCtrlDevList[0][1]; 
                                                              datsSend_requestEx[0].nwkAddr_loopInsert = MUTUALCTRL_DEV_NUM_MAX - 1;
                                                              datsSend_requestEx[0].portPoint = CTRLEATHER_PORT[0]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
                                                              memset(datsSend_requestEx[0].dats, 0, 10 * sizeof(u8));
                                                              
                                                              datsSend_requestEx[0].dats[0] = paramTX_temp[0];
                                                              datsSend_requestEx[0].dats[1] = 0; //ÏÂ±ê1Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£¨×îºó·¢
             -ËÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
                                                              datsSend_requestEx[0].datsLen = 3;
                                                              datsSend_requestEx[0].constant_Loop = MUTUAL_KEEP_TRIG_LOOPPERIOD_TIME; //ÎŞÊÓ»ØÂë£¬·¢30´Î              
                                                      }
                                                                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
              #else
3473   5                      
3474   5                                              u8 idata loop;
3475   5                                              
3476   5                                              switch(SWITCH_TYPE){
3477   6                                              
3478   6                                                      case SWITCH_TYPE_SWBIT1:
3479   6                                                      case SWITCH_TYPE_SWBIT2:
3480   6                                                      case SWITCH_TYPE_SWBIT3:{ //Ò»¡¢¶ş¡¢ÈıÎ»¿ª¹Ø»¥¿ØÇø·Ö¿ª¹ØÎ»
3481   7                                                      
3482   7                                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //Èı¸ö¿ª¹ØÎ»·Ö±ğÅĞ¶¨
3483   8                                                              
3484   8                                                                      if(EACHCTRL_realesFLG & (1 << loop)){ //»¥¿ØÓĞĞ§Î»ÅĞ¶Ï
3485   9                                                                      
3486   9                                                                              EACHCTRL_realesFLG &= ~(1 << loop); //»¥¿ØÓĞĞ§Î»ÇåÁã
3487   9                                                                              
3488   9                                                                              switch(swCommand_fromUsr.actMethod){
3489  10                                                                              
3490  10                                                                                      case relay_OnOff:{
3491  11                                                                                      
3492  11                                                                                              paramTX_temp[0] = (swCommand_fromUsr.objRelay >> loop) & 0x01; //¿ª¹Ø×´Ì¬Ìî×°
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 61  

3493  11                                                                                      
3494  11                                                                                      }break;
3495  10                                                                                      
3496  10                                                                                      case relay_flip:{
3497  11                                                                                      
3498  11                                                                                              paramTX_temp[0] = (swCommand_fromUsr.objRelay >> loop) ^ 0x01; //¿ª¹Ø×´Ì¬Ìî×°
3499  11                                                                                      
3500  11                                                                                      }break;
3501  10                                                                                      
3502  10                                                                                      case actionNull:
3503  10                                                                                      default:{
3504  11                                                                                      
3505  11                                                                                              paramTX_temp[0] = (status_Relay >> loop) & 0x01; //¿ª¹Ø×´Ì¬Ìî×°
3506  11                                                                                      
3507  11                                                                                      }break;
3508  10                                                                              }
3509   9                                                                              
3510   9                                                                              if((CTRLEATHER_PORT[loop] > CTRLEATHER_PORT_NUMSTART) && CTRLEATHER_PORT[loop] < CTRLEATHER_PORT_
             -NUMTAIL){ //ÊÇ·ñÎªÓĞĞ§»¥¿Ø¶Ë¿Ú
3511  10                                                                                      
3512  10                                                                                      (paramTX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_ON):
             -(colonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
3513  10                                                                                      localDataRecord_eaCtrl[loop] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3514  10                                                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅ
             -Ï¢Î´¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3515  10                                                                              
3516  10                                                                                      /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
3517  10                                                                                      datsSend_requestEx[loop].nwkAddr[0] = mutualCtrlDevList[loop][0]; //µ¥²¥
3518  10                                                                                      datsSend_requestEx[loop].nwkAddr[1] = mutualCtrlDevList[loop][1]; 
3519  10                                                                                      datsSend_requestEx[loop].nwkAddr_loopInsert = MUTUALCTRL_DEV_NUM_MAX - 1;
3520  10                                                                                      datsSend_requestEx[loop].portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3521  10                                                                                      memset(datsSend_requestEx[loop].dats, 0, 10 * sizeof(u8));
3522  10                                                                                      
3523  10                                                                                      datsSend_requestEx[loop].dats[0] = paramTX_temp[0];
3524  10                                                                                      datsSend_requestEx[loop].dats[1] = 0; //ÏÂ±ê1Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£
             -¨×îºó·¢ËÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
3525  10                                                                                      datsSend_requestEx[loop].datsLen = 3;
3526  10                                                                                      datsSend_requestEx[loop].constant_Loop = MUTUAL_KEEP_TRIG_LOOPPERIOD_TIME; //ÎŞÊÓ»ØÂë£¬·¢30´Î
3527  10                                                                                      
3528  10      //                                                                              /*³£¹æ·¢ËÍ£¬ÊÕµ½Ğ­ÒéÕ»»ØÂëÏìÓ¦¾ÍÍ£Ö¹·¢ËÍ£¬ÇÒÓĞ³¬Ê±*///³£¹æ
3529  10      //                                                                              datsSend_request.nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3530  10      //                                                                              datsSend_request.portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3531  10      //                                                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
3532  10      //                                                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, 1);
3533  10      //                                                                              datsSend_request.datsTrans.datsLen = 1;
3534  10      //                                                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
3535  10      //                                                                              
3536  10      //                                                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
3537  10      //                                                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 10; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸
             -ö³¬Ê±ÖÜÆÚÄÚ ·¢ 10 ´Î
3538  10      //                                                                              
3539  10      //                                                                              EACHCTRL_reportFLG = 1; //ÏòÍø¹Ø»ã±¨
3540  10      //                                                                              
3541  10      //                                                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
3542  10      //                                                                              
3543  10      //                                                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´
             -Ì¬±£³Ö£¬µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3544  10                                                                              }
3545   9                                                                      }
3546   8                                                              }               
3547   7                                                      }break;
3548   6                                                      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 62  

3549   6                                                      case SWITCH_TYPE_CURTAIN:{ //´°Á±¿ª¹Ø²»Çø·Ö¿ª¹ØÎ»£¬Ö±½Ó»¥¿Ø¶¯×÷Êı¾İ¼´¿É
3550   7                                                      
3551   7                                                              if(EACHCTRL_realesFLG == 1){
3552   8                                                                      
3553   8                                                                      EACHCTRL_realesFLG = 0; //»¥¿ØÓĞĞ§Î»ÇåÁã
3554   8                                                                      
3555   8                                                                      if((CTRLEATHER_PORT[0] > CTRLEATHER_PORT_NUMSTART) && CTRLEATHER_PORT[0] < CTRLEATHER_PORT_NUMTAIL
             -){ //ÓĞĞ§¶Ë¿ÚÅĞ¶Ï
3556   9                                                                      
3557   9                                                                              (swCommand_fromUsr.actMethod != actionNull)?
3558   9                                                                                      (paramTX_temp[0] = swCommand_fromUsr.objRelay):  //Ö±½Ó¸ø²Ù×÷Öµ[1:¹Ø, 2:Í£, 4:¿ª]
3559   9                                                                                      (paramTX_temp[0] = status_Relay);  //Ö±½Ó¸ø²Ù×÷Öµ[1:¹Ø, 2:Í£, 4:¿ª]
3560   9                                                                              paramTX_temp[0] = status_Relay;
3561   9                                                                              colonyCtrlGet_statusLocalEaCtrl[0] = paramTX_temp[0]; //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
3562   9                                                                              localDataRecord_eaCtrl[0] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3563   9                                                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ
             -¢Î´¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3564   9                                                                              
3565   9                                                                              /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
3566   9                                                                              datsSend_requestEx[0].nwkAddr[0] = mutualCtrlDevList[0][0]; //µ¥²¥
3567   9                                                                              datsSend_requestEx[0].nwkAddr[1] = mutualCtrlDevList[0][1]; 
3568   9                                                                              datsSend_requestEx[0].nwkAddr_loopInsert = MUTUALCTRL_DEV_NUM_MAX - 1;
3569   9                                                                              datsSend_requestEx[0].portPoint = CTRLEATHER_PORT[0]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3570   9                                                                              memset(datsSend_requestEx[0].dats, 0, 10 * sizeof(u8));
3571   9                                                                              
3572   9                                                                              datsSend_requestEx[0].dats[0] = paramTX_temp[0];
3573   9                                                                              datsSend_requestEx[0].dats[1] = 0; //ÏÂ±ê1Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£¨×îº
             -ó·¢ËÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
3574   9                                                                              datsSend_requestEx[0].datsLen = 3;
3575   9                                                                              datsSend_requestEx[0].constant_Loop = MUTUAL_KEEP_TRIG_LOOPPERIOD_TIME; //ÎŞÊÓ»ØÂë£¬·¢30´Î
3576   9                                                                      }
3577   8                                                              }
3578   7                                                              
3579   7                                                      }break;
3580   6                                                      
3581   6                                                      default:{}break;
3582   6                                              }                       
3583   5      #endif
3584   5                                      }       
3585   4                              }
3586   3      
3587   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ   
                                      if(EACHCTRL_reportFLG){ //ÏòÍø¹Øµ¥²¥µ±Ç°ËùÓĞ»¥¿Ø×éºÅ¶ÔÓ¦µÄ¿ª¹Ø×´Ì¬Öµ
                                      
                                              EACHCTRL_reportFLG = 0;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2/4/6]       |               frame_data[3/5/7]                       |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ          |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ¶ÔÓ¦¿ª¹Ø×´Ì¬Öµ    |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              {
                                                      u8 code remote_responseFrame[3] = {ZIGB_SYSCMD_EACHCTRL_REPORT, 0x01, 0x00}; //Ô¶¶ËÏìÓ¦Ö¡<È·±£Ö÷»úÊÕµ
             -½>
                                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 63  

                                                              
                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                              sprintf(log_buf, "current eaCtrl insrt[2] is: %02X.\n", (int)colonyCtrlGet_statusLocalEaCtrl[1]);
                                                              PrintString1_logOut(log_buf);
                                                      }                       
              #endif  
                                                      
                                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                                      datsSend_request.datsTrans.dats[0]      = ZIGB_SYSCMD_EACHCTRL_REPORT;
                                                      datsSend_request.datsTrans.dats[1]      = 6;
                                                      datsSend_request.datsTrans.dats[2]      = CTRLEATHER_PORT[0];
                                                      datsSend_request.datsTrans.dats[3]      = colonyCtrlGet_statusLocalEaCtrl[0];
                                                      datsSend_request.datsTrans.dats[4]      = CTRLEATHER_PORT[1];
                                                      datsSend_request.datsTrans.dats[5]      = colonyCtrlGet_statusLocalEaCtrl[1];
                                                      datsSend_request.datsTrans.dats[6]      = CTRLEATHER_PORT[2];
                                                      datsSend_request.datsTrans.dats[7]      = colonyCtrlGet_statusLocalEaCtrl[2];
                                                      datsSend_request.datsTrans.datsLen      = 8;
                                                      datsSend_request.nwkAddr                        = 0;
                                                      datsSend_request.portPoint                      = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      memset(datsRcv_respond.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8)); //ĞèÒªÔ¶¶ËÏìÓ¦
                                                      memcpy(datsRcv_respond.datsTrans.dats, remote_responseFrame, 3); //Ô¶¶ËÏìÓ¦Ö¡¼ÓÔØ
                                                      datsRcv_respond.datsTrans.datsLen       = 3;
                                                      datsRcv_respond.nwkAddr                         = 0;
                                                      datsRcv_respond.portPoint                       = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              }
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
3635   3                              
3636   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ½âÎöÏìÓ¦---------------------------------------------
             ---//
3637   3                              if(uartRX_toutFLG){ //Êı¾İ½ÓÊÕ(Ö¡³¬Ê±)
3638   4                                      
3639   4                                      uartRX_toutFLG = 0;
3640   4                                      
3641   4      //                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
3642   4      //                              
3643   4      //#if(DEBUG_LOGOUT_EN == 1)
3644   4      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3645   4      //                      
3646   4      //                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3647   4      //                                                      sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
3648   4      //                                                      PrintString1_logOut(log_buf);
3649   4      //                                              }                       
3650   4      //#endif        
3651   4      //                              }
3652   4                                      
3653   4                                      /*ZigbeeÒ»¼¶Ğ­ÒéºË¶Ô½âÎö*/
3654   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3655   4                                              !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_datsComing, 2)){ //Ô¶¶ËÊı¾İµ½À´Ö¸Áî
3656   5                                              
3657   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
3658   5                                              u8      idata srcPoint =  datsRcv_ZIGB.rcvDats[10];     //Ô´¶Ë
3659   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë
3660   5                                                      
3661   5                                              if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //Êı¾İÀ´Ô´¶ÌµØÖ·¼ì²â£¬ÊÇ·ñÀ´×ÔÍø¹ØÖ÷»ú
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 64  

3662   6                                              
3663   6                                                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //Íø¹ØÖ÷»úÊ§ÁªÈ·ÈÏ¼ì²â¼ÆÊ±Ö
             -ØÖÃ
3664   6                                                      if(devTips_nwkZigb != nwkZigb_nwkOpen)devTips_nwkZigb = nwkZigb_Normal; //zigbTips×´Ì¬ÏìÓ¦£¬Ö»Òª½ÓÊÕ
             -µ½Íø¹ØzigbÊı¾İ£¬tips×´Ì¬¾ÍÇĞ»»ÖÁÕı³£
3665   6                                              }
3666   5                                              
3667   5                                              memset(paramRX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans);
3668   5                                              memcpy(paramRX_temp, &(datsRcv_ZIGB.rcvDats[21]), datsRcv_ZIGB.rcvDats[20]);
3669   5                                                      
3670   5                                              if(srcPoint > CTRLEATHER_PORT_NUMSTART && srcPoint < CTRLEATHER_PORT_NUMTAIL){ /*»¥¿Ø¶Ë¿Ú*/
3671   6                                                      
3672   6                                                      u8 idata statusRelay_temp = status_Relay; //µ±Ç°¿ª¹Ø×´Ì¬»º´æ
3673   6                                                      u8 idata localActLoop = 0;
3674   6                                                      
3675   6                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢Î´
             -¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3676   6                                                      
3677   6      #if(DEBUG_LOGOUT_EN == 1)
                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                      sprintf(log_buf, "ctrl eachOther cmd coming, cluster:%02d, val:%02d, loop:%02d.\n", (int)srcPoint, 
             -(int)paramRX_temp[0], (int)paramRX_temp[1]);
                                                                      PrintString1_logOut(log_buf);
                                                              }                       
              #endif  
3684   6      
3685   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER) //µ÷¹â¿ª¹ØµÄ»¥¿ØÖ±½Ó·ÅÔÚ»¥¿Ø×éÒ»ÄÚ£¬»¥¿ØÊı¾İÎª×´Ì¬Öµ
                                                              if((srcPoint == CTRLEATHER_PORT[0]) && (0 != CTRLEATHER_PORT[0])){ //»¥¿Ø×éÒ» ¶ÔÓ¦×éºÅºË¶Ô£¨×éºÅ¼´¶Ë
             -¿ÚºÅ£©
              
                                                                      if(paramRX_temp[2] == MUTUALCMD_MUTADDRS_NOTICE_OUT){
                                                                      
                                                                              mutualCtrlSysParam_checkAndStore(localActLoop, datsFrom_addr);//µã¶Ôµã»¥¿ØµØÖ·ÅĞ¶Ï´æ´¢
                                                                              
                                                                      }else                                                   
                                                                      if(paramRX_temp[1] > datsSend_requestEx[0].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
                                                                              
                                                                              dnCounter_mutualAddrPeriodPingOut = 10;
              
                                                                              swCommand_fromUsr.objRelay = paramRX_temp[0]; //ÁÁ¶ÈÖµ¼ÓÔØ²¢½øĞĞÓ²¼şÏìÓ¦
                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                              
                                                                              colonyCtrlGet_statusLocalEaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
                                                                              
                                                                              datsSend_requestEx[0].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«±»È¡Ïû
                                                                              
                                                                              localDataRecord_eaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
                                                                      }
                                                              }
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
              #else                   
3714   6                                                      switch(SWITCH_TYPE){
3715   7                                                      
3716   7                                                              case SWITCH_TYPE_SWBIT1:
3717   7                                                              case SWITCH_TYPE_SWBIT2:
3718   7                                                              case SWITCH_TYPE_SWBIT3:{
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 65  

3719   8                                                              
3720   8                                                                      /*»¥¿Ø±»¶¯ÏìÓ¦*///Ò»¡¢¶ş¡¢ÈıÎ»¿ª¹Ø
3721   8                                                                      for(localActLoop = 0; localActLoop < clusterNum_usr; localActLoop ++){
3722   9                                                                      
3723   9                                                                              if((srcPoint == CTRLEATHER_PORT[localActLoop]) && (0 != CTRLEATHER_PORT[localActLoop])){ //¿ª¹ØÎ»
             -x »¥¿Ø°ó¶¨ÅĞ¶Ï
3724  10                                                                                      
3725  10                                                                                      if(paramRX_temp[2] == MUTUALCMD_MUTADDRS_NOTICE_OUT){
3726  11                                                                                      
3727  11                                                                                              mutualCtrlSysParam_checkAndStore(localActLoop, datsFrom_addr);//µã¶Ôµã»¥¿ØµØÖ·ÅĞ¶Ï´æ´¢
3728  11                                                                                              
3729  11                                                                                      }else
3730  10                                                                                      if(paramRX_temp[1] > datsSend_requestEx[localActLoop].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§£¬·À
             -Ö¹Á½±ßÍ¬Ê±°´£¬²úÉú»Øµ¯
3731  11                                                                                              
3732  11                                                                                              dnCounter_mutualAddrPeriodPingOut = 10;
3733  11                                                                                      
3734  11                                                                                              statusRelay_temp &= ~(1 << localActLoop); //¶¯×÷Î»»º´æÇåÁã
3735  11                                                                                              swCommand_fromUsr.objRelay = statusRelay_temp | (paramRX_temp[0] << localActLoop); //bit¶ÔÓ¦ ¿ª
             -¹ØÎ»¶¯×÷¼ÓÔØ
3736  11                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
3737  11                                                                                              (paramRX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRES
             -ERVE_ON):(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
3738  11                                                                                              
3739  11                                                                                              datsSend_requestEx[localActLoop].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«
             -±»È¡Ïû
3740  11                                                                                              
3741  11                                                                                              localDataRecord_eaCtrl[localActLoop] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3742  11                                                                                      }
3743  10                                                                                      
3744  10                                                                                      break;
3745  10                                                                              }
3746   9                                                                      }
3747   8                                                                      
3748   8                                                              }break;
3749   7                                                              
3750   7                                                              case SWITCH_TYPE_CURTAIN:{
3751   8                                                              
3752   8                                                                      if((srcPoint == CTRLEATHER_PORT[0]) && (0 != CTRLEATHER_PORT[0])){ //»¥¿Ø×éÒ» ¶ÔÓ¦×éºÅºË¶Ô£¨×éºÅ¼´
             -¶Ë¿ÚºÅ£©
3753   9                                                                      
3754   9                                                                              if(paramRX_temp[2] == MUTUALCMD_MUTADDRS_NOTICE_OUT){
3755  10                                                                              
3756  10                                                                                      mutualCtrlSysParam_checkAndStore(localActLoop, datsFrom_addr);//µã¶Ôµã»¥¿ØµØÖ·ÅĞ¶Ï´æ´¢
3757  10                                                                                      
3758  10                                                                              }else
3759   9                                                                              if(paramRX_temp[1] > datsSend_requestEx[0].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
3760  10                                                                                      
3761  10                                                                                      dnCounter_mutualAddrPeriodPingOut = 10;
3762  10      
3763  10                                                                                      swCommand_fromUsr.objRelay = paramRX_temp[0]; //¶¯×÷Öµ¼ÓÔØ²¢½øĞĞÓ²¼şÏìÓ¦
3764  10                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
3765  10                                                                                      
3766  10                                                                                      colonyCtrlGet_statusLocalEaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
3767  10                                                                                      
3768  10                                                                                      datsSend_requestEx[0].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«±»È¡Ïû
3769  10                                                                                      
3770  10                                                                                      localDataRecord_eaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3771  10                                                                              }
3772   9                                                                      }
3773   8                                                                      
3774   8                                                              }break;
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 66  

3775   7      
3776   7                                                      }               
3777   6      #endif  
3778   6                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ -Ö÷¶¯ÉÏ´«
3779   6                                                      dev_agingCmd_sndInitative.agingCmd_delaySetOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ğ§Õ¼Î»ÖÃÒ»
3780   6                                              
3781   6                                              }else{ /*·Ç»¥¿Ø¶Ë¿Ú*///Ê£ÏÂ¾ÍÊÇÏµÍ³×¨ÓÃµÄ15¸ö¶Ë¿Ú
3782   6                                              
3783   6                                                      switch(srcPoint){
3784   7                                                              
3785   7                                                              /*³¡¾°¼¯Èº¶Ë¿Ú*/
3786   7                                                              case ZIGB_ENDPOINT_CTRLSECENARIO:{      
3787   8                                                              
3788   8                                                                      dataParing_scenarioCtrl(paramRX_temp); //³¡¾°¼¯Èº¿ØÖÆ½âÎö
3789   8                                                                      
3790   8                                                              }break;
3791   7                                                      
3792   7                                                              /*³£¹æ¿ØÖÆ×ª·¢¶Ë¿Ú*/
3793   7                                                              case ZIGB_ENDPOINT_CTRLNORMAL:{ 
3794   8                                                              
3795   8                                                                      if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //À´×ÔĞ­µ÷Æ÷
3796   9                                                                      
3797   9                                                                              dataParing_Nomal(paramRX_temp, datsFrom_addr, srcPoint); //³£¹æ½âÎö
3798   9                                                                      }
3799   8                                                                      
3800   8                                                              }break;
3801   7                                                              
3802   7                                                              /*zigbÏµÍ³½»»¥¶Ë¿Ú*/
3803   7                                                              case ZIGB_ENDPOINT_CTRLSYSZIGB:{        
3804   8                                                              
3805   8                                                                      dataParing_zigbSysCtrl(paramRX_temp); //ÏµÍ³¿ØÖÆ½âÎö
3806   8                                                                      
3807   8                                                              }break;
3808   7                                                                      
3809   7                                                              default:{
3810   8                                                              
3811   8                                                                      
3812   8                                                                      
3813   8                                                              }break;
3814   7                                                      }
3815   6                                              }
3816   5                                              
3817   5                                      }else
3818   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3819   4                                         !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_nwkOpenNote, 2)){ //ÍøÂç¿ª·ÅÍ¨Öª
3820   5                                              
3821   5                                              if(datsRcv_ZIGB.rcvDats[4])tips_statusChangeToZigbNwkOpen(datsRcv_ZIGB.rcvDats[4]); //tips´¥·¢ --½öÏì
             -Ó¦¿ª´¥·¢£¬²»ÏìÓ¦¹Ø´¥·¢
3822   5                                                 
3823   5      #if(DEBUG_LOGOUT_EN == 1)
                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                              
                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                              sprintf(log_buf, "zigbNwk open notice get:%ds.\n", (int)datsRcv_ZIGB.rcvDats[4]);
                                                              PrintString1_logOut(log_buf);
                                                      }                       
              #endif
3831   5                                      }
3832   4                              }
3833   3                              
3834   3                      }break;
3835   2                      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 67  

3836   2                      case status_nwkREQ:{
3837   3                      
3838   3                              //--------------------------------Ğ­×´Ì¬£ºÇå³ı±¾µØÍøÂçºóÖØĞÂÈëÍøÇëÇó-----------------------------------
             -------------//
3839   3                              devTips_nwkZigb = nwkZigb_nwkREQ;
3840   3                              
3841   3                              countEN_ifTipsFree = 0; //½ûÖ¹ÅÜÂíµÆ
3842   3                              
3843   3                              zigB_nwkJoinRequest(1); //·Ç×èÈûÖ÷¶¯¼ÓÈë¸½½ü¿ª·ÅÍøÂç
3844   3                              
3845   3                      }break;
3846   2                              
3847   2                      case status_nwkReconnect:{
3848   3                      
3849   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂçÖØÁ¬ÇëÇó-----------------------------------------------//
3850   3                              devTips_nwkZigb = nwkZigb_reConfig;
3851   3                              
3852   3                              countEN_ifTipsFree = 0; //½ûÖ¹ÅÜÂíµÆ
3853   3                              
3854   3                              if(zigbNwk_exist_FLG){ //ÍøÂç´æÔÚ¾ÍÖØÁ¬£¬·ñÔòÒ»Ö±¸´Î»¹ÒÆğ
3855   4                              
3856   4                                      if(devZigbNwk_startUp_delayCounter){ //ÑÓ³ÙÆô¶¯Ê±¼äÄÚ½ûÖ¹zigbÆ÷¼ş²Ù×÷
3857   5                                      
3858   5                                              zigbPin_RESET = ZIGBMOD_RESET_LEVEL_ENABLE; //zigb¸´Î» --½ûÖ¹²Ù×÷ÆÚ
3859   5                                      
3860   5                                      }else{
3861   5                                      
3862   5                                              zigB_nwkJoinRequest(0); //·Ç×èÈûÖØÁ¬
3863   5                                      }
3864   4      
3865   4                              }else{
3866   4                              
3867   4                                      zigbPin_RESET = ZIGBMOD_RESET_LEVEL_ENABLE; //zigb¸´Î»
3868   4                                      
3869   4                                      if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
3870   5                                      
3871   5                                              zigbPin_RESET = ZIGBMOD_RESET_LEVEL_DISABLE; //zigbÆ÷¼ş»Ö¸´
3872   5                                              
3873   5                                              devStatus_switch.statusChange_IF = 0;
3874   5                                              devRunning_Status = devStatus_switch.statusChange_standBy;
3875   5                                              
3876   5                                              return;
3877   5                                      }
3878   4                              }
3879   3                              
3880   3                      }break;
3881   2                      
3882   2                      case status_dataTransRequestDatsSend:{
3883   3                              
3884   3                              //--------------------------------Ğ­×´Ì¬£ºÊı¾İÇëÇó-----------------------------------------------//
3885   3                              dataTransRequest_datsSend(); //·Ç×èÈûÔ¶¶ËÊı¾İ´«Êä
3886   3                      
3887   3                      }break;
3888   2                      
3889   2                      case status_devNwkHold:{
3890   3                      
3891   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂç¹ÒÆğ-----------------------------------------------//
3892   3                              devTips_nwkZigb = nwkZigb_hold;
3893   3                              function_devNwkHold();
3894   3                              
3895   3                      }break;
3896   2                      
C51 COMPILER V9.54   DATATRANS                                                             05/13/2019 08:24:10 PAGE 68  

3897   2                      case status_devFactoryRecoverStandBy:{
3898   3                      
3899   3                              //--------------------------------Ğ­×´Ì¬£º»Ö¸´³ö³§Ô¤ÖÃ-----------------------------------------------//
3900   3                              devTips_nwkZigb = nwkZigb_outLine;
3901   3                              if(!factoryRecover_HoldTimeCount){
3902   4                              
3903   4                                      if(factoryRecover_standBy_FLG)Factory_recover();
3904   4                              }
3905   3                              
3906   3                      }break;
3907   2                              
3908   2                      default:{
3909   3                      
3910   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
3911   4                              
3912   4                                      devStatus_switch.statusChange_IF = 0;
3913   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
3914   4                                      
3915   4                                      break;
3916   4                              }
3917   3                      
3918   3                      }break;
3919   2              }
3920   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   9667    ----
   CONSTANT SIZE    =   3142    ----
   XDATA SIZE       =    579    1395
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11     151
   IDATA SIZE       =      2      15
   BIT SIZE         =     10      17
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
