C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DATATRANS
OBJECT MODULE PLACED IN .\Output\dataTrans.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE dataTrans\dataTrans.c OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Usr;.\Usr_l
                    -ib;.\std_Lib;.\dataTrans;.\Actuator;.\Sensor;.\hwDriver) DEBUG PRINT(.\Listings\dataTrans.lst) OBJECT(.\Output\dataTrans
                    -.obj)

line level    source

   1          #include "dataTrans.h"
   2          
   3          #include "string.h"
   4          #include "stdio.h"
   5          
   6          #include "eeprom.h"
   7          #include "USART.h"
   8          #include "delay.h"
   9          #include "Relay.h"
  10          #include "usrKin.h"
  11          
  12          #include "timerAct.h"
  13          #include "pars_Method.h"
  14          #include "dataManage.h"
  15          #include "Tips.h"
  16          
  17          #include "driver_I2C_HXD019D.h"
  18          #include "DS18B20.h"
  19          
  20          /**********************±¾µØÎÄ¼ş±äÁ¿¶¨ÒåÇø************************/
  21          datsAttr_datsTrans xdata datsSend_request = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ
  22          datsAttr_dtCtrlEach xdata datsSend_requestEx[3] = {0}; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ£¨³ÖĞø·¢ËÍ£¬ÎŞĞèÔ¶¶ËÏìÓ
             -¦£©
  23          u16 xdata dtReqEx_counter = 0; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇóÊı¾İ·¢ËÍ¼ä¸ô¼ÆÊ±Öµ µ¥Î»£ºms
  24          datsAttr_datsTrans xdata datsRcv_respond = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇóµÈ´ıÏìÓ¦»º´æ»º´æ
  25          remoteDataReq_method xdata devRemoteDataReqMethod = {0}; //Ô¶¶ËÊı¾İÇëÇó·½Ê½
  26          
  27          stt_devOpreatDataPonit xdata dev_currentDataPoint = {0}; //ÖÜÆÚÑ¯·ÃÊı¾İµã
  28          stt_agingDataSet_bitHold xdata  dev_agingCmd_rcvPassive = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --±»¶¯½ÓÊÕ
  29          stt_agingDataSet_bitHold xdata  dev_agingCmd_sndInitative = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --Ö÷¶¯ÉÏ´«
  30          u8 dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR; //Êı¾İ´«ÊäÎª¶¨Ê±Ñ¯·ÃÄ£Ê½Ê±£¬Ğ¯´øÑ¯·ÃÖ¸ÁîÖµ£¬
             -ĞèÒªÖ÷¶¯ÉÏ´«Ê±Ôò¸ü¸Ä´ËÖµ
  31          
  32          //zigbeeÔËĞĞ×´Ì¬ÇĞ»»±êÖ¾
  33          stt_statusChange xdata devStatus_switch = {0, status_NULL};
  34          //Êı¾İÇëÇóÍê³ÉºóÊÇ·ñĞèÒªÖØÆôÍøÂç
  35          bit reConnectAfterDatsReq_IF = 0; //ÓÃÓÚ»¥¿ØÍ¨Ñ¶´Ø¼´¿Ì×¢²áÌØÊâÇé¿öÏÂÊ¹ÓÃ
  36          
  37          bit coordinatorOnline_IF = 0; //Ğ­µ÷Æ÷ÔÚÏß±êÖ¾
  38          
  39          //zigbÍøÂç¶¯×÷×¨ÓÃÊ±¼ä¼ÆÊı
  40          u16 xdata zigbNwkAction_counter = 0;
  41          
  42          //zigbÉè±¸ÍøÂç¹ÒÆğÊôĞÔ²ÎÊı
  43          attr_devNwkHold xdata devNwkHoldTime_Param = {0};
  44          
  45          //ĞÄÌø
  46          bit heartBeatCycle_FLG                  = 0; //ĞÄÌøÖÜÆÚ´¥·¢
  47          u8      xdata heartBeatCount            = 0; //ĞÄÌøÖÜÆÚ¼ÆÊı
  48          u8      xdata heartBeatPeriod           = PERIOD_HEARTBEAT_ASR; //ĞÄÌø¼ÆÊıÖÜÆÚ
  49          u8      xdata heartBeatHang_timeCnt = 0; //ĞÄÌø¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ·¢ËÍĞÄÌø£¬·ñÔòĞÄÌø¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  50          
  51          //¼¯ÈºÊÜ¿ØÖÜÆÚÂÖÑ¯-<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 2   

  52          u8      xdata colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÑ¯²é¼ÆÊ±¼ÆÊıÖµ
  53          u8      xdata colonyCtrlGet_statusLocalEaCtrl[clusterNum_usr] = {0}; //¼¯Èº¿ØÖÆ-±¾µØ»¥¿Ø×´Ì¬Î»¼ÇÂ¼
  54          u8      xdata localDataRecord_eaCtrl[clusterNum_usr] = {0}; //±¾µØ¾²Ì¬Êı¾İ¼ÇÂ¼£º»¥¿ØÊµ¼ÊÖµ
  55          u8      xdata colonyCtrlGet_statusLocalScene = 0; //¼¯Èº¿ØÖÆ-±¾µØ³¡¾°×´Ì¬Î»¼ÇÂ¼
  56          u8      xdata colonyCtrlGetHang_timeCnt = 0; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÂÖÑ¯¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ½øĞĞÖÜÆÚÑ¯²é£¬·ñ
             -ÔòÑ¯²é¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  57          
  58          //´®¿Ú½ÓÊÕ³¬Ê±±êÖ¾
  59          bit uartRX_toutFLG      = 0;
  60          //´®¿Ú½ÓÊÕ³¬Ê±¼ÆÊı
  61          bit rxTout_count_EN = 0;
  62          u8  rxTout_count        = 0;
  63          //´®¿ÚÊı¾İ»º´æ
  64          u8      datsRcv_length  = 0;
  65          uartTout_datsRcv xdata datsRcv_ZIGB = {{0}, 0};
  66          
  67          //zigbeeÍ¨ĞÅÏß³Ìµ±Ç°ÔËĞĞ×´Ì¬±êÖ¾
  68          threadRunning_Status devRunning_Status = status_NULL;
  69          
  70          //zigbeeĞ­µ÷Æ÷¶ªÊ§¼ì²â¼ÆÊ±±äÁ¿
  71          u8 xdata timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM;
  72          
  73          u8      xdata factoryRecover_HoldTimeCount = 0; //»Ö¸´³ö³§µÈ´ıÊ±¼ä
  74          bit idata factoryRecover_standBy_FLG = 0; //»Ö¸´³ö³§Ô¤ÖÃ±êÖ¾
  75          
  76          void zigbUart_pinInit(void){
  77   1      
  78   1              //TXÍÆÍìÊä³ö
  79   1              P3M1 &= 0xFD;   
  80   1              P3M0 |= 0x02;   
  81   1              
  82   1              //RX¸ß×èÊäÈë
  83   1              P3M1 |= 0x01;
  84   1              P3M0 &= 0xFE;
  85   1              
  86   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                      
                      P2M1 &= ~0x40;
                      P2M0 |= 0x40;
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                      
              #else
  93   1              
  94   1              P2M1 &= ~0x08;
  95   1              P2M0 |= 0x08;
  96   1      #endif
  97   1      }
  98                  
  99          /*--------------------------------------------------------------*/
 100          void uartObjZigb_Init(void){
 101   1      
 102   1              EA = 0;
 103   1      
 104   1              PS = 0;
 105   1              SCON = (SCON & 0x3f) | UART_8bit_BRTx;
 106   1      
 107   1      {
 108   2              u32 j = (MAIN_Fosc / 4) / ZIGB_BAUND;   //°´1T¼ÆËã
 109   2                      j = 65536UL - j;
 110   2              
 111   2              TH2 = (u8)(j>>8);
 112   2              TL2 = (u8)j;
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 3   

 113   2      }
 114   1              AUXR &= ~(1<<4);        //Timer stop
 115   1              AUXR |= 0x01;           //S1 BRT Use Timer2;
 116   1              AUXR &= ~(1<<3);        //Timer2 set As Timer
 117   1              AUXR |=  (1<<2);        //Timer2 set as 1T mode
 118   1      
 119   1              IE2  &= ~(1<<2);        //½ûÖ¹ÖĞ¶Ï
 120   1              AUXR &= ~(1<<3);        //¶¨Ê±
 121   1              AUXR |=  (1<<4);        //Timer run enable
 122   1      
 123   1              ES        = 1;
 124   1              REN   = 1;
 125   1              P_SW1 = (P_SW1 & 0x3f) | (UART1_SW_P30_P31 & 0xc0);
 126   1              
 127   1              memset(TX1_Buffer, 0, sizeof(char) * COM_TX1_Lenth);
 128   1      
 129   1              EA = 1;
 130   1      
 131   1              PrintString1("i'm UART1 for wifi data translate !!!\n");
 132   1              PrintString1_logOut("i'm UART1 for datsLog !!!\n");
 133   1      }
 134          
 135          ///*----------------------------
 136          //·¢ËÍ´®¿ÚÊı¾İ
 137          //----------------------------*/
 138          //void uartObjWIFI_Send_Byte(u8 dat)    //´®¿Ú1
 139          //{
 140          //      TX1_write2buff(dat);
 141          //}
 142          
 143          //void uartObjWIFI_Send_String(char *s,unsigned char ucLength){  //´®¿Ú1
 144          //      
 145          //      uart1_datsSend(s, ucLength);
 146          //}
 147          
 148          //void rxBuff_WIFI_Clr(void){
 149          
 150          //      memset(rxBuff_WIFI, 0xff, sizeof(char) * COM_RX1_Lenth);
 151          //      COM1.RX_Cnt = 0;
 152          //}
 153          
 154          /********************* UART1(WIIF)ÖĞ¶Ïº¯Êı_×Ô¶¨ÒåÖØ¹¹************************/
 155          void UART1_Rountine (void) interrupt UART1_VECTOR
 156          {
 157   1              
 158   1              if(RI)
 159   1              {
 160   2                      RI = 0;
 161   2                      if(COM1.B_RX_OK == 0)
 162   2                      {
 163   3                              
 164   3      //                      if(COM1.RX_Cnt >= COM_RX1_Lenth)        COM1.RX_Cnt = 0;
 165   3      //                      RX1_Buffer[COM1.RX_Cnt++] = SBUF;
 166   3      //                      COM1.RX_TimeOut = TimeOutSet1;
 167   3                              
 168   3                              if(!rxTout_count_EN){
 169   4                              
 170   4                                      rxTout_count_EN = 1;
 171   4                                      rxTout_count    = 0;
 172   4                                      datsRcv_length  = 0;
 173   4                                      
 174   4                                      memset(RX1_Buffer, 0xff, sizeof(char) * COM_RX1_Lenth);
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 4   

 175   4                              }
 176   3                                              
 177   3                              RX1_Buffer[datsRcv_length ++] = SBUF;
 178   3                              rxTout_count = 0;
 179   3                      }
 180   2              }
 181   1      
 182   1              if(TI)
 183   1              {
 184   2                      TI = 0;
 185   2                      if(COM1.TX_read != COM1.TX_write)
 186   2                      {
 187   3                              SBUF = TX1_Buffer[COM1.TX_read];
 188   3                              if(++COM1.TX_read >= COM_TX1_Lenth)     COM1.TX_read = 0;
 189   3                      }
 190   2                      else COM1.B_TX_busy = 0;
 191   2              }
 192   1      }
 193          
 194          /* ×Ô¶¨ÒåĞ£Ñé*///×Ô¼Ò²úÆ·Ğ­Òé²ã
 195          static 
 196          unsigned char frame_Check(unsigned char frame_temp[], u8 check_num){
 197   1        
 198   1              unsigned char loop              = 0;
 199   1              unsigned char val_Check = 0;
 200   1              
 201   1              for(loop = 0; loop < check_num; loop ++){
 202   2              
 203   2                      val_Check += frame_temp[loop];
 204   2              }
 205   1              
 206   1              val_Check  = ~val_Check;
 207   1              val_Check ^= 0xa7;
 208   1              
 209   1              return val_Check;
 210   1      }
 211          
 212          /*´ËÊı¾İ·â×°±ØĞëÔÚÊı¾İ°ü·¢ËÍÇ°×îºóµ÷ÓÃ£¬×Ô¶¨Òå¶ÔÏó½øĞĞÊı¾İ·â×°*///±ÜÃâĞ£Ñé±»ÌáÇ°¶ø³ö´í
 213          static 
 214          u8 dtasTX_loadBasic_CUST(bit ifRemoteDats,
 215                                                       u8 dats_Tx[],
 216                                                       u8 datsLen_TX,
 217                                                       u8 frame_Type,
 218                                                       u8 frame_CMD,
 219                                                       bit ifSpecial_CMD){
 220   1                                                         
 221   1              dats_Tx[2]      = frame_Type;
 222   1              dats_Tx[3]      = frame_CMD;
 223   1              
 224   1              if(!ifSpecial_CMD)dats_Tx[10] = SWITCH_TYPE;    //¿ª¹ØÀàĞÍÌî³ä
 225   1              
 226   1              memcpy(&dats_Tx[5], &MAC_ID[1], 5);     //MACÌî³ä
 227   1                                                        
 228   1              dats_Tx[4]      = frame_Check(&dats_Tx[5], 28);
 229   1                                                                 
 230   1              if(ifRemoteDats){
 231   2                      
 232   2                      u8 xdata dats_Temp[64] = {0};
 233   2              
 234   2                      dats_Tx[0] = ZIGB_FRAMEHEAD_CTRLREMOTE;
 235   2                      dats_Tx[1]      = datsLen_TX + 12;
 236   2                      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 5   

 237   2                      memcpy(dats_Temp, &dats_Tx[1], datsLen_TX - 13);
 238   2                      memset(&dats_Tx[1], 0, datsLen_TX - 1);
 239   2                      memcpy(&dats_Tx[13], dats_Temp, datsLen_TX - 13);
 240   2                      memcpy(&dats_Tx[1], MAC_ID_DST, 6);
 241   2                      memcpy(&dats_Tx[8], &MAC_ID[1], 5);
 242   2                      
 243   2                      return 45;
 244   2                      
 245   2              }else{
 246   2              
 247   2                      dats_Tx[0]      = ZIGB_FRAMEHEAD_CTRLLOCAL;
 248   2                      dats_Tx[1]      = datsLen_TX;
 249   2                      
 250   2                      return 33;
 251   2              }
 252   1      }
 253          
 254          /*Êı¾İÒì»òĞ£Ñé*///ZNPĞ­Òé²ã
 255          static 
 256          u8 XORNUM_CHECK(u8 buf[], u8 length){
 257   1      
 258   1              u8 loop = 0;
 259   1              u8 valXOR = buf[0];
 260   1              
 261   1              for(loop = 1;loop < length;loop ++)valXOR ^= buf[loop];
 262   1              
 263   1              return valXOR;
 264   1      }
 265          
 266          /*zigbeeÊı¾İÖ¡¼ÓÔØ*/
 267          static 
 268          u8 ZigB_TXFrameLoad(u8 frame[],u8 cmd[],u8 cmdLen,u8 dats[],u8 datsLen){                
 269   1      
 270   1              const u8 frameHead = ZIGB_FRAME_HEAD;   //ZNP,SOFÖ¡Í·
 271   1              u8 xor_check = datsLen;                                 //Òì»òĞ£Ñé£¬Ö¡Î²
 272   1              u8 loop = 0;
 273   1              u8 ptr = 0;
 274   1              
 275   1              frame[ptr ++] = frameHead;
 276   1              frame[ptr ++] = datsLen;
 277   1              
 278   1              memcpy(&frame[ptr],cmd,cmdLen);
 279   1              ptr += cmdLen;
 280   1              for(loop = 0;loop < cmdLen;loop ++)xor_check ^= cmd[loop];
 281   1      
 282   1              memcpy(&frame[ptr],dats,datsLen);
 283   1              ptr += datsLen;
 284   1              for(loop = 0;loop < datsLen;loop ++)xor_check ^= dats[loop];    
 285   1              
 286   1              frame[ptr ++] = xor_check;
 287   1              
 288   1              return ptr;
 289   1      }
 290          
 291          /*ÖÜÆÚĞÔÖ÷¶¯·¢ÂëÍ¨ĞÅ¹ÒÆğ£¬Í¨ĞÅÇåÕÏ*/
 292          void periodDataTrans_momentHang(u8 hangTime){ //¹ÒÆğÊ±¼ä µ¥Î»£ºs
 293   1      
 294   1              heartBeatCount = 0;
 295   1              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
 296   1              
 297   1              heartBeatHang_timeCnt = colonyCtrlGetHang_timeCnt = hangTime;
 298   1      }
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 6   

 299          
 300          /*zigbeeµ¥Ö¸ÁîÊı¾İÇëÇó£¬·µ»ØÓ¦´ğÊı¾İ³¤¶È*/
 301          static 
 302          u8 zigb_datsRequest( u8 frameREQ[],             //ÇëÇóÖ¡
 303                                                   u8 frameREQ_Len,       //ÇëÇóÖ¡³¤
 304                                                   u8 resp_cmd[2],        //ËùĞèÓ¦´ğÖ¸Áî
 305                                                   u8 resp_dats[],        //Ó¦´ğÊı¾İ»º´æ
 306                                                   u8 loopReapt,u16 timeWait){    //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 307   1                                                
 308   1              u16 Local_Delay = timeWait;             
 309   1              u8      loop = 0;
 310   1                                                       
 311   1              for(loop = 0;loop < loopReapt;loop ++){
 312   2              
 313   2                      uartRX_toutFLG = 0;
 314   2                      zigbNwkAction_counter = timeWait;       
 315   2                  uartZigB_datsSend(frameREQ, frameREQ_Len);
 316   2                      
 317   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 318   3      
 319   3                              if(uartRX_toutFLG){
 320   4                              
 321   4                                      uartRX_toutFLG = 0;
 322   4                                      
 323   4                                      if(!memcmp(&(datsRcv_ZIGB.rcvDats[2]), resp_cmd, 2)){
 324   5                                      
 325   5                                              memcpy(resp_dats, datsRcv_ZIGB.rcvDats, datsRcv_ZIGB.rcvDatsLen);
 326   5                                              return datsRcv_ZIGB.rcvDatsLen;
 327   5                                              
 328   5                                      }
 329   4                              }
 330   3                      }
 331   2              }       
 332   1      
 333   1              return 0;
 334   1      }
 335          
 336          /*zigbeeµ¥Ö¸ÁîÏÂ·¢¼°ÏìÓ¦ÑéÖ¤*///×èÈû
 337          bit zigb_VALIDA_INPUT(u8 REQ_CMD[2],            //Ö¸Áî
 338                                                    u8 REQ_DATS[],                //Êı¾İ
 339                                                    u8 REQdatsLen,                //Êı¾İ³¤¶È
 340                                                    u8 ANSR_frame[],              //ÏìÓ¦Ö¡
 341                                                    u8 ANSRdatsLen,               //ÏìÓ¦Ö¡³¤¶È
 342                                                    u8 times,u16 timeDelay){      //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 343   1                                                 
 344   1      #define dataLen_validaInput     96
 345   1              u8 xdata dataTXBUF[dataLen_validaInput] = {0};
 346   1              u8      loop = 0;
 347   1              u8      datsTX_Len;
 348   1      
 349   1              datsTX_Len = ZigB_TXFrameLoad(dataTXBUF,REQ_CMD, 2, REQ_DATS, REQdatsLen);
 350   1      
 351   1              for(loop = 0;loop < times;loop ++){
 352   2              
 353   2                      uartRX_toutFLG = 0;
 354   2                      zigbNwkAction_counter = timeDelay;
 355   2                      uartZigB_datsSend(dataTXBUF, datsTX_Len);
 356   2                      
 357   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 358   3                              
 359   3                              if(uartRX_toutFLG){
 360   4                              
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 7   

 361   4                                      uartRX_toutFLG = 0;
 362   4                                      
 363   4                                      if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ANSR_frame, ANSRdatsLen)){
 364   5                                      
 365   5                                              delayMs(2);
 366   5                                              return 1;
 367   5                                      }
 368   4                              }
 369   3                      }
 370   2              }
 371   1              
 372   1              return 0;
 373   1      }
 374          
 375          ///*zigbeeÍ¨ĞÅ´ØÉèÖÃ*///×èÈû
 376          //bit zigb_clusterSet(u16 deviveID, u8 endPoint){
 377          
 378          //      datsAttr_ZigbInit code default_param = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x01,0x00,0x00,
             -0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,300};       //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 379          //      u8 code frameResponse_Subs[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾­×¢²á
 380          //              
 381          //#define       dataLen_zigbClusterSet  64
 382          //      u8 xdata paramTX_temp[dataLen_zigbClusterSet] = {0};
 383          //      
 384          //      bit setResult = 0;
 385          //      
 386          //      memcpy(paramTX_temp, default_param.zigbInit_reqDAT, default_param.reqDAT_num);
 387          //      paramTX_temp[0] = endPoint;
 388          //      paramTX_temp[3] = (u8)((deviveID & 0x00ff) >> 0);
 389          //      paramTX_temp[4] = (u8)((deviveID & 0xff00) >> 8);
 390          //      
 391          //      setResult =  zigb_VALIDA_INPUT( (u8 *)default_param.zigbInit_reqCMD,
 392          //                                                                      (u8 *)paramTX_temp,
 393          //                                                                      default_param.reqDAT_num,
 394          //                                                                      (u8 *)default_param.zigbInit_REPLY,
 395          //                                                                      default_param.REPLY_num,
 396          //                                                                      2,              //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 397          //                                                                      default_param.timeTab_waitAnsr);
 398          //      
 399          //      if(setResult)return setResult;
 400          //      else{
 401          //      
 402          //              return zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 403          //                                                               (u8 *)paramTX_temp,
 404          //                                                               default_param.reqDAT_num,
 405          //                                                               (u8 *)frameResponse_Subs,
 406          //                                                               6,
 407          //                                                               2,             //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 408          //                                                               default_param.timeTab_waitAnsr);
 409          //      }
 410          //}
 411          
 412          ///*zigbeeÖØĞÂÈëÍø*///×èÈûº¯Êı£¬½ö¹©²âÊÔÊ¹ÓÃ
 413          //bit ZigB_NwkJoin(u16 PANID, u8 CHANNELS){
 414          
 415          //#define       cmdNum_zigbNwkJoin      8       
 416          //      
 417          //#define        loop_PANID             5
 418          //#define        loop_CHANNELS  6
 419          
 420          //      datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkJoin] = {
 421          //              
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 8   

 422          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 423          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 424          //              {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³
             -õÊ¼»¯£¬È«²¿Çå¿Õ
 425          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¶ş´Î¸´Î»
 426          //              
 427          ////            {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨Ğ­µ÷Æ÷£©
 428          //              {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Â·ÓÉÆ÷£©
 429          ////            {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨ÖÕ¶Ë£©
 430          //              
 431          //              {       {0x27,0x02},    {0x34,0x12},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ
             -÷ÉèÖÃ
 432          //              {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµ
             -À¼Ä´æÆ÷ÅäÖÃ
 433          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 434          //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 435          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 436          //      };
 437          //      
 438          //#define       dataLen_zigbNwkJoin 64
 439          //      u8 xdata paramTX_temp[dataLen_zigbNwkJoin] = {0};
 440          //      
 441          //      u8  loop;
 442          //      u32 chnl_temp = 0x00000800UL << CHANNELS;
 443          //      
 444          //      for(loop = 1; loop < cmdNum_zigbNwkJoin; loop ++){
 445          //              
 446          //              memset(paramTX_temp, 0, dataLen_zigbNwkJoin * sizeof(u8));
 447          //              
 448          //              switch(loop){   //×ÔÑ¡²ÎÊı&Ä¬ÈÏ²ÎÊı
 449          //              
 450          //                      case loop_PANID:{
 451          //                      
 452          //                              paramTX_temp[0] = (u8)((PANID & 0x00ff) >> 0);
 453          //                              paramTX_temp[1] = (u8)((PANID & 0xff00) >> 8);
 454          //                              
 455          //                      }break;
 456          //                      
 457          //                      case loop_CHANNELS:{
 458          //                      
 459          //                              paramTX_temp[0] = (u8)((chnl_temp & 0x000000ff) >>  0);
 460          //                              paramTX_temp[1] = (u8)((chnl_temp & 0x0000ff00) >>  8);
 461          //                              paramTX_temp[2] = (u8)((chnl_temp & 0x00ff0000) >> 16);
 462          //                              paramTX_temp[3] = (u8)((chnl_temp & 0xff000000) >> 24);
 463          //                              
 464          //                      }break;
 465          //                      
 466          //                      default:{
 467          //                      
 468          //                              memcpy(paramTX_temp,ZigbInit_dats[loop].zigbInit_reqDAT,ZigbInit_dats[loop].reqDAT_num);
 469          //                              
 470          //                      }break;
 471          //              }
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 9   

 472          //      
 473          //              delayMs(100);
 474          //              if(0 == zigb_VALIDA_INPUT((u8 *)ZigbInit_dats[loop].zigbInit_reqCMD,
 475          //                                                                (u8 *)paramTX_temp,
 476          //                                                                ZigbInit_dats[loop].reqDAT_num,
 477          //                                                                (u8 *)ZigbInit_dats[loop].zigbInit_REPLY,
 478          //                                                                ZigbInit_dats[loop].REPLY_num,
 479          //                                                                3,
 480          //                                                                ZigbInit_dats[loop].timeTab_waitAnsr)
 481          //                                                               )loop = 0;
 482          //      }
 483          //      
 484          //      return zigb_clusterSet(13, 13); //Éè±¸ID 13£¬ÖÕ¶Ëµã 13£»
 485          //}
 486          
 487          /*zigbee Ö÷¶¯¿ª·ÅÍøÂç*///×èÈû
 488          bit ZigB_nwkOpen(bit openIF, u8 openTime){
 489   1      
 490   1              datsAttr_ZigbInit code default_param = {{0x26,0x08}, {0xFC,0xFF,0x00}, 0x03, {0xFE,0x01,0x66,0x08,0x00,0x
             -6F}, 0x06, 150}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 491   1              
 492   1              bit resultSet = 0;
 493   1              
 494   1              u8 openTime_temp = 0;
 495   1              
 496   1      #define paramLen_zigbNwkOpen 3
 497   1              u8 xdata paramTX_temp[paramLen_zigbNwkOpen] = {0xFC,0xFF,0x00};
 498   1              
 499   1              (openIF)?(paramTX_temp[2] = openTime):(paramTX_temp[2] = 0);
 500   1              
 501   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 502   1                                                                        (u8 *)paramTX_temp,
 503   1                                                                        default_param.reqDAT_num,
 504   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 505   1                                                                        default_param.REPLY_num,
 506   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 507   1                                                                        default_param.timeTab_waitAnsr);
 508   1      
 509   1      //#if(DEBUG_LOGOUT_EN == 1)     
 510   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 511   1      //              
 512   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 513   1      //              sprintf(log_buf, "nwkOpen result:%d.\n", (int)resultSet);
 514   1      //              PrintString1_logOut(log_buf);
 515   1      //      }
 516   1      //#endif
 517   1              
 518   1              return resultSet;
 519   1      }
 520          
 521          /*zigbee PANID»ñÈ¡*///×èÈû
 522          static u16 ZigB_getPanIDCurrent(void){
 523   1      
 524   1              u16 PANID_temp = 0;
 525   1              
 526   1      #define paramLen_zigbPanIDGet 32
 527   1              u8 xdata paramTX_temp[paramLen_zigbPanIDGet] = {0};
 528   1              
 529   1              u8 code frameREQ_zigbPanIDGet[6] = {0xFE, 0x01, 0x26, 0x06, 0x06, 0x27};        //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 530   1              u8 code cmdResp_zigbPanIDGet[2]  = {0x66, 0x06};        //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 531   1              u8 datsResp_Len = 0;
 532   1      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 10  

 533   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbPanIDGet, 6, cmdResp_zigbPanIDGet, paramTX_temp, 2, 300);
 534   1      
 535   1              if(datsResp_Len){
 536   2      
 537   2                      PANID_temp |= (((u16)(paramTX_temp[5]) << 0) & 0x00FF);
 538   2                      PANID_temp |= (((u16)(paramTX_temp[6]) << 8) & 0xFF00);
 539   2      
 540   2      //              printf_datsHtoA("[Tips_uartZigb]: resultDats:", local_datsParam->frameResp, local_datsParam->frameResp
             -Len);
 541   2              }
 542   1      
 543   1              return PANID_temp;
 544   1      }
 545          
 546          /*zigbeeÏµÍ³Ê±¼ä»ñÈ¡²¢¸üĞÂ*///×èÈû
 547          static bit getSystemTime_reales(void){
 548   1              
 549   1              bit resultOpreat = 0;
 550   1      
 551   1      #define paramLen_zigbSystimeGet 32
 552   1              u8 xdata paramTX_temp[paramLen_zigbSystimeGet] = {0};
 553   1              
 554   1              u8 code frameREQ_zigbSystimeGet[5] = {0xFE, 0x00, 0x21, 0x11, 0x30};    //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 555   1              u8 code cmdResp_zigbSystimeGet[2]  = {0x61, 0x11};      //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 556   1              u8 datsResp_Len = 0;
 557   1      
 558   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbSystimeGet, 5, cmdResp_zigbSystimeGet, paramTX_temp, 2, 300)
             -;
 559   1              
 560   1              if(!datsResp_Len)resultOpreat = 0;
 561   1              else{
 562   2                      
 563   2                      u16 Y_temp16 = ((u16)paramTX_temp[13] << 0) | ((u16)paramTX_temp[14] << 8);
 564   2                      u8  Y_temp8 = 0;
 565   2                      u8  M_temp8 = 0;
 566   2                      
 567   2                      u8 Y = (u8)(Y_temp16 % 2000);
 568   2                      u8 M = paramTX_temp[11];
 569   2                      u8 D = paramTX_temp[12];
 570   2                      u8 W = 0;
 571   2                      
 572   2                      /*¼ÆËã»º´æ¸³Öµ*/
 573   2                      Y_temp8 = Y;
 574   2                      if(M == 1 || M == 2){ //Ò»ÔÂºÍ¶şÔÂµ±×÷ÉÏÒ»ÄêÊ®ÈıÔÂºÍÊ®ËÄÔÂ
 575   3                      
 576   3                              M_temp8 = M + 12;
 577   3                              Y_temp8 --;
 578   3                      }
 579   2                      else M_temp8 = M;
 580   2                      
 581   2                      /*¿ªÊ¼¼ÆËã*/
 582   2                      W =      Y_temp8 + (Y_temp8 / 4) + 5 - 40 + (26 * (M_temp8 + 1) / 10) + D - 1;  //²ÌÀÕ¹«Ê½
 583   2                      W %= 7; 
 584   2                      
 585   2                      /*¼ÆËã½á¹û¸³Öµ*/
 586   2                      W?(systemTime_current.time_Week = W):(systemTime_current.time_Week = 7);
 587   2                      
 588   2                      systemTime_current.time_Month =         M;
 589   2                      systemTime_current.time_Day =           D;
 590   2                      systemTime_current.time_Year =          Y;
 591   2                      
 592   2                      systemTime_current.time_Hour =          paramTX_temp[8];
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 11  

 593   2                      systemTime_current.time_Minute =        paramTX_temp[9];
 594   2                      systemTime_current.time_Second =        paramTX_temp[10];
 595   2                      
 596   2                      /*±¾µØÊ±¼äÎ¬³Ö¼ÆÊıÖµĞ£×¼¸üĞÂ*/
 597   2                      sysTimeKeep_counter = systemTime_current.time_Minute * 60 + systemTime_current.time_Second; //ÏµÍ³Ê±¼äÎ¬
             -³Ö¼ÆÊıÖµ¸üĞÂ
 598   2                      
 599   2                      resultOpreat = 1;
 600   2              }
 601   1              
 602   1      //#if(DEBUG_LOGOUT_EN == 1)     
 603   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 604   1      //              
 605   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 606   1      //              sprintf(log_buf, "sysTime reales result:%d.\n", (int)resultOpreat);
 607   1      //              PrintString1_logOut(log_buf);
 608   1      //      }
 609   1      //#endif
 610   1              
 611   1              return resultOpreat;
 612   1      }
 613          
 614          /*zigbeeÏµÍ³Ê±¼äÉèÖÃ*///×èÈû
 615          static
 616          bit zigB_sysTimeSet(u32 timeStamp, bit timeZoneAdjust_IF){
 617   1      
 618   1              datsAttr_ZigbInit code default_param = {{0x21,0x10},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00},0x0B,{0xFE,0x01,0x61,0x10,0x00},0x05,100}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 619   1              u8 xdata timeStampArray[0x0B] = {0};
 620   1              bit resultSet = 0;
 621   1              u32 timeStamp_temp = timeStamp;
 622   1              
 623   1              if(timeZoneAdjust_IF){ //ÊÇ·ñĞèÒªÊ±Çøµ÷Õû
 624   2              
 625   2                      if(sysTimeZone_H <= 12){
 626   3                      
 627   3                              timeStamp_temp += (3600UL * (long)sysTimeZone_H + 60UL * (long)sysTimeZone_M); //Ê±ÇøÕı
 628   3                              
 629   3                      }else
 630   2                      if(sysTimeZone_H > 12 && sysTimeZone_H <= 24){
 631   3                      
 632   3                              timeStamp_temp -= (3600UL * (long)(sysTimeZone_H - 12) + 60UL * (long)sysTimeZone_M); //Ê±Çø¸º
 633   3                              
 634   3                      }else
 635   2                      if(sysTimeZone_H >= 30){
 636   3                      
 637   3                              timeStamp_temp += (3600UL * (long)(sysTimeZone_H - 17) + 60UL * (long)sysTimeZone_M); //Ê±ÇøÌØÊâ
 638   3                      }
 639   2              }
 640   1      
 641   1              timeStampArray[0] = (u8)((timeStamp_temp & 0x000000ff) >> 0);
 642   1              timeStampArray[1] = (u8)((timeStamp_temp & 0x0000ff00) >> 8);
 643   1              timeStampArray[2] = (u8)((timeStamp_temp & 0x00ff0000) >> 16);
 644   1              timeStampArray[3] = (u8)((timeStamp_temp & 0xff000000) >> 24);
 645   1              
 646   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 647   1                                                                        (u8 *)timeStampArray,
 648   1                                                                        default_param.reqDAT_num,
 649   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 650   1                                                                        default_param.REPLY_num,
 651   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 652   1                                                                        default_param.timeTab_waitAnsr);
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 12  

 653   1              
 654   1      //#if(DEBUG_LOGOUT_EN == 1)     
 655   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 656   1      //              
 657   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 658   1      //              sprintf(log_buf, "sysTime set result:%d.\n", (int)resultSet);
 659   1      //              PrintString1_logOut(log_buf);
 660   1      //      }
 661   1      //#endif
 662   1              
 663   1              return resultSet;
 664   1      }
 665          
 666          ///*zigbeeÓ²¼ş¸´Î»³õÊ¼»¯*///×èÈû
 667          //bit ZigB_resetInit(void){
 668          
 669          //#define zigbInit_loopTry              3
 670          //#define zigbInit_onceWait     5000
 671          
 672          //      u8 code initCmp_Frame[11] = {0xFE, 0x06, 0x41, 0x80, 0x01, 0x02, 0x00, 0x02, 0x06, 0x03, 0xC3};
 673          //      
 674          //      u8      loop = 0;
 675          //      u16 timeWait = 0;
 676          //      
 677          //      for(loop = 0; loop < zigbInit_loopTry; loop ++){
 678          //      
 679          //              zigbPin_RESET = 0;
 680          //              delayMs(100);
 681          //              zigbPin_RESET = 1;
 682          //              
 683          //              timeWait = zigbInit_onceWait;
 684          //              while(timeWait --){
 685          //              
 686          //                      delayMs(2);     //±ØĞëÑÓÊ±
 687          //                      if(uartRX_toutFLG){
 688          //                      
 689          //                              uartRX_toutFLG = 0;
 690          //                              
 691          //                              if(!memcmp(datsRcv_ZIGB.rcvDats, initCmp_Frame, 11)){
 692          //                              
 693          //                                      return 1;
 694          //                                      
 695          //                              }else{
 696          //                                      
 697          //                                      delayMs(1);     //±ØĞëÑÓÊ±
 698          //                              }
 699          //                      }
 700          //              }
 701          //      }
 702          //      
 703          //      return 0;
 704          //}
 705          
 706          ///*zigbee³õÊ¼»¯×Ô¼ì*///×èÈû
 707          //bit ZigB_inspectionSelf(void){        
 708          //      
 709          //#define       paramLen_zigbInspection 64
 710          //      u8 xdata paramTX_temp[paramLen_zigbInspection] = {0};
 711          //      
 712          ////    bit REQResult = 0;
 713          //      
 714          ////    u8 code frameREQ_zigbStatusCheck[5] = {0xFE, 0x00, 0x27, 0x00, 0x27};   //zigb×´Ì¬²éÑ¯Ö¸ÁîÖ¡
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 13  

 715          ////    u8 code cmdResp_zigbStatusCheck[2]      = {0x67, 0x00}; //zigb×´Ì¬²éÑ¯ÏìÓ¦Ö¸Áî
 716          //      u8 code frameREQ_zigbJoinNWK[5]         = {0xFE, 0x00, 0x26, 0x00, 0x26};       //zigb¼¤»îÍøÂçÖ¸ÁîÖ¡
 717          //      u8 code cmdResp_zigbJoinNWK[2]          = {0x45, 0xC0}; //zigb¼¤»îÍøÂçÏìÓ¦Ö¸Áî
 718          //      u8 datsResp_Len = 0;
 719          //      
 720          ////    datsResp_Len = zigb_datsRequest(frameREQ_zigbStatusCheck, 5, cmdResp_zigbStatusCheck, paramTX_temp, 2
             -, 500);
 721          ////    if(paramTX_temp[16] == 0x07)REQResult
 722          //      
 723          //      datsResp_Len = zigb_datsRequest(frameREQ_zigbJoinNWK, 5, cmdResp_zigbJoinNWK, paramTX_temp, 2, 5000);
 724          //      if(paramTX_temp[4] == 0x07)return (zigb_clusterSet(13, 13) & zigb_clusterSet(13, 14));  //Éè±¸ID 13£¬ÖÕ¶
             -Ëµã 13£»        
 725          //      else{
 726          //      
 727          //              return 0;
 728          //      }
 729          //}
 730          
 731          /*zigbee·Ç×èÈûÈëÍøÇëÇó×´Ì¬»ú*///·Ç×èÈû ---ĞÅµÀÄ¬ÈÏµÚËÄĞÅµÀ
 732          static 
 733          void zigB_nwkJoinRequest(bit reJoin_IF){
 734   1      
 735   1      #define cmdNum_zigbNwkREQ       9       
 736   1      
 737   1              datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkREQ] = {
 738   1      
 739   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Ó²¼ş)
 740   1      //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x00,0x02,0x00,0x02,0x06,0x03,0xC2},       0x0B,   4000    },      
             -//¸´Î»(Ìæ²¹)
 741   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Èí¼ş)
 742   1                      {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³õÊ
             -¼»¯£¬È«²¿Çå¿Õ
 743   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¶ş´Î¸´Î»(Èí¼ş)
 744   1                      
 745   1      //              {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Ğ­µ÷Æ÷£©
 746   1                      {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖÃ£
             -¨Â·ÓÉÆ÷£©
 747   1      //              {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨ÖÕ¶Ë£©
 748   1                      
 749   1                      {       {0x27,0x02},    {0xFF,0xFF},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ÷É
             -èÖÃ
 750   1                      {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµÀ¼
             -Ä´æÆ÷ÅäÖÃ
 751   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 752   1                      {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   8000    },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨½ÇÉ
             -«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 753   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 754   1                      {       {0x26,0x08},    {0xFC,0xFF,0x00},               0x03,   {0xFE,0x01,0x66,0x08,0x00,0x6F},                                                        0x06,   150             },  //¹Ø±Õ
             -ÍøÂç
 755   1              };
 756   1              
 757   1              datsAttr_ZigbInit code defaultParam_clusterRegister = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x
             -01,0x00,0x00,0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,500};  //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 758   1              u8 code frameResponseSubs_clusterRegister[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾
             -­×¢²á
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 14  

 759   1              
 760   1      #define clusterNum_default 3
 761   1              datsAttr_clusterREG code cluster_Default[clusterNum_default] = {
 762   1              
 763   1                      {ZIGB_ENDPOINT_CTRLSECENARIO, zigbDatsDefault_ClustID}, 
 764   1                      {ZIGB_ENDPOINT_CTRLNORMAL, zigbDatsDefault_ClustID}, 
 765   1                      {ZIGB_ENDPOINT_CTRLSYSZIGB, zigbDatsDefault_ClustID}
 766   1              };
 767   1              
 768   1      #define dataLen_zigbNwkREQ 64
 769   1              u8 xdata paramTX_temp[dataLen_zigbNwkREQ] = {0};
 770   1              
 771   1              static u8 xdata step_CortexA = 0, //×´Ì¬»ú-Ö÷²½Öè
 772   1                                xdata step_CortexB = 0; //×´Ì¬»ú-×Ó²½Öè
 773   1              static u8 xdata reactionLoop = 0; //ÖØ¸´´ÎÊı»º´æ
 774   1                         u8 xdata actionReaptDefine_normal = 2; //ÖØ¸´´ÎÊı¶¨Òå_³£¹æÖ¸ÁîÏÂ
 775   1              
 776   1              u8 datsTX_Len = 0;
 777   1              
 778   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
 779   2              
 780   2                      devStatus_switch.statusChange_IF = 0;
 781   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
 782   2                      
 783   2                      step_CortexA = 0;
 784   2                      step_CortexB = 0;
 785   2                      reactionLoop = 0;
 786   2                      zigbPin_RESET = 1;
 787   2                      
 788   2                      return;
 789   2              }
 790   1              
 791   1              if(step_CortexA > (cmdNum_zigbNwkREQ + clusterNum_usr + clusterNum_default)){ //ÅĞ¶Ïµ±Ç°×´Ì¬»úÄÚ²¿×´Ì¬Á÷³
             -ÌÊÇ·ñÍê³É
 792   2              
 793   2                      step_CortexA = 0;
 794   2                      step_CortexB = 0;
 795   2                      reactionLoop = 0;
 796   2                      zigbPin_RESET = 1;
 797   2                      
 798   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES; //systime¸üĞÂÖÜÆÚÖØÖÃ£¬·ÀÖ¹¶àÖ¸Áî¶ÂÈû³åÍ»
 799   2                      
 800   2                      devRunning_Status = status_passiveDataRcv; //Íâ²¿×´Ì¬ÇĞ»»
 801   2                      devTips_status = status_Normal; //Éè±¸ÏµÍ³tips×´Ì¬ÇĞ»»
 802   2                      
 803   2                      dev_currentPanid = ZigB_getPanIDCurrent(); //¸üĞÂÒ»´ÎPANID,±ÜÃâ¶ş´ÎÖØĞÂ¼ÓÍø²ĞÁôÀÏµÄPANID
 804   2                      
 805   2      #if(DEBUG_LOGOUT_EN == 1)
 806   2                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 807   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 808   3                              sprintf(log_buf, "nwkZigb connect/rejoin all complete.\n");
 809   3                              PrintString1_logOut(log_buf);
 810   3                      }                       
 811   2      #endif
 812   2                      
 813   2                      return;
 814   2              }
 815   1              
 816   1              if(!reJoin_IF)if(step_CortexA == 0)step_CortexA = 7; //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔò²»½øĞĞÓ²¼ş¸´Î»(Ó²¼ş¸
             -´Î»½«µ¼ÖÂ±¾µØÊ±¼ä±»ÖØÖÃ)
 817   1              if((step_CortexA == 7) || (step_CortexA == 0))sysTimeReales_counter     = PERIOD_SYSTIMEREALES; //·Ç×èÈû¹Ø¼üÖ
             -¸Áî²»ÄÜ±»×èÈûÖ¸Áî´ò¶Ï£¨Ó²¼ş¸´Î» ºÍ ÈëÍøÊ± ÖĞ¶Ï×èÈûÖ¸ÁîÏÂ´ï£©
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 15  

 818   1              
 819   1      #if(DEBUG_LOGOUT_EN == 1)
 820   1              {//Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 821   2              #define STATUSMACHINE_NWKREQ_DISPINITVAL 255
 822   2                      static u8 xdata stepDisp_CortexA = STATUSMACHINE_NWKREQ_DISPINITVAL;
 823   2                      
 824   2                      if(stepDisp_CortexA != step_CortexA){
 825   3                      
 826   3                              stepDisp_CortexA = step_CortexA;
 827   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 828   3                              sprintf(log_buf, "nwkZigb connect/rejoin mainStep-%02d@method:%d complete.\n", (int)stepDisp_CortexA, (
             -int)reJoin_IF);
 829   3                              PrintString1_logOut(log_buf);
 830   3                      }
 831   2              }
 832   1      #endif
 833   1              
 834   1              if(step_CortexA == 0){ //ÌØÊâÖ¸Áî_Ó²¼ş¸´Î»:<0>
 835   2              
 836   2                      switch(step_CortexA){
 837   3                      
 838   3                              case 0:{ //Ê×ÌõÖ¸Áî£¬Ó²¼ş¸´Î»
 839   4                              
 840   4                                      switch(step_CortexB){
 841   5                                      
 842   5                                              case 0:{ //²½ÖèÒ»£ºÓ²¼şÀ­µÍ100ms
 843   6                                              
 844   6                                                      zigbPin_RESET = 0;
 845   6                                                      zigbNwkAction_counter = 200;
 846   6                                                      step_CortexB = 1;
 847   6                                              
 848   6                                              }break;
 849   5                                      
 850   5                                              case 1:{ //²½Öè¶ş£ºÓ²¼şÀ­µÍÍê±ÏºóÈ·ÈÏÓ¦´ğÖ¡Ê±³¤
 851   6                                              
 852   6                                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı6000ms
 853   7                                                      
 854   7                                                              zigbPin_RESET = 1;
 855   7                                                              zigbNwkAction_counter = 6000;
 856   7                                                              step_CortexB = 2;
 857   7                                                      }
 858   6                                                      
 859   6                                              }break;
 860   5                                              
 861   5                                              case 2:{ //²½Öè¶ş£ºÈ·ÈÏÓ¦´ğÖ¡
 862   6                                                      
 863   6                                                      if(!zigbNwkAction_counter)step_CortexB = 0; //·Ç×èÈûµÈ´ıÏìÓ¦
 864   6                                              
 865   6                                                      if(uartRX_toutFLG){
 866   7                                                      
 867   7                                                              uartRX_toutFLG = 0;
 868   7                                                              
 869   7                                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[0].zigbInit_REPLY, ZigbInit_dats[0].RE
             -PLY_num)){
 870   8                              
 871   8                                                                      step_CortexB = 0;
 872   8                                                                      reactionLoop = 0;
 873   8                                                                      step_CortexA ++;
 874   8                                                              }
 875   7                                                      }
 876   6                                                      
 877   6                                              }break;
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 16  

 878   5                                      }
 879   4                                      
 880   4                              }break;
 881   3                      }
 882   2              }else
 883   1              if(step_CortexA > 0 && step_CortexA < cmdNum_zigbNwkREQ){ //³£¹æÖ¸Áî:<1 - 9>
 884   2                      
 885   2      //              if(!reJoin_IF)if(step_CortexA == 2)step_CortexA = 7;    //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔòÖ»½øĞĞ±»¶¯ÍøÂç¼¤»
             -î
 886   2      
 887   2                      switch(step_CortexB){
 888   3                      
 889   3                              case 0:{
 890   4                                      
 891   4                                      (step_CortexA == 7)?(actionReaptDefine_normal = 12):(actionReaptDefine_normal =  2); //ÓÉÓÚÈëÍø¹ı³Ì½Ï¸
             -´ÔÓ£¬ÈëÍøÖ¸ÁîµÈ´ıÊ±¼ä·Å³¤
 892   4                                      
 893   4                                      if(reactionLoop > actionReaptDefine_normal){
 894   5                                              
 895   5                                              reactionLoop = 0;
 896   5                                              step_CortexA = 0;
 897   5                                              break;
 898   5                                      }
 899   4                                      
 900   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 901   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqCMD, 
 902   4                                                                                                2, 
 903   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqDAT, 
 904   4                                                                                                ZigbInit_dats[step_CortexA].reqDAT_num);
 905   4                                      
 906   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 907   4                                      
 908   4                                      zigbNwkAction_counter = ZigbInit_dats[step_CortexA].timeTab_waitAnsr;
 909   4                                      step_CortexB = 1;
 910   4                                      
 911   4                              }break;
 912   3                                      
 913   3                              case 1:{
 914   4                                      
 915   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 916   5                                      
 917   5                                              reactionLoop ++;
 918   5                                              step_CortexB = 0;
 919   5                                      }
 920   4                                      else
 921   4                                      if(uartRX_toutFLG){
 922   5                                      
 923   5                                              uartRX_toutFLG = 0;
 924   5                                              
 925   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[step_CortexA].zigbInit_REPLY, ZigbInit_d
             -ats[step_CortexA].REPLY_num)){
 926   6                                              
 927   6                                                      step_CortexB = 0;
 928   6                                                      reactionLoop = 0;
 929   6                                                      step_CortexA ++;
 930   6                                              }
 931   5                                      }
 932   4                                      
 933   4                              }break;
 934   3                      }
 935   2                      
 936   2              }else
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 17  

 937   1              if(step_CortexA >= cmdNum_zigbNwkREQ){ //ÌØÊâÖ¸Áî_³£¹æÍ¨ĞÅ´Ø×¢²á:<10 - n>
 938   2                      
 939   2                      u8 datsREG_cluster[16] = {0};
 940   2                      memcpy(datsREG_cluster, defaultParam_clusterRegister.zigbInit_reqDAT, defaultParam_clusterRegister.reqDA
             -T_num);
 941   2                      if(step_CortexA < (cmdNum_zigbNwkREQ + clusterNum_default)){ //Ä¬ÈÏ×¨ÓÃÍ¨ĞÅ´Ø²ÎÊıÌî×°
 942   3                      
 943   3                              datsREG_cluster[0] = cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].endpoint;
 944   3                              datsREG_cluster[3] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0x00ff) >> 0);
 945   3                              datsREG_cluster[4] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0xff00) >> 8);
 946   3                              
 947   3                      }else{  //ÓÃ»§Í¨ĞÅ´Ø£¨»¥¿Ø£©×¢²á²ÎÊıÌî×°
 948   3                      
 949   3                              if((CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] >= 0x10) && (CTRLEATHER_PORT[ste
             -p_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] < 255)){ //Í¨ĞÅ´Ø¶Ë¿ÚºÏ·¨ĞÔÅĞ¶Ï
 950   4                              
 951   4                                      datsREG_cluster[0] = CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr];
 952   4                                      datsREG_cluster[3] = zigbDatsDefault_ClustID; //Ä¬ÈÏ´ØID <LSB>
 953   4                                      datsREG_cluster[4] = 0; //Ä¬ÈÏ´ØID <MSB>
 954   4                                      
 955   4                              }else{
 956   4                              
 957   4                                      step_CortexA ++;
 958   4                                      return;
 959   4                              }
 960   3                      }
 961   2              
 962   2                      switch(step_CortexB){
 963   3                      
 964   3                              case 0:{
 965   4                                      
 966   4                                      if(reactionLoop > 2){
 967   5                                              
 968   5                                              reactionLoop = 0;
 969   5                                              step_CortexA = 0;
 970   5                                              break;
 971   5                                      }
 972   4                                      
 973   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 974   4                                                                                                defaultParam_clusterRegister.zigbInit_reqCMD, 
 975   4                                                                                                2, 
 976   4                                                                                                datsREG_cluster, 
 977   4                                                                                                defaultParam_clusterRegister.reqDAT_num);
 978   4                                      
 979   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 980   4                                      
 981   4                                      zigbNwkAction_counter = defaultParam_clusterRegister.timeTab_waitAnsr;
 982   4                                      step_CortexB = 1;
 983   4                                      
 984   4                              }break;
 985   3                                      
 986   3                              case 1:{
 987   4                                      
 988   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 989   5                                      
 990   5                                              reactionLoop ++;
 991   5                                              step_CortexB = 0;
 992   5                                      }
 993   4                                      else
 994   4                                      if(uartRX_toutFLG){
 995   5                                      
 996   5                                              uartRX_toutFLG = 0;
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 18  

 997   5                                              
 998   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, defaultParam_clusterRegister.zigbInit_REPLY, defaultPa
             -ram_clusterRegister.REPLY_num) || //Ô¤ÆÚÏìÓ¦
 999   5                                                 memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, frameResponseSubs_clusterRegister, 6)){ //Ìæ²¹ÏìÓ¦
1000   6                                              
1001   6                                                      step_CortexB = 0;
1002   6                                                      reactionLoop = 0;
1003   6                                                      step_CortexA ++;
1004   6                                              }
1005   5                                      }
1006   4                                      
1007   4                              }break;
1008   3                      }
1009   2              }
1010   1      }
1011          
1012          /*zigbeeÍøÂçÊı¾İ·¢ËÍ¸ñÊ½»¯Ìî×°*/
1013          static 
1014          u8 zigb_datsLoad_datsSend(u8  frame_Temp[NORMALDATS_DEFAULT_LENGTH],
1015                                                            u16 DstAddr,
1016                                                            u8  portPoint,
1017                                                            u8  dats[],
1018                                                            u8  datsLen){
1019   1              
1020   1              u8 code zigbCMD_DatsSend[2] = {0x24, 0x01};
1021   1              
1022   1      #define zigbDatsSend_datsTransLen       (128 + 25)
1023   1              u8 xdata buf_datsLOAD[zigbDatsSend_datsTransLen] = {0};
1024   1              u8 datsTX_Len = 0;
1025   1                                                                
1026   1              memset(frame_Temp, 0, NORMALDATS_DEFAULT_LENGTH * sizeof(u8));  
1027   1      
1028   1              //·¢ËÍÖ¡Ìî×°
1029   1              buf_datsLOAD[0] = (u8)((DstAddr & 0x00ff) >> 0);
1030   1              buf_datsLOAD[1] = (u8)((DstAddr & 0xff00) >> 8);
1031   1              buf_datsLOAD[2] = portPoint;
1032   1              buf_datsLOAD[3] = portPoint;
1033   1              buf_datsLOAD[4] = zigbDatsDefault_ClustID;
1034   1              buf_datsLOAD[6] = zigbDatsDefault_TransID;
1035   1              buf_datsLOAD[7] = zigbDatsDefault_Option;
1036   1              buf_datsLOAD[8] = zigbDatsDefault_Radius;
1037   1              buf_datsLOAD[9] = datsLen;
1038   1              memcpy(&buf_datsLOAD[10], dats, datsLen);       
1039   1              
1040   1              return ZigB_TXFrameLoad(frame_Temp, (u8 *)zigbCMD_DatsSend, 2, buf_datsLOAD, datsLen + 10);
1041   1      }
1042          
1043          /*zigbeeÎŞÊÓÏìÓ¦»Ø¸´Ö±½Ó·¢ËÍÊı¾İ*///×èÈû
1044          static
1045          void dataSendRemote_straightforward( u16 DstAddr, //Ô¶¶ËÍøÂç¶ÌµØÖ·
1046                                                                                    u8 port,       //¶Ëµã¿Ú
1047                                                                                    u8 dats[], //Êı¾İ
1048                                                                                    u8 datsLen ){ //Êı¾İ³¤¶È
1049   1                                                                                                                                                
1050   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1051   1              u8 datsTX_Len = 0;
1052   1              
1053   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, DstAddr, port, dats, datsLen);
1054   1              
1055   1              uartZigB_datsSend(buf_datsTX, datsTX_Len);
1056   1      }
1057          
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 19  

1058          /*zigbeeÍøÂçÊı¾İ·¢ËÍÇëÇó×´Ì¬»ú*///·Ç×èÈû
1059          static
1060          void dataTransRequest_datsSend(void){
1061   1      
1062   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1063   1              u8 datsTX_Len = 0;
1064   1              
1065   1      #define zigbDatsSend_datsRespLen        64
1066   1              u8 xdata buf_datsRX[zigbDatsSend_datsRespLen] = {0};
1067   1              u8 datsRX_Len = 0;
1068   1              
1069   1      #define zigbDatsSend_ASR_datsLen        3
1070   1              u8              ASR_dats[zigbDatsSend_ASR_datsLen] = {0};
1071   1              u8 code ASR_cmd[2] = {0x44,0x80};       //±¾µØZNPĞ­Òé²ãÈ·ÈÏ·¢ËÍÏìÓ¦
1072   1              
1073   1      #define resCODE_datsSend_NOROUTER 0xCD  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-Â·ÓÉÊ§Áª£¬Í¨Ñ¶Ã½½é¶ªÊ§
1074   1      #define resCODE_datsSend_NOREMOTE 0xE9  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-¶Ô·½²»ÔÚÏß£¬Ä¿±êµØÖ·½ÚµãÉè±¸²»´æÔÚ
1075   1      #define resCODE_datsSend_TIMEOUT  0x01  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³¬Ê±
1076   1      #define resCODE_datsSend_SUCCESS  0x00  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³É¹¦
1077   1              static u8 datsTrans_respondCode = 0; //·¢ËÍÍê³ÉÏìÓ¦Âë
1078   1              
1079   1              static u8 step = 0;
1080   1              static u8 reactionLoop = 0;
1081   1              
1082   1              if(devStatus_switch.statusChange_IF){   //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1083   2              
1084   2                      devStatus_switch.statusChange_IF = 0;
1085   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1086   2                      
1087   2                      step = 0;
1088   2                      reactionLoop = 0;
1089   2                      
1090   2                      return;
1091   2              }
1092   1              
1093   1              //½ÓÊÕÖ¡Ìî×°_±¾µØ
1094   1              ASR_dats[0] = resCODE_datsSend_SUCCESS; //·¢ËÍ³É¹¦ÏìÓ¦´úÂë
1095   1              ASR_dats[1] = datsSend_request.portPoint;
1096   1              ASR_dats[2] = zigbDatsDefault_TransID;
1097   1              datsRX_Len = ZigB_TXFrameLoad(buf_datsRX, (u8 *)ASR_cmd, 2, ASR_dats, zigbDatsSend_ASR_datsLen);
1098   1              
1099   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, datsSend_request.nwkAddr, datsSend_request.portPoint, dat
             -sSend_request.datsTrans.dats, datsSend_request.datsTrans.datsLen);
1100   1              
1101   1              switch(step){
1102   2              
1103   2                      case 0:{ //ÏìÓ¦½ÓÊÕ¾ÍĞ÷£¬ÉèÖÃÏìÓ¦Ê±¼ä
1104   3                              
1105   3                              if(reactionLoop > 3){ //ÖØ·¢´ÎÊıÒÑ³¬³ö
1106   4                                      
1107   4                                      datsTrans_respondCode = resCODE_datsSend_TIMEOUT; //ÏìÓ¦Âë¸ÄÎª³¬Ê±
1108   4                                      
1109   4                                      reactionLoop = 0;
1110   4                                      step = 4;
1111   4                                      
1112   4                                      break;
1113   4                              }
1114   3                      
1115   3                              zigbPin_RESET = 1; //±£ÏÕÆğ¼û£¬¸´Î»À­¸ß
1116   3                              if(!devRemoteDataReqMethod.keepTxUntilCmp_IF)uartZigB_datsSend(buf_datsTX, datsTX_Len); //·ÇËÀ¿Ä£¬·¢Ò»´
             -Î¾ÍĞĞ
1117   3                              zigbNwkAction_counter = REMOTE_DATAREQ_TIMEOUT; //Ä¬ÈÏĞ­Òé²ãÏìÓ¦Ê±¼ä<Ê±¼äÌ«¶ÌÎŞ·¨ÊÕµ½ºóÃæµÄ½ÓÊÕ×´Ì¬ÏìÓ¦
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 20  

             -Ö¸Áî£¬Ö»ÄÜÊÕµ½ÏµÍ³ÏìÓ¦>
1118   3                              step = 1;
1119   3                              
1120   3                      }break;
1121   2                      
1122   2                      case 1:{ //·Ç×èÈûµÈ´ıÏµÍ³ÏìÓ¦
1123   3                              
1124   3                              static u8 xdata local_funRecord = 0; //±¾µØ ³ı´Î±È ÅĞ¶Ï
1125   3                                         u8 xdata funRecord_temp = zigbNwkAction_counter / devRemoteDataReqMethod.datsTxKeep_Period; //³ı´Î±
             -È£¬ÓÃÓÚÖÜÆÚÅĞ¶Ï
1126   3                      
1127   3                              if(!zigbNwkAction_counter){ //³¬Ê±ÅĞ¶Ï
1128   4                              
1129   4                                      reactionLoop ++;
1130   4                                      step = 0;
1131   4                                      local_funRecord = 0;
1132   4                              }
1133   3                              else{
1134   4                                      
1135   4                                      if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //ËÀ¿Ä·½Ê½ÏÂ£¬³¬Ê±Ê±¼äÄÚ£¬ÖÜÆÚÑ­»·ÏÂ·¢Ö¸Áî
1136   5                                              
1137   5                                              if(local_funRecord != funRecord_temp){ //°´³ÖĞøÆµÂÊ³ÖĞø·¢ËÍ
1138   6                                              
1139   6                                                      local_funRecord = funRecord_temp; //±¾µØ³ı´Î±È¸üĞÂ
1140   6                                                      
1141   6                                                      uartZigB_datsSend(buf_datsTX, datsTX_Len);
1142   6                                              }
1143   5                                      }
1144   4                                      
1145   4                                      if(uartRX_toutFLG){
1146   5                                      
1147   5                                              uartRX_toutFLG = 0;
1148   5      
1149   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, buf_datsRX, datsRX_Len)){ //Ó¦´ğÖ¸ÁîºÍÓ¦´ğÂë¶¼ÕıÈ·
1150   6                                              
1151   6                                                      if(datsRcv_respond.datsTrans.datsLen == 0){ //ÅĞ¶ÏÌõ¼şÊÇ·ñĞèÒªÔ¶¶ËÏìÓ¦
1152   7                                                      
1153   7                                                              step = 3;
1154   7                                                              
1155   7                                                      }else{
1156   7                                                      
1157   7                                                              step = 2;
1158   7                                                              zigbNwkAction_counter = REMOTE_RESPOND_TIMEOUT; //Ä¬ÈÏÔ¶¶ËÏìÓ¦Ê±¼ä<¶Ô·½½ÚµãÏìÓ¦>
1159   7                                                      }
1160   6                                                      
1161   6                                                      local_funRecord = 0; //±¾µØ³ı´Î±È¸´Î»
1162   6                                                      
1163   6                                              }else{  
1164   6                                                      
1165   6                                                      if(!memcmp(&datsRcv_ZIGB.rcvDats[2], ASR_cmd, 2)){ //Ó¦´ğÖ¸ÁîÕıÈ·£¬µ«Ó¦´ğÂë´íÎó£¬ÔòÈ¡³ö´íÎóÂë
1166   7                                                      
1167   7                                                              datsTrans_respondCode = datsRcv_ZIGB.rcvDats[4]; //´íÎóÏìÓ¦Âë×°ÔØ
1168   7                                                              
1169   7                                                              if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //·¢ËÍ·½Ê½ÅĞ¶Ï-ÊÇ·ñÎªËÀ¿Ä·½Ê½
1170   8                                                              
1171   8                                                                      
1172   8                                                                      
1173   8                                                              }else{
1174   8                                                              
1175   8                                                                      step = 4; //·ÇËÀ¿Ä·½Ê½£¬ÔòÓĞÓ¦´ğÖ¸Áî£¬µ«Ó¦´ğÊı¾İ´íÎó£¬ÌøÖÁÊ§°Ü²½Öè
1176   8                                                              }
1177   7                                                      }
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 21  

1178   6                                                      
1179   6      //#if(DEBUG_LOGOUT_EN == 1)
1180   6      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1181   6      // 
1182   6      //                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8)); //Êı¾İ´«ÊäÊ§°ÜĞ­Òé²ãÏìÓ¦´úÂë´òÓ¡
1183   6      //                                                      sprintf(log_buf, "dats_TX fail code: %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[2], (int)datsR
             -cv_ZIGB.rcvDats[3], (int)datsRcv_ZIGB.rcvDats[4]);
1184   6      //                                                      PrintString1_logOut(log_buf);
1185   6      //                                              }       
1186   6      //#endif                                
1187   6                                              }
1188   5                                      }
1189   4                              }
1190   3                              
1191   3                      }break;
1192   2                      
1193   2                      case 2:{ //·Ç×èÈûµÈ´ıÔ¶¶ËÏìÓ¦
1194   3      
1195   3                              if(!zigbNwkAction_counter){
1196   4                              
1197   4                                      reactionLoop ++;
1198   4                                      step = 0;
1199   4                              }
1200   3                              else{
1201   4                                      
1202   4                                      if(uartRX_toutFLG){
1203   5                                              
1204   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
1205   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë  
1206   5                                              
1207   5                                              uartRX_toutFLG = 0;
1208   5                                              
1209   5                                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
1210   6                                              
1211   6      #if(DEBUG_LOGOUT_EN == 1)
1212   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1213   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1214   7                                                              sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
1215   7                                                              PrintString1_logOut(log_buf);
1216   7                                                      }                       
1217   6      #endif  
1218   6                                              }
1219   5      
1220   5                                              if(!memcmp(&(datsRcv_ZIGB.rcvDats[21]), datsRcv_respond.datsTrans.dats, datsRcv_respond.datsTrans.dat
             -sLen) && 
1221   5                                                 (datsRcv_respond.nwkAddr == datsFrom_addr) &&
1222   5                                                      (datsRcv_respond.portPoint == dstPoint)){
1223   6                                              
1224   6                                                      step = 3;
1225   6                                                              
1226   6                                              }else{
1227   6                                              
1228   6      #if(DEBUG_LOGOUT_EN == 1)
1229   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1230   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1231   7      //                                                      sprintf(log_buf, "data remoteRcv is %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[21], (int)datsR
             -cv_ZIGB.rcvDats[22], (int)datsRcv_ZIGB.rcvDats[23]);
1232   7                                                              sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)dstPoint, (int)datsFrom_addr);
1233   7      //                                                      sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)datsRcv_respond.portPoint, (int)d
             -atsRcv_respond.nwkAddr);
1234   7                                                              PrintString1_logOut(log_buf);
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 22  

1235   7                                                      }       
1236   6      #endif  
1237   6                                              }
1238   5                                      }
1239   4                              }
1240   3                              
1241   3                      }break;
1242   2                      
1243   2                      case 3:{ //ÏìÓ¦³É¹¦
1244   3                      
1245   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1246   4                              
1247   4                                      reConnectAfterDatsReq_IF = 0;
1248   4                                      devRunning_Status = status_nwkReconnect;
1249   4                                      
1250   4                              }else{ 
1251   4                              
1252   4                                      devRunning_Status = status_passiveDataRcv;
1253   4                              }
1254   3                              
1255   3                              reactionLoop = 0;
1256   3                              step = 0;
1257   3                              
1258   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1259   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1260   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1261   3                              
1262   3                      }break;
1263   2                      
1264   2                      case 4:{ //ÏìÓ¦Ê§°Ü
1265   3                      
1266   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1267   4                              
1268   4                                      reConnectAfterDatsReq_IF = 0;
1269   4                                      devRunning_Status = status_nwkReconnect;
1270   4                                      
1271   4                              }else{ 
1272   4                              
1273   4                                      devRunning_Status = status_passiveDataRcv;
1274   4                              }
1275   3                              
1276   3                              //Õë¶ÔÊı¾İ´«ÊäÊ§°ÜÏìÓ¦´úÂëÇé¿ö½øĞĞÑ¡ÔñĞÔÖØÁ¬£¬·ñÔò½öÊ±ÇøĞ­µ÷Æ÷Éè±¸¾Ígg
1277   3                              if(datsTrans_respondCode){ 
1278   4                                      
1279   4      #if(DEBUG_LOGOUT_EN == 1)                               
1280   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1281   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1282   5                                              sprintf(log_buf, "remote dataRequest fail, code:[0x%02X].\n", (int)datsTrans_respondCode);
1283   5                                              PrintString1_logOut(log_buf);
1284   5                                      }
1285   4      #endif  
1286   4                                      if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //ÈôÅÜÂíµÆÕıÔÚÔËĞĞÔòÖĞ¶ÏÅÜÂíµÆ
1287   4                                      
1288   4                                      switch(datsTrans_respondCode){ //ÏìÓ¦Ê§°ÜÂë·ÖÎö
1289   5                                      
1290   5                                              case resCODE_datsSend_NOROUTER:
1291   5                                              case resCODE_datsSend_NOREMOTE:
1292   5                                              case resCODE_datsSend_SUCCESS:{
1293   6                                              
1294   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1295   6                                                      
1296   6                                              }break;
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 23  

1297   5                                              
1298   5                                              default:{
1299   6                                              
1300   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1301   6                                                      
1302   6                                              }break;
1303   5                                      }
1304   4                                      
1305   4                                      datsTrans_respondCode = 0;
1306   4                              }
1307   3                              
1308   3                              reactionLoop = 0;
1309   3                              step = 0;
1310   3                              
1311   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1312   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1313   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1314   3                              
1315   3                      }break;
1316   2                              
1317   2                      default:{
1318   3                      
1319   3                              step = 4;
1320   3                              
1321   3                      }break;
1322   2              }
1323   1      }
1324          
1325          /*Éè±¸Êı¾İ´«ÊäÖ÷×´Ì¬ÇĞ»»ÖÁÍøÂç¹ÒÆğ*/
1326          void devStatusChangeTo_devHold(bit zigbNwkSysNote_IF){ //Éè±¸ÍøÂç¹ÒÆğ
1327   1      
1328   1              devNwkHoldTime_Param.devHoldTime_counter = DEVHOLD_TIME_DEFAULT;
1329   1              if(zigbNwkSysNote_IF)devNwkHoldTime_Param.zigbNwkSystemNote_IF = 1;
1330   1              
1331   1              devStatus_switch.statusChange_standBy = status_devNwkHold; //Êı¾İ´«Êä×´Ì¬»ú¸ü±ä
1332   1              devStatus_switch.statusChange_IF = 1;
1333   1              
1334   1              devTips_status = status_devHold; //tips¸ü±ä
1335   1              thread_tipsGetDark(0x0F);
1336   1              
1337   1      #if(DEBUG_LOGOUT_EN == 1)                               
1338   1              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1339   2                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1340   2                      sprintf(log_buf, "devHold start right now.\n");
1341   2                      PrintString1_logOut(log_buf);
1342   2              }
1343   1      #endif  
1344   1      }
1345          
1346          /*Éè±¸ÍøÂç¹ÒÆğÍ£Ö¹£¬Ê¹ÌáÇ°½áÊø*/
1347          void devHoldStop_makeInAdvance(void){ //Í£Ö¹Éè±¸ÍøÂç¹ÒÆğ£¨ÌáÇ°£©
1348   1      
1349   1              if(devNwkHoldTime_Param.devHoldTime_counter)devNwkHoldTime_Param.devHoldTime_counter = 0;
1350   1      }
1351          
1352          /*zigbeeÉè±¸ÍøÂç¹ÒÆğ×´Ì¬»ú*///·Ç×èÈû
1353          static 
1354          void function_devNwkHold(void){
1355   1              
1356   1              static status_Step = 0; //µ±Ç°×´Ì¬»ú²½Öè×´Ì¬Ö¸Ê¾
1357   1              
1358   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 24  

1359   2              
1360   2                      devStatus_switch.statusChange_IF = 0;
1361   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1362   2                      
1363   2                      status_Step = 0;
1364   2                      zigbNwkAction_counter = 0;
1365   2                      
1366   2                      zigbPin_RESET = 1;
1367   2                      
1368   2                      return;
1369   2              }
1370   1              
1371   1              if(devNwkHoldTime_Param.devHoldTime_counter){ //Ö±µ½¹ÒÆğÊ±¼ä½áÊø
1372   2              
1373   2                      if(devNwkHoldTime_Param.zigbNwkSystemNote_IF){ //Í¨Öªµ±Ç°ÍøÂçÄÚ×ÓÉè±¸¹ÒÆğ,±¨Ò»´Î
1374   3                              
1375   3                              u8 xdata dats_Note[3] = {ZIGB_SYSCMD_DEVHOLD, 1, 0}; //ÃüÁî¡¢Êı¾İ³¤¶È¡¢Êı¾İ
1376   3                      
1377   3                              devNwkHoldTime_Param.zigbNwkSystemNote_IF = 0; //Í¨ÖªÊ¹ÄÜ¸´Î»
1378   3                              
1379   3                              dataSendRemote_straightforward( 0xFFFF, //¹ã²¥Í¨ÖªÍøÄÚËùÓĞ×ÓÉè±¸¹ÒÆğ
1380   3                                                                                              ZIGB_ENDPOINT_CTRLSYSZIGB,
1381   3                                                                                              dats_Note,
1382   3                                                                                              3 );
1383   3                              
1384   3                              delayMs(50); //±ØĞèÑÓÊ±£¬·ñÔòÊı¾İ»¹Ã»·¢ËÍ³öÈ¥£¬¾ÍÅÜµ½ÏÂÒ»²½¸´Î»ÁË
1385   3                      }
1386   2                      
1387   2                      { //Éè±¸¹ÒÆğ,Ñ­»·¸´Î»
1388   3                              
1389   3                              switch(status_Step){
1390   4                              
1391   4                                      case 0:{ //¸´Î»200ms
1392   5                                      
1393   5                                              zigbPin_RESET = 0;
1394   5                                              zigbNwkAction_counter = 200;
1395   5                                              status_Step = 1;
1396   5                                      
1397   5                                      }break;
1398   4                                              
1399   4                                      case 1:{ //Ã¿6s¸´Î»Ò»´Î
1400   5                                      
1401   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1402   6                                              
1403   6                                                      zigbPin_RESET = 1;
1404   6                                                      zigbNwkAction_counter = 6000;
1405   6                                                      status_Step = 2;
1406   6                                              }
1407   5                                      
1408   5                                      }break;
1409   4                                      
1410   4                                      case 2:{
1411   5                                      
1412   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1413   6                                              
1414   6                                                      status_Step = 0;
1415   6                                                      
1416   6      #if(DEBUG_LOGOUT_EN == 1)                               
1417   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1418   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1419   7                                                              sprintf(log_buf, "devHold time count remind: %02d s.\n", (int)devNwkHoldTime_Param.devHoldTime_coun
             -ter);
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 25  

1420   7                                                              PrintString1_logOut(log_buf);
1421   7                                                      }
1422   6      #endif
1423   6                                              }
1424   5                                      
1425   5                                      }break;
1426   4                                      
1427   4                                      default:{
1428   5                                              
1429   5                                              status_Step = 0;
1430   5                                              
1431   5                                      }break;
1432   4                              }
1433   3                      }
1434   2      
1435   2              }else{
1436   2              
1437   2                      //¹ÒÆğÊ±¼ä½áÊø,Ö÷×´Ì¬»Ö¸´ÖÁÖØÁ¬£¬±¾µØ×´Ì¬»Ö¸´
1438   2                      status_Step = 0;
1439   2                      zigbPin_RESET = 1;
1440   2                      
1441   2                      devRunning_Status = status_nwkReconnect; //Ö±½Ó½«Ö÷×´Ì¬ÇĞ»»ÖÁÍøÂçÖØÁ¬,²»×ßstandbyÁ÷³Ì
1442   2                      devTips_status = status_Normal; //tips¸ü±ä
1443   2              
1444   2      #if(DEBUG_LOGOUT_EN == 1)                               
1445   2                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1446   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1447   3                              sprintf(log_buf, "devHold stop.\n");
1448   3                              PrintString1_logOut(log_buf);
1449   3                      }
1450   2      #endif  
1451   2              }
1452   1      }
1453          
1454          /*zigbee¼¯Èº¿ØÖÆÊı¾İ½âÎö*/
1455          static 
1456          void dataParing_scenarioCtrl(u8 datsFrame[]){
1457   1      
1458   1              u8 dataTX_temp = CTRLSECENARIO_RESPCMD_SPECIAL;
1459   1              
1460   1              colonyCtrlGet_statusLocalScene = datsFrame[0]; //±¾µØ³¡¾°¿ØÖÆÂÖÑ¯Öµ¸üĞÂ(³¡¾°¿ØÖÆ½öÀ´×ÔÓÚÊÖ»ú¿ØÖÆ)
1461   1              
1462   1              dataSendRemote_straightforward(0, ZIGB_ENDPOINT_CTRLSECENARIO, &dataTX_temp, 1); //³¡¾°¿ØÖÆÔ¶¶Ë»Ø¸´
1463   1              
1464   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED) //Ç¿ÖÆÉè±¸ÀàĞÍÎªºìÍâ×ª·¢Æ÷Ê±£¬³¡¾°´¥·¢¶ÔÓ¦ĞòºÅµÄºìÍâ¿ØÖÆ
                      if(infraredStatus_GET() == infraredSMStatus_free)infraredOpreatAct_remoteControlStart(datsFrame[0]); //¿Õ
             -ÏĞÌ¬ÏÂ£¬²Ù×÷¿ÉÓÃ£¬±ÜÃâ¹¦ÄÜÖØ¸´´¥·¢
                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER) //Ç¿ÖÆÉè±¸ÀàĞÍÎªÈÈË®Æ÷Ê±£¬°´¼ü×´Ì¬ËæÖ®¸üĞÂ
                      (datsFrame[0] == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKeepOpen):(heater_ActPara
             -m.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                      devHeater_actOpeartionExecute(heater_ActParam.heater_currentActMode); //¶¯×÷Ö´ĞĞ
                      
              #else
1472   1              swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
1473   1              swCommand_fromUsr.actMethod = relay_OnOff;
1474   1              
1475   1      #endif
1476   1              
1477   1      #if(DEBUG_LOGOUT_EN == 1)
1478   1              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1479   2                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 26  

1480   2                      sprintf(log_buf, "cmdScenarioCtrl comming, statusData:%02X.\n", (int)datsFrame[0]);
1481   2                      PrintString1_logOut(log_buf);
1482   2              }                       
1483   1      #endif          
1484   1      }
1485          
1486          /*zigbeeÏµÍ³½»»¥Êı¾İ½âÎö*/
1487          static 
1488          void dataParing_zigbSysCtrl(u8 datsFrame[]){
1489   1      
1490   1              /*>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<*/
1491   1              /*----------------------------------------------*/
1492   1              /*  frame_CMD   |       frame_dataLen|  frame_data      |
1493   1              /*----------------------------------------------*/
1494   1              /*      1byte           |       1byte            |      < 256byte       |       
1495   1              /*----------------------------------------------*/
1496   1              
1497   1              frame_zigbSysCtrl xdata dats = {0};
1498   1              
1499   1              dats.command = datsFrame[0];
1500   1              memcpy(dats.dats, &datsFrame[2], datsFrame[1]);
1501   1              dats.datsLen = datsFrame[1];
1502   1              
1503   1              switch(dats.command){
1504   2              
1505   2                      case ZIGB_SYSCMD_NWKOPEN:{ //ÍøÂç¿ª·Å
1506   3                              
1507   3                              bit resultSet = 0;
1508   3                              
1509   3                              resultSet = ZigB_nwkOpen(1, dats.dats[0]); //¹¦ÄÜ´¥·¢
1510   3                              tips_statusChangeToZigbNwkOpen(dats.dats[0]); //tips´¥·¢
1511   3                              
1512   3      #if(DEBUG_LOGOUT_EN == 1)
1513   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1514   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1515   4                                      sprintf(log_buf, "master cmdComing:nwkOpen:%02ds.\n", (int)dats.dats[0]);
1516   4                                      PrintString1_logOut(log_buf);
1517   4                              }                       
1518   3      #endif          
1519   3                              
1520   3                      }break;
1521   2                      
1522   2                      case ZIGB_SYSCMD_TIMESET:{ //ÏµÍ³Ê±¼äÉè¶¨
1523   3                      
1524   3                              bit resultSet = 0;
1525   3                              bit timeZoneAdjust_needIF = 0;
1526   3                              u32 time_Temp = 0UL;
1527   3                              
1528   3                              time_Temp |= (u32)dats.dats[0] << 0;
1529   3                              time_Temp |= (u32)dats.dats[1] << 8;
1530   3                              time_Temp |= (u32)dats.dats[2] << 16;
1531   3                              time_Temp |= (u32)dats.dats[3] << 24;
1532   3                              if((sysTimeZone_H != dats.dats[4]) || (sysTimeZone_M != dats.dats[5])){ //Ê±ÇøÍ¬²½
1533   4                              
1534   4                                      sysTimeZone_H = dats.dats[4];
1535   4                                      sysTimeZone_M = dats.dats[5];
1536   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1537   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
1538   4                              }
1539   3                              
1540   3                              if(dats.dats[6])timeZoneAdjust_needIF = 1; //Ê±Çø²¹³¥Ê¹ÄÜÅĞ¶Ï
1541   3                              if(time_Temp > ZIGB_UTCTIME_START)resultSet = zigB_sysTimeSet(time_Temp - ZIGB_UTCTIME_START, timeZoneA
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 27  

             -djust_needIF); //zigbee ±¾µØÏµÍ³Ê±¼äÉèÖÃ<UTC¸º²¹³¥>
1542   3                              
1543   3      #if(DEBUG_LOGOUT_EN == 1)
1544   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1545   4                                      
1546   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1547   4                                      sprintf(log_buf, "master UTC coming:[0x%02X%02X%02X%02X].\n", (int)dats.dats[3], (int)dats.dats[2], (i
             -nt)dats.dats[1], (int)dats.dats[0]);
1548   4                                      PrintString1_logOut(log_buf);
1549   4                              }                       
1550   3      #endif  
1551   3                      }break;
1552   2                      
1553   2                      case ZIGB_SYSCMD_DEVHOLD:{ //ÍøÂç¹ÒÆğ£¨ÓÃ×÷Íø¹ØÇĞ»»£©
1554   3                              
1555   3      #if(DEBUG_LOGOUT_EN == 1)
1556   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1557   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1558   4                                      sprintf(log_buf, "node cmdComing:devNwk hold.\n");
1559   4                                      PrintString1_logOut(log_buf);
1560   4                              }                       
1561   3      #endif  
1562   3                              devStatusChangeTo_devHold(0); //Éè±¸ÍøÂç±»¶¯¹ÒÆğ,²»½øĞĞÍøÂçÍ¨Öª
1563   3                              
1564   3                      }break;
1565   2                      
1566   2                      case ZIGB_SYSCMD_DATATRANS_HOLD:{ //Í¨ĞÅÖ÷¶¯±ÜÕÏ£¬½«ÖÜÆÚĞÔÍ¨ĞÅ¹ÒÆğ
1567   3                              
1568   3      #if(DEBUG_LOGOUT_EN == 1)
1569   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1570   4                                      
1571   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1572   4                                      sprintf(log_buf, "master cmd: dtPeriod hold, time:%d.\n", (int)dats.dats[0]);
1573   4                                      PrintString1_logOut(log_buf);
1574   4                              }                       
1575   3      #endif  
1576   3                              if(!heartBeatHang_timeCnt && !colonyCtrlGetHang_timeCnt){ //ÓĞĞ§ÖÜÆÚÄÚ£¬¸¨Öú²¹³ä¹ã²¥Ò»´Î£¬·ÀÖ¹ÆäËû½ÚµãÃ
             -»ÊÕµ½
1577   4                                      
1578   4      //                              PrintString1_logOut("dtPeriod hold one more time.\n");
1579   4      //                              dataSendRemote_straightforward(0xffff, ZIGB_ENDPOINT_CTRLSYSZIGB, datsFrame, datsFrame[1] + 2);
1580   4                                      
1581   4                              }else{
1582   4                              
1583   4      //#if(DEBUG_LOGOUT_EN == 1)
1584   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1585   4      //                      
1586   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1587   4      //                                      sprintf(log_buf, "dtPeriod holdAdd err, parm1: %d, parm2: %d.\n", (int)heartBeatHang_timeCnt, (int)
             -colonyCtrlGetHang_timeCnt);
1588   4      //                                      PrintString1_logOut(log_buf);
1589   4      //                              }                       
1590   4      //#endif        
1591   4                              }
1592   3                              
1593   3                              periodDataTrans_momentHang(dats.dats[0]);  //±ÜÕÏÊ±¼ä¼ÓÔØ£¬¶¯×÷Ö´ĞĞ
1594   3                              
1595   3                      }break;
1596   2      
1597   2      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                              case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ¹ÄÜ*///¸üĞÂ¼¯ÈºĞÅÏ¢²¢¶¯×÷
                              
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 28  

                                      /*>>>>>>>>>>>>>>>>>>>frame_data reference<<<<<<<<<<<<<<<*/
                                      /*------------------------------------------------------*/
                                      /*  frame_data[0]                       |       frame_data[1...3]               |
                                      /*------------------------------------------------------*/
                                      /*      ×î½üÒ»´Î³¡¾°¿ØÖÆ×´Ì¬Öµ  |       ×î½üÒ»´Î»¥¿Ø¸üĞÂ×´Ì¬Öµ  |
                                      /*------------------------------------------------------*/
                                      
                                      u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
                                      
              //#if(DEBUG_LOGOUT_EN == 1)
              //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
              //                      
              //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                      sprintf(log_buf, "curRealy_Val:%02X, dataQuery result:%02X %02X %02X %02X.\n",
              //                                                                       (int)status_Relay,
              //                                                                       (int)dats.dats[0],
              //                                                                       (int)dats.dats[1],
              //                                                                       (int)dats.dats[2],
              //                                                                       (int)dats.dats[3]);
              //                                      PrintString1_logOut(log_buf);
              //                              }                       
              //#endif                
                                      if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ scene detect from poling.\n");
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              
                                              //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              colonyCtrlGet_statusLocalScene = dats.dats[0];
                                              
                                              if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
                                              }
                                      }
                                      
                                      if(memcmp(&dats.dats[1], colonyCtrlGet_statusLocalEaCtrl, clusterNum_usr)){ //»¥¿Ø×´Ì¬ÖµÖµÂÖÑ¯¸üĞÂ
                                              
                                              u8 idata loop;
                                              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ eachCtrl detect from poling, currentVal is: %02X %02X %02X.\n", (int)colonyC
             -trlGet_statusLocalEaCtrl[0],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[1],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[2]);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif
                                              //ÉÏÒ»´Î»¥¿ØÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              memcpy(colonyCtrlGet_statusLocalEaCtrl, &dats.dats[1], clusterNum_usr);
                                              
                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //ÑÚÂëÅĞ¶Ï²Ù×÷Î»£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_ON)statusRelay_temp |= (
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 29  

             -1 << loop);
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_OFF)statusRelay_temp &= 
             -~(1 << loop);
                                                      
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = statusRelay_temp;
                                              }
                                      }
                                      
                              }break;
              #else /*ºêÅĞÖĞ*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1670   2                      case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ§ÄÜ*///½ö½ÓÊÕ³¡¾°¿ØÖÆĞÅÏ¢²¢¶¯×÷
1671   3                      
1672   3                              u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
1673   3                              
1674   3                              if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
1675   4                              
1676   4      #if(DEBUG_LOGOUT_EN == 1)
1677   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1678   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1679   5                                              sprintf(log_buf, "differ scene detect from poling.\n");
1680   5                                              PrintString1_logOut(log_buf);
1681   5                                      }                       
1682   4      #endif  
1683   4                                      
1684   4                                      //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
1685   4                                      colonyCtrlGet_statusLocalScene = dats.dats[0];
1686   4                                      
1687   4                                      if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
1688   5                                      
1689   5                                              swCommand_fromUsr.actMethod = relay_OnOff;
1690   5                                              swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
1691   5                                      }
1692   4                              }
1693   3                              
1694   3                      }break;
1695   2      #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1696   2                      default:break;
1697   2              }
1698   1      }
1699          
1700          /*zigbee³£¹æ¿ØÖÆ×ª·¢Êı¾İ½âÎö*/
1701          static 
1702          void dataParing_Nomal(u8 datsParam[], u16 nwkAddr_from, u8 port_from){
1703   1              
1704   1      #define dataLen_dataParingNomal (128 + 25)
1705   1              u8 xdata paramTX_temp[dataLen_dataParingNomal] = {0};
1706   1              
1707   1              bit dataFromRemote_IF = 0;      //ÊÇ·ñÎª·şÎñÆ÷¶ËÊı¾İ±êÖ¾
1708   1      
1709   1              /*²úÆ·¶ş¼¶Ğ­ÒéºË¶Ô_³£¹æ¿ØÖÆ*///¿ØÖÆÏÂ´ï
1710   1              switch(datsParam[0]){
1711   2              
1712   2                      /*Ô¶¶Ë*/
1713   2                      case ZIGB_FRAMEHEAD_CTRLREMOTE:{
1714   3                              
1715   3                              dataFromRemote_IF = 1;
1716   3                              
1717   3                              memcpy(MAC_ID_DST, &datsParam[7], 6);
1718   3                              memcpy(&datsParam[1], &datsParam[13], datsRcv_ZIGB.rcvDats[20] - 13);
1719   3                      }
1720   2                      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 30  

1721   2                      /*±¾µØ*/
1722   2                      case ZIGB_FRAMEHEAD_CTRLLOCAL:{
1723   3                              
1724   3                              bit frameCheck_Done = 0; //Êı¾İ¼ì²âºÏ¸ñ±êÖ¾
1725   3                              
1726   3                              {
1727   4                                      bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
1728   4                                      bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
1729   4                                      
1730   4                                      if(datsParam[4] == frame_Check(&datsParam[5], 28))frameCodeCheck_PASS = 1; //Ğ£ÑéÂë¼ì²â
1731   4                                      if(!memcmp(&datsParam[5], &MAC_ID[1], 5))frameMacCheck_PASS = 1; //MAC¼ì²â
1732   4      
1733   4                                      if(datsParam[3] == FRAME_MtoZIGBCMD_cmdConfigSearch){ //ÌØÊâÖ¸Áî²»×öMAC¼ì²â
1734   5                                      
1735   5                                              frameMacCheck_PASS = 1;
1736   5                                              
1737   5                                      }else
1738   4                                      if((datsParam[3] == FRAME_MtoZIGBCMD_cmdCfg_swTim) || //ÌØÊâÖ¸Áî²»×öĞ£ÑéÂë¼ì²â
1739   4                                         (datsParam[3] == FRAME_MtoZIGBCMD_cmdswTimQuery)){
1740   5                                         
1741   5                                              frameCodeCheck_PASS = 1;
1742   5                                      }
1743   4                                         
1744   4                                      if(frameCodeCheck_PASS && frameCodeCheck_PASS)frameCheck_Done = 1;
1745   4                              }
1746   3                                 
1747   3                              if(frameCheck_Done){ //Ö¡¼ì²éÍ¨¹ı£¬¿ªÊ¼½âÎö¡¢¶¯×÷¼°ÏìÓ¦
1748   4                                      
1749   4                                      bit respond_IF          = 0;    //ÊÇ·ñ»Ø¸´
1750   4                                      bit specialCmd_IF       = 0;    //ÊÇ·ñÎªÌØÊâÖ¸Áî£¨ÌØÊâÖ¸ÁîÕ¼ÓÃ¿ª¹ØÀàĞÍÄÇÒ»¸ö×Ö½Ú£©
1751   4                                      
1752   4      #if(DEBUG_LOGOUT_EN == 1)
1753   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1754   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1755   5                                              sprintf(log_buf, "cmdComing:%02X.\n", (int)datsParam[3]);
1756   5                                              PrintString1_logOut(log_buf);
1757   5                                      }                       
1758   4      #endif          
1759   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_dataParingNomal);
1760   4                              
1761   4                                      switch(datsParam[3]){
1762   5                                      
1763   5                                              case FRAME_MtoZIGBCMD_cmdConfigSearch:{
1764   6                                                      
1765   6                                                      if(!deviceLock_flag){ //Éè±¸ÊÇ·ñÉÏËø
1766   7                                                              
1767   7                                                              tips_statusChangeToNormal();
1768   7                                                              if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //´¥ÃşÊÍ·Å¼ÆÊ±Ê§ÄÜ
1769   7                                                              
1770   7                                                              paramTX_temp[11] = status_Relay; //¿ª¹Ø×´Ì¬»Ø¸´Ìî×°
1771   7                                                              paramTX_temp[12] = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
1772   7                                                              
1773   7                                                              paramTX_temp[14] = (u8)((dev_currentPanid & 0xFF00) >> 8); //ÍøÂçPANID»Ø¸´Ìî×°
1774   7                                                              paramTX_temp[15] = (u8)((dev_currentPanid & 0x00FF) >> 0);
1775   7                                                              
1776   7                                                              sysTimeZone_H = datsParam[12];
1777   7                                                              sysTimeZone_M = datsParam[13];
1778   7                                                              coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1779   7                                                              coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
1780   7                                                              
1781   7                                                              periodDataTrans_momentHang(10); //½ÓÊÕµ½ËÑË÷Âëºó ½«ÆäËûÖÜÆÚÖ÷¶¯·¢ÂëÍ¨ĞÅ½øĞĞ±ÜÈÃ ÎªËÑË÷ÏìÓ¦ÇåÂ· 10s
1782   7                                                      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 31  

1783   7                                                              respond_IF              = 1; //ÏìÓ¦»Ø¸´
1784   7                                                              specialCmd_IF   = 0;
1785   7                                                              
1786   7                                                      }else{
1787   7                                                      
1788   7                                                              
1789   7                                                      }
1790   6                                                      
1791   6                                              }break;
1792   5                                              
1793   5                                              case FRAME_MtoZIGBCMD_cmdControl:{
1794   6      
1795   6                                                      paramTX_temp[11] = 0;
1796   6                                                      paramTX_temp[11] |= (datsParam[11] & 0x07);     //×´Ì¬Î»Ìî×°
1797   6                                                      if(             (datsParam[11] & 0x01) != (status_Relay & 0x01))paramTX_temp[11] |= 0x20; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ»>µ
             -ÚÒ»Î»
1798   6                                                      else if((datsParam[11] & 0x02) != (status_Relay & 0x02))paramTX_temp[11] |= 0x40; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚ¶şÎ»
1799   6                                                      else if((datsParam[11] & 0x04) != (status_Relay & 0x04))paramTX_temp[11] |= 0x80; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚÈıÎ»
1800   6                                                      
1801   6                                                      swCommand_fromUsr.objRelay = datsParam[11];
1802   6                                                      swCommand_fromUsr.actMethod = relay_OnOff;
1803   6                                                      
1804   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                                                              paramTX_temp[11] = datsParam[11]; //µ÷¹âÖ±½Ó»ØÁÁ¶ÈÖµ£¬²»´ø¸ßÎ»
                                                              EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
                                                              (swCommand_fromUsr.objRelay == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKeepOp
             -en):(heater_ActParam.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                                                              devHeater_actOpeartionExecute(heater_ActParam.heater_currentActMode); //¶¯×÷Ö´ĞĞ
                                                              
              #else
1816   6                                                      if(SWITCH_TYPE == SWITCH_TYPE_SWBIT1 || SWITCH_TYPE == SWITCH_TYPE_SWBIT2 || SWITCH_TYPE == SWITCH_T
             -YPE_SWBIT3)EACHCTRL_realesFLG |= (status_Relay ^ swCommand_fromUsr.objRelay); //ÓĞĞ§»¥¿Ø´¥·¢
1817   6                                                      else
1818   6                                                      if(SWITCH_TYPE == SWITCH_TYPE_CURTAIN)EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
1819   6                                                      
1820   6      #endif
1821   6      
1822   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1823   6                                                      specialCmd_IF   = 0;                                                    
1824   6                                                      
1825   6                                              }break;
1826   5                                                      
1827   5                                              case FRAME_MtoZIGBCMD_cmdQuery:{
1828   6                                              
1829   6                                                      paramTX_temp[11] = status_Relay & 0x07;
1830   6                                                      paramTX_temp[12] = 0;
1831   6                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1832   6                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1833   6                                                      
1834   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1835   6                                                      specialCmd_IF   = 0;    
1836   6                                              
1837   6                                              }break;
1838   5                                                      
1839   5                                              case FRAME_MtoZIGBCMD_cmdInterface:{}break;
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 32  

1840   5                                                      
1841   5                                              case FRAME_MtoZIGBCMD_cmdReset:{}break;
1842   5                                                      
1843   5                                              case FRAME_MtoZIGBCMD_cmdDevLockON:{
1844   6                                              
1845   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1846   6                                                      {
1847   7                                                              u8 deviceLock_IF = 1;
1848   7                                                              
1849   7                                                              deviceLock_flag  = 1;
1850   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1851   7                                                      }               
1852   6                                                      
1853   6                                              }break;
1854   5                                                      
1855   5                                              case FRAME_MtoZIGBCMD_cmdDevLockOFF:{
1856   6                                              
1857   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1858   6                                                      {
1859   7                                                              u8 deviceLock_IF = 0;
1860   7                                                              
1861   7                                                              deviceLock_flag  = 0;
1862   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1863   7                                                      }       
1864   6                                              
1865   6                                              }break;
1866   5                                                      
1867   5                                              case FRAME_MtoZIGBCMD_cmdswTimQuery:{
1868   6                                              
1869   6                                                      //·ÖÀà»Ø¸´
1870   6                                                      switch(datsParam[13]){ //×ÓÃüÁî½âÎö
1871   7                                                      
1872   7                                                              case 0: /*ÉÏÎ»»úÔÚ¶¨Ê±µÄÊ±ºò¸ø0£¬´ıĞ­ÉÌ*/
1873   7                                                              case cmdConfigTim_normalSwConfig:{
1874   8                                                              
1875   8                                                                      u8 loop = 0;
1876   8                                                              
1877   8                                                                      //Êı¾İÏìÓ¦¼°»Ø¸´
1878   8                                                                      EEPROM_read_n(EEPROM_ADDR_swTimeTab, &paramTX_temp[14], 12);    //¶¨Ê±±í»Ø¸´Ìî×°
1879   8                                                                      
1880   8                                                                      //»Ø¸´Êı¾İ¶ş´Î´¦Àí£¨Õë¶ÔÒ»´ÎĞÔ¶¨Ê±Êı¾İ£©
1881   8                                                                      for(loop = 0; loop < 4; loop ++){
1882   9                                                                      
1883   9                                                                              if(swTim_oneShoot_FLAG & (1 << loop)){
1884  10                                                                                      
1885  10                                                                                      paramTX_temp[14 + loop * 3] &= 0x80;
1886  10                                                                              }
1887   9                                                                      }
1888   8                                                                                      
1889   8                                                                      specialCmd_IF = 1; //ÌØÊâÕ¼Î»Ö¸Áî
1890   8                                                                      
1891   8      #if(DEBUG_LOGOUT_EN == 1)
1892   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1893   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1894   9                                                                              sprintf(log_buf, ">>>>>>>>timer_tab3 respond:[%02X-%02X-%02X].\n", (int)paramTX_temp[20], (int)pa
             -ramTX_temp[21], (int)paramTX_temp[22]);
1895   9                                                                              PrintString1_logOut(log_buf);
1896   9                                                                      }                       
1897   8      #endif  
1898   8                                                                      
1899   8                                                              }break;
1900   7                                                              
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 33  

1901   7                                                              case cmdConfigTim_onoffDelaySwConfig:{
1902   8                                                              
1903   8                                                                      if(!delayCnt_onoff)paramTX_temp[14] = 0;
1904   8                                                                      else paramTX_temp[14] = delayPeriod_onoff - (u8)(delayCnt_onoff / 60);
1905   8                                                                      paramTX_temp[15] = delayUp_act;
1906   8                                                                      
1907   8                                                              }break;
1908   7                                                              
1909   7                                                              case cmdConfigTim_closeLoopSwConfig:{
1910   8                                                              
1911   8                                                                      paramTX_temp[14] = delayPeriod_closeLoop;
1912   8                                                                      
1913   8                                                              }break;
1914   7                                                              
1915   7                                                              case cmdConfigTim_nightModeSwConfig:{  
1916   8                                                              
1917   8                                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &paramTX_temp[14], 6);      //Ò¹¼äÄ£Ê½¶¨Ê±±í»Ø¸´Ìî×°
1918   8                                                                      
1919   8                                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1920   8                                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1921   8                                                                      
1922   8                                                              }break;
1923   7                                                              
1924   7                                                              default:break;
1925   7                                                      }
1926   6                                                      
1927   6                                                      paramTX_temp[13] = datsParam[13]; //¶¨Ê±×ÓÃüÁîÍ¬²½»Ø¸´
1928   6                                                      
1929   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1930   6                                                      
1931   6                                              }break;
1932   5                                                      
1933   5                                              case FRAME_MtoZIGBCMD_cmdConfigAP:{}break;
1934   5                                                      
1935   5                                              case FRAME_MtoZIGBCMD_cmdBeepsON:{ //Ò¹¼äÄ£Ê½¹Ø
1936   6                                              
1937   6                                                      u8 datsTemp = 0;
1938   6                                                      
1939   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1940   6                                                      datsTemp &= ~0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,È¡ÏûÍ·×Ö½ÚÈ«Õ¼Âú,Ê§ÄÜÈ«Ìì
1941   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1942   6                                                      
1943   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1944   6                                                      
1945   6                                              }break;
1946   5                                                      
1947   5                                              case FRAME_MtoZIGBCMD_cmdBeepsOFF:{ //Ò¹¼äÄ£Ê½¿ª
1948   6                                              
1949   6                                                      u8 datsTemp = 0;
1950   6                                                      
1951   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1952   6                                                      datsTemp |= 0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,Í·×Ö½ÚÈ«Õ¼Âú,Ç¿ÖÆÈ«Ìì
1953   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);        
1954   6                                                      
1955   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1956   6                                                      
1957   6                                              }break;
1958   5                                                      
1959   5                                              case FRAME_MtoZIGBCMD_cmdftRecoverRQ:{
1960   6                                              
1961   6                                                      respond_IF = 1;
1962   6                                                      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 34  

1963   6                                              }break;
1964   5                                                      
1965   5                                              case FRAME_MtoZIGBCMD_cmdRecoverFactory:{
1966   6                                              
1967   6                                                      Factory_recover();
1968   6                                              
1969   6                                              }break;
1970   5                                                      
1971   5                                              case FRAME_MtoZIGBCMD_cmdCfg_swTim:{
1972   6                                                      
1973   6                                                      u8 loop = 0;
1974   6                                                      
1975   6                                                      switch(datsParam[13]){ //¶¨Ê±Êı¾İ´¦Àí¼°¸üĞÂ,·ÖÀà´¦Àí
1976   7                                                      
1977   7                                                              case cmdConfigTim_normalSwConfig:{      /*ÆÕÍ¨¶¨Ê±*/
1978   8                                                                      
1979   8                                                                      for(loop = 0; loop < 4; loop ++){
1980   9                                                                      
1981   9                                                                              if(datsParam[14 + loop * 3] == 0x80){   /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±»´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞ
             -Ô
1982  10                                                                              
1983  10                                                                                      swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
1984  10                                                                                      datsParam[14 + loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½øĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´
             -ÎÖ´ĞĞÍê±ÏºóÇå³ı
1985  10                                                                                      
1986  10                                                                              }else{
1987  10                                                                              
1988  10                                                                                      swTim_oneShoot_FLAG &= ~(1 << loop);//Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
1989  10                                                                              }
1990   9                                                                      }
1991   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, &datsParam[14], 4 * 3);      //¶¨Ê±±í
1992   8                                                                      itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
1993   8      #if(DEBUG_LOGOUT_EN == 1)
1994   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1995   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1996   9                                                                              sprintf(log_buf, ">>>>>>>>timer_tab3 has been set:[%02X-%02X-%02X].\n", (int)datsParam[20], (int)
             -datsParam[21], (int)datsParam[22]);
1997   9                                                                              PrintString1_logOut(log_buf);
1998   9                                                                      }                       
1999   8      #endif  
2000   8                                                              
2001   8                                                              }break;
2002   7                                                              
2003   7                                                              case cmdConfigTim_onoffDelaySwConfig:{  /*¿ª¹ØÑÓÊ±*/
2004   8                                                              
2005   8                                                                      if(datsParam[14]){
2006   9                                                                      
2007   9                                                                              ifDelay_sw_running_FLAG |= (1 << 1);
2008   9                                                                              delayPeriod_onoff               = datsParam[14];
2009   9                                                                              
2010   9                                                                              delayUp_act                             = datsParam[15];
2011   9                                                                              
2012   9                                                                              delayCnt_onoff                  = 0;
2013   9                                                                              
2014   9                                                                      }else{
2015   9                                                                      
2016   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 1);
2017   9                                                                              delayPeriod_onoff               = 0;
2018   9                                                                              delayCnt_onoff                  = 0;
2019   9                                                                      }
2020   8                                                                      
2021   8                                                              }break;
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 35  

2022   7                                                              
2023   7                                                              case cmdConfigTim_closeLoopSwConfig:{   /*ÂÌÉ«¹¦ÄÜ(×Ô¶¯Ñ­»·¹Ø±Õ)*/
2024   8                                                              
2025   8                                                                      if(datsParam[14]){
2026   9                                                                      
2027   9                                                                              ifDelay_sw_running_FLAG |= (1 << 0);
2028   9                                                                              delayPeriod_closeLoop   = datsParam[14];
2029   9                                                                              delayCnt_closeLoop              = 0;
2030   9                                                                              
2031   9                                                                      }else{
2032   9                                                                      
2033   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 0);
2034   9                                                                              delayPeriod_closeLoop   = 0;
2035   9                                                                              delayCnt_closeLoop              = 0;
2036   9                                                                      }
2037   8                                                                      
2038   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1);
2039   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2040   8                                                                      
2041   8                                                              }break;         
2042   7      
2043   7                                                              case cmdConfigTim_nightModeSwConfig:{  /*Ò¹¼äÄ£Ê½ ±³¹â°ëÁÁ*/
2044   8                                                              
2045   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsParam[14], 6);   //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢
2046   8                                                                      itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2047   8                                                                      
2048   8                                                              }break;
2049   7                                                              
2050   7                                                              default:break;
2051   7                                                      }
2052   6                                                      
2053   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2054   6                                                      
2055   6                                              }break;
2056   5                                              
2057   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ctrlEachO:{
2058   6                                              
2059   6                                                      u8 loop = 0;
2060   6                                                      u8 effective_oprate = datsParam[12]; //ÓĞĞ§²Ù×÷Êı¾İÕ¼Î»»ñÈ¡
2061   6                                                      
2062   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2063   7                                                      
2064   7                                                              if((effective_oprate >> loop) & 0x01){ //ÓĞĞ§Êı¾İÅĞ¶Ï
2065   8                                                              
2066   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &datsParam[14 + loop], 1); //¶ÔÓ¦Èı×é»¥¿
             -ØºÅ»ñÈ¡²¢½øĞĞ±¾µØ´æ´¢
2067   8                                                                      CTRLEATHER_PORT[loop] = datsParam[14 + loop]; //»º´æ¸üĞÂ
2068   8                                                                      reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2069   8                                                              }
2070   7                                                      }
2071   6                                                      
2072   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2073   6                                              
2074   6                                              }break;
2075   5                                              
2076   5                                              case FRAME_MtoZIGBCMD_cmdQue_ctrlEachO:{
2077   6                                              
2078   6                                                      u8 loop = 0;
2079   6                                                      
2080   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2081   7                                                      
2082   7                                                              EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther + loop, &paramTX_temp[14 + loop], 1);
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 36  

2083   7                                                      }
2084   6                                                      
2085   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2086   6                                              
2087   6                                              }break;
2088   5                                                      
2089   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ledBackSet:{
2090   6                                              
2091   6                                                      memcpy(&devBackgroundLight_param, &datsParam[14], sizeof(bkLightColorInsert_paramAttr)); //»º´æ¸üĞÂ
2092   6                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, (u8*)&devBackgroundLight_param, sizeof(bkLightColor
             -Insert_paramAttr)); //±¾µØ´æ´¢¸üĞÂ
2093   6                                                      
2094   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2095   6                                              
2096   6                                              }break;
2097   5                                              
2098   5                                              case FRAME_MtoZIGBCMD_cmdQue_ledBackSet:{
2099   6                                              
2100   6                                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround, &datsParam[14], sizeof(bkLightColorInsert_paramAttr)); //
             -±¾µØ´æ´¢Öµ¶ÁÈ¡
2101   6                                                      
2102   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2103   6                                              
2104   6                                              }break;
2105   5                                              
2106   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioSet:{
2107   5      //                                              
2108   5      //                                              u16 xdata panid_Temp = ZigB_getPanIDCurrent(); //ÅäÖÃ»Ø¸´Ìí¼ÓPANID
2109   5      //                                      
2110   5      //                                              bit opt_result = swScenario_oprateSave(datsParam[12], datsParam[14]);
2111   5      //                                              if(opt_result)paramTX_temp[12] = 0;
2112   5      //                                              else paramTX_temp[12] = 0x0A; //³¡¾°ÉèÖÃÎŞĞ§»Ø¸´£¨³¡¾°´æ´¢ÒÑÂú£©
2113   5      //                                              
2114   5      //                                              paramTX_temp[14] = (u8)((panid_Temp & 0xFF00) >> 8);
2115   5      //                                              paramTX_temp[15] = (u8)((panid_Temp & 0x00FF) >> 0);
2116   5      //                                              
2117   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ£¨±¾µØ´æ´¢ÒÑ±»Õ¼Âú£©
2118   5      //                                      
2119   5      //                                      }break;
2120   5      //                                      
2121   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioCtl:{
2122   5      //                                              
2123   5      //                                              u8 sw_Act = swScenario_oprateCheck(datsParam[12]);
2124   5      //                                              if(sw_Act != SW_SCENCRAIO_ACTINVALID){ //ÈôË÷Òıµ½ÓĞĞ§²Ù×÷Î»
2125   5      //                                                      
2126   5      //                                                      swCommand_fromUsr.actMethod = relay_OnOff;
2127   5      //                                                      swCommand_fromUsr.objRelay = sw_Act;
2128   5      //                                              
2129   5      //                                                      paramTX_temp[12] = 0;
2130   5      //                                                      
2131   5      //                                              }else{ //ÈôÎŞ·¨Ë÷Òıµ½ÓĞĞ§²Ù×÷Î»
2132   5      //                                              
2133   5      //                                                      paramTX_temp[12] = 0x0A; //³¡¾°¿ØÖÆÎŞĞ§»Ø¸´£¨³¡¾°ºÅÎŞ·¨±»Ë÷Òı£©
2134   5      //                                              }
2135   5      //                                      
2136   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2137   5      //                                      
2138   5      //                                      }break;
2139   5      //                                      
2140   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioDel:{
2141   5      //                                              
2142   5      //                                              swScenario_oprateDele(datsParam[12]);
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 37  

2143   5      //                                              paramTX_temp[12] = 0;
2144   5      //                                      
2145   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2146   5      //                                      
2147   5      //                                      }break;
2148   5                                              
2149   5                                              default:{
2150   6                                              
2151   6                                                      respond_IF = 0;
2152   6                                              
2153   6                                              }break;
2154   5                                      }
2155   4                                      
2156   4                                      /*»Ø¸´ÏìÓ¦*/
2157   4                                      if(respond_IF){ //Êı¾İ°ü»Ø¸´ÏìÓ¦¶¯×÷
2158   5                                      
2159   5                                              u8 datsTX_Len = 0;
2160   5                                              
2161   5                                              respond_IF = 0;
2162   5                                              
2163   5                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
2164   5                                                                                                                 paramTX_temp,
2165   5                                                                                                                 33,
2166   5                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
2167   5                                                                                                                 datsParam[3],
2168   5                                                                                                                 specialCmd_IF);
2169   5                                              
2170   5                                              heartBeatCount += 1; //ÑÓÊ±ĞÔĞ­µ÷ĞÄÌøÖÍºó 1s
2171   5                                              
2172   5                                              datsSend_request.nwkAddr = nwkAddr_from;
2173   5                                              datsSend_request.portPoint = port_from;
2174   5                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
2175   5                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
2176   5                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
2177   5                                              datsRcv_respond.datsTrans.datsLen = 0;
2178   5                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
2179   5                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 8; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆ
             -ÚÄÚ ·¢ 8 ´Î
2180   5                                              devRunning_Status = status_dataTransRequestDatsSend;
2181   5                                              
2182   5      //#if(DEBUG_LOGOUT_EN == 1)
2183   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2184   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2185   5      //                                              sprintf(log_buf, ">>>>>>>>standby dataTX_buf_tab3:[%02X-%02X-%02X].\n", (int)datsSend_request.dats
             -Trans.dats[20], (int)datsSend_request.datsTrans.dats[21], (int)datsSend_request.datsTrans.dats[22]);
2186   5      //                                              PrintString1_logOut(log_buf);
2187   5      //                                      }                       
2188   5      //#endif        
2189   5                                      }
2190   4                              }
2191   3                      }break;
2192   2                      
2193   2                      /*ĞÄÌø_Íø¹ØÔÚÏß*/
2194   2                      case ZIGB_FRAMEHEAD_HEARTBEAT:{
2195   3                      
2196   3                              
2197   3                              
2198   3                      }break;
2199   2                      
2200   2                      /*ĞÄÌø_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2201   2                      case ZIGB_FRAMEHEAD_HBOFFLINE:{
2202   3                      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 38  

2203   3                              
2204   3                              
2205   3                      }break;
2206   2                      
2207   2      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) /*ºêÅĞÍ·*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2208   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2209   2                      case DTMODEKEEPACESS_FRAMEHEAD_OFFLINE:{
2210   3                              
2211   3                              periodDataTrans_momentHang(6); //internetÀëÏßÇé¿öÏÂ£¬ÖÜÆÚÍ¨Ñ¶¾ÍÃ»ÓÃÁË£¬Í¨ĞÅÆµ´ÎÏÂ½µµ½ 6s/´Î
2212   3      #if(DEBUG_LOGOUT_EN == 1)
2213   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2214   4                                      
2215   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2216   4                                      sprintf(log_buf, ">>>>>>>>internet offline.\n");
2217   4                                      PrintString1_logOut(log_buf);
2218   4                              }       
2219   3      #endif
2220   3                      } /*²»×öbreak*///internetÀëÏßÇé¿öÏÂ£¬Êı¾İ°ü»Ø·¢¸ø×ÓÉè±¸£¬·ÀÖ¹×ÓÉè±¸×öÎŞÒâÒåĞÄÌøÖØ·¢
2221   2                      
2222   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÔÚÏß*/
2223   2                      case DTMODEKEEPACESS_FRAMEHEAD_ONLINE:{
2224   3                      
2225   3                              stt_agingDataSet_bitHold code   agingCmd_Temp = {0};
2226   3                              stt_devOpreatDataPonit xdata    dev_dataPointTemp = {0};
2227   3                              
2228   3                              bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
2229   3                              bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
2230   3                              bit frameDataOnceReserve_PASS = 0; //µ±Ç°Êı¾İ°üµ¥´Î¿ÉÓÃ±êÖ¾
2231   3                              
2232   3                              static u8 dataTrans_oncePword = 0; //Êı¾İ´«Êäµ¥´Î¿ÉÓÃ¿ÚÁî -ÓÃÓÚÇø·Ö²Ù×÷½ØÖ¹/ÖØ·¢
2233   3                              
2234   3      //#if(DEBUG_LOGOUT_EN == 1)
2235   3      //                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2236   3      //                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2237   3      //                              sprintf(log_buf, "periodKeepAcess respondRcv, cmd[%02X], dataLen[%02d].\n", (int)datsParam[8], (int)
             -datsParam[1]);
2238   3      //                              PrintString1_logOut(log_buf);
2239   3      //                      }                       
2240   3      //#endif        
2241   3                              
2242   3                              if(datsParam[datsParam[1] - 1] == frame_Check(&datsParam[1], datsParam[1] - 2))frameCodeCheck_PASS = 1;
             - //Ğ£ÑéÂëĞ£Ñé
2243   3                              if(!memcmp(&datsParam[2], &MAC_ID[1], 5))frameMacCheck_PASS = 1; //MACµØÖ·Ğ£Ñé
2244   3                              
2245   3                              if(frameCodeCheck_PASS && frameMacCheck_PASS){ 
2246   4                      
2247   4                                      memcpy(&dev_dataPointTemp, &datsParam[15], sizeof(stt_devOpreatDataPonit)); //Êı¾İ½á¹¹»¯
2248   4                                      
2249   4      //#if(DEBUG_LOGOUT_EN == 1)
2250   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2251   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2252   4      //                                      sprintf(log_buf, "agingCmd[%02X], swAging[%d], val[%02X].\n", (int)datsParam[8],
2253   4      //                                                                                                                                                                (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat, 
2254   4      //                                                                                                                                                                (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2255   4      //                                      PrintString1_logOut(log_buf);
2256   4      //                              }                       
2257   4      //#endif        
2258   4                              
2259   4                                      switch(datsParam[8]){ //Ö¡ÃüÁî
2260   5                                      
2261   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
2262   6                                                      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 39  

2263   6                                                      static bit local_ftyRecover_standbyFLG = 0; //»Ö¸´³ö³§ÉèÖÃ²Ù×÷Ô¤¶¯×÷±êÖ¾
2264   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                                                              static u8 local_infraredOpreat_ReserveNum = 1; //ºìÍâ²Ù×÷¿ÉÓÃ¿ÚÁîÖµ -±ÜÃâĞÅºÅ²»ºÃÊ±£¬Ê±Ğ§Î»ÖØ¸´´¥·¢º
             -ìÍâ²Ù×÷£¨Ã¿´Î²Ù×÷¶¼²úÉúĞÂµÄ¿ÚÁîÖµ£©
              #endif          
2267   6                                                      /*·ÇÊ±Ğ§ĞÔÃüÁîÅĞ¶Ï*///Êı¾İ²»Ò»ÖÂÊ±£¬¸üĞÂ»º´æºóÖ´ĞĞ¶¯×÷¼´¿É£¨·ÇÊ±Ğ§ÔòÃ¿´Î»ñÈ¡Êı¾İÊ±¶¼ÒªÓë±¾µØÊı¾İ×÷±È
             -½Ï£©
2268   6      //                                              { //ÆÕÍ¨¿ª¹Ø²Ù×÷£¬ÎŞĞèÊ±Ğ§
2269   6      //                                              
2270   6      //                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2271   6      //                                                      
2272   6      //                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2273   6      //                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2274   6      //                                                              
2275   6      //#if(DEBUG_LOGOUT_EN == 1)
2276   6      //                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2277   6      //                                                                      
2278   6      //                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2279   6      //                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x0
             -7, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2280   6      //                                                                      PrintString1_logOut(log_buf);
2281   6      //                                                              }                       
2282   6      //#endif        
2283   6      //                                                      }
2284   6      //                                              }
2285   6                                                      
2286   6      //                                              { //¿ª¹Ø¶¨Ê±²Ù×÷£¬ÎŞĞèÊ±Ğ§
2287   6      //                                              
2288   6      //                                                      timing_Dats xdata timDatsTemp_CalibrateTab[TIMEER_TABLENGTH] = {0};
2289   6      //                                                      
2290   6      //                                                      datsTiming_read_eeprom(timDatsTemp_CalibrateTab);
2291   6      //                                                      if(memcmp(timDatsTemp_CalibrateTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) * TIMEER
             -_TABLENGTH)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2292   6      //                                                      
2293   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) 
             -* TIMEER_TABLENGTH);
2294   6      //                                                      }
2295   6      //                                              }
2296   6                                                      
2297   6      //                                              { //ÂÌÉ«Ä£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2298   6      //                                              
2299   6      //                                                      if(delayPeriod_closeLoop != dev_dataPointTemp.devData_greenMode){
2300   6      //                                                      
2301   6      //                                                              
2302   6      //                                                      }
2303   6      //                                              }
2304   6                                                      
2305   6      //                                              { //Ò¹¼äÄ£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2306   6      //                                                      
2307   6      //                                                      timing_Dats xdata nightDatsTemp_CalibrateTab[2];
2308   6      //                                                      
2309   6      //                                                      datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
2310   6      //                                                      if(memcmp(nightDatsTemp_CalibrateTab, dev_dataPointTemp.devData_nightMode, sizeof(timing_Dats) * 
             -2)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2311   6      //                                                      
2312   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dev_dataPointTemp.devData_nightMode, sizeof(ti
             -ming_Dats) * 2);
2313   6      //                                                      }       
2314   6      //                                              }
2315   6                                                      
2316   6      //                                              { //±³¹âµÆÉèÖÃ²Ù×÷£¬ÎŞĞèÊ±Ğ§
2317   6      //                                              
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 40  

2318   6      //                                              }
2319   6                                                      
2320   6                                                      /*Ê±Ğ§ĞÔÃüÁîÅĞ¶Ï*///¸üĞÂÊ±Ğ§²Ù×÷ºó£¬Çå¿ÕÊ±Ğ§²Ù×÷Î»£¨Ê±Ğ§ÊÇÎªÁË½ÚÔ¼ĞÔÄÜ²»ÓÃÃ¿´Î²éÑ¯Ê±¶¼×÷±È½Ï£©
2321   6                                                      if(memcmp(&agingCmd_Temp, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_agingDataSet_
             -bitHold))){ //Ò»µ©ÓĞÊ±Ğ§Ö¸ÁîÎ»ÖÃ 1 £¬Ö»ÒªÓĞÊ±Ğ§Õ¼Î»£¬¾ÍÔ­Î»»Ø·¢
2322   7                                                              
2323   7                                                              heartBeatCount = PERIOD_HEARTBEAT_ASR; //ÓĞÊ±Ğ§¿ØÖÆ£¬Ç¿ĞĞÌáÇ°ĞÄÌøÁ¢¼´»ØÂë
2324   7                                                              
2325   7                                                              memcpy(&dev_agingCmd_rcvPassive, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_aging
             -DataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬ÓÃÓÚÔ­Î»»Ø·¢
2326   7                                                      
2327   7                                                              if(dataTrans_oncePword != datsParam[datsParam[1] - 2]){ //Êı¾İ°üµ¥´Î´«Êä¿ÉÓÃ¿ÚÁî¼ì²â -¿ÚÁîÏàÍ¬ÔòÎªÖ
             -Ø·¢£¬ÖØ·¢Ö»»ØÂë£¬µ¥²»½øĞĞÏìÓ¦²Ù×÷
2328   8                                                              
2329   8                                                                      dataTrans_oncePword = datsParam[datsParam[1] - 2]; //±¾µØ¿ÚÁî¸üĞÂ£¬ÓÃÓÚÏÂ´ÎÅĞ¶Ï
2330   8                                                                      frameDataOnceReserve_PASS = 1;
2331   8                                                              }
2332   7                                                              
2333   7                                                              if(frameDataOnceReserve_PASS){ //·ÇÖØ·¢Ö¸Áî£¬ÏìÓ¦²Ù×÷²ÅÉúĞ§
2334   8                                                              
2335   8                                                                      beeps_usrActive(3, 50, 1);
2336   8                                                                      
2337   8                                                                      /*Ê±Ğ§²Ù×÷½âÎö*/                
2338   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat){ //¿ª¹Ø×´Ì¬²Ù×÷£¬ĞèÒªÊ±Ğ§
2339   9                                                                              
2340   9      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                                                                                      if(status_Relay != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){
                                                                                      
                                                                                              swCommand_fromUsr.objRelay = datsParam[21]; //Õû×Ö½Ú±íÊ¾ÁÁ¶È
                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                      
                                                                                              EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
                                                                                              devActionPush_IF.push_IF = 0; //ÍÆËÍÊ§ÄÜ£¬²»ÊÇ¶àÎ»¿ª¹Ø£¬²»ÍÆËÍ
               #if(DEBUG_LOGOUT_EN == 1)
                                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                                      
                                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay, (int
             -)datsParam[21]);
                                                                                                      PrintString1_logOut(log_buf);
                                                                                              }                       
               #endif 
                                                                                      }
                                                                                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
                                                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
                                                                                      
                                                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                                              (swCommand_fromUsr.objRelay == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKe
             -epOpen):(heater_ActParam.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                                                                                      }
                                                                                      
              #else
2367   9                                                                              if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2368  10                                                                              
2369  10                                                                                      swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2370  10                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
2371  10                                                                                      
2372  10                                                                                      if((SWITCH_TYPE == SWITCH_TYPE_SWBIT1) || //¶àÎ»¿ª¹Ø²Å½øĞĞÁ¢ÂíÍÆËÍ
2373  10                                                                                         (SWITCH_TYPE == SWITCH_TYPE_SWBIT2) ||
2374  10                                                                                         (SWITCH_TYPE == SWITCH_TYPE_SWBIT3)){
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 41  

2375  11      
2376  11                                                                                                      EACHCTRL_realesFLG |= (status_Relay ^ swCommand_fromUsr.objRelay); //ÓĞĞ§»¥¿Ø´¥·¢
2377  11                                                                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
2378  11                                                                                                 
2379  11                                                                                      }
2380  10                                                                                      else
2381  10                                                                                      if(SWITCH_TYPE == SWITCH_TYPE_CURTAIN)EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢                                                                       
2382  10                                                                              }
2383   9      #endif
2384   9                                                                              
2385   9       #if(DEBUG_LOGOUT_EN == 1)
2386   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2387  10                                                                                      
2388  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2389  10                                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x07
             -, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2390  10                                                                                      PrintString1_logOut(log_buf);
2391  10                                                                              }                       
2392   9       #endif
2393   9                                                                      }
2394   8                                                                      
2395   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_delaySetOpreat){ //ÑÓÊ±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2396   9                                      
2397   9                                                                              if(dev_dataPointTemp.devData_delayer){ //ÑÓÊ±Ê±¼ä´óÓÚ0¾ÍÊÇ¿ª
2398  10                                                                              
2399  10                                                                                      ifDelay_sw_running_FLAG |= (1 << 1); //ÑÓÊ±±êÖ¾¸üĞÂ£¬Æô¶¯
2400  10                                                                                      delayPeriod_onoff               = dev_dataPointTemp.devData_delayer; //ÑÓÊ±Ê±¼ä
2401  10                                                                                      delayUp_act                             = dev_dataPointTemp.devData_delayUpStatus; //ÑÓÊ±µ½´ïÊ±£¬¿ª¹ØÏìÓ¦×´Ì¬
2402  10                                                                                      delayCnt_onoff                  = 0; //ÑÓÊ±¼ÆÊıÇåÁã
2403  10       #if(DEBUG_LOGOUT_EN == 1)
2404  10                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2405  11                                                                                              
2406  11                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2407  11                                                                                              sprintf(log_buf, ">>>>>>>>delayPeriod:[%d], delayUpAct:[%02X].\n", (int)delayPeriod_onoff, (int
             -)delayUp_act);
2408  11                                                                                              PrintString1_logOut(log_buf);
2409  11                                                                                      }                       
2410  10       #endif 
2411  10                                                                                      
2412  10                                                                              }else{
2413  10                                                                              
2414  10                                                                                      ifDelay_sw_running_FLAG &= ~(1 << 0); //ÑÓÊ±±êÖ¾¸üĞÂ
2415  10                                                                                      delayPeriod_onoff               = 0; 
2416  10                                                                                      delayCnt_onoff                  = 0; 
2417  10                                                                              }
2418   9                                                                      }
2419   8                                                                      
2420   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devResetOpreat){ //³ö³§ÉèÖÃ¸´Î»¶¯×÷£¬Ğ
             -èÒªÊ±Ğ§
2421   9                                                                              
2422   9                                                                              local_ftyRecover_standbyFLG = 1; //½ÓÊÕµ½»Ö¸´³ö³§¶¯×÷ºó£¬½«»Ö¸´³ö³§ÉèÖÃ¶¯×÷½øĞĞ¾ÍĞ÷Ì¬¼ÇÂ¼£¬µÈ´ıÊ±
             -Ğ§±êÖ¾ÖÃÁãºóÔÙ½øĞĞÊµ¼Ê¶¯×÷                                    
2423   9       #if(DEBUG_LOGOUT_EN == 1)
2424   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2425  10                                                              
2426  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2427  10                                                                                      sprintf(log_buf, ">>>>>>>>factory recover standBy!.\n");
2428  10                                                                                      PrintString1_logOut(log_buf);
2429  10                                                                              }                       
2430   9       #endif         
2431   9                                                                      }
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 42  

2432   8                                                                      
2433   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devLock){ //Éè±¸ËøÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2434   9                                                                      
2435   9                                                                              u8 deviceLock_IF = 0; //²Ù×÷×Ö½Ú»º´æ
2436   9                                                                              
2437   9       #if(DEBUG_LOGOUT_EN == 1)
2438   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2439  10                                                                                      
2440  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2441  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd devLock coming, lockIf:[%d].\n", (int)dev_dataPointTemp.devSt
             -atus_Reference.statusRef_devLock);
2442  10                                                                                      PrintString1_logOut(log_buf);
2443  10                                                                              }                       
2444   9       #endif 
2445   9                                                                              
2446   9                                                                              if(dev_dataPointTemp.devStatus_Reference.statusRef_devLock){ //Êı¾İ·ÅÔÚ×´Ì¬Àï
2447  10                                                                              
2448  10                                                                                      deviceLock_flag = deviceLock_IF = 1; //ÔËĞĞ»º´æ¸üĞÂ
2449  10                                                                                      
2450  10                                                                              }else{
2451  10                                                                              
2452  10                                                                                      deviceLock_flag = deviceLock_IF = 0; //ÔËĞĞ»º´æ¸üĞÂ
2453  10                                                                              }
2454   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2455   9                                                                      }
2456   8                                                                      
2457   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_timerSetOpreat){ //¶¨Ê±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2458   9                                                                              
2459   9                                                                              u8 loop = 0;
2460   9       #if(DEBUG_LOGOUT_EN == 1)
2461   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2462  10                                                                                      
2463  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2464  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd timer coming, dataTab1:[%02X-%02X-%02X].\n", (int)dev_dataPoi
             -ntTemp.devData_timer[0],
2465  10                                                                                                                                                                                                                                                      (int)dev_dataPointTemp.devData_timer[1],
2466  10                                                                                                                                                                                                                                                      (int)dev_dataPointTemp.devData_timer[2]);
2467  10                                                                                      PrintString1_logOut(log_buf);
2468  10                                                                              }                       
2469   9       #endif 
2470   9                                                                              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //ÔËĞĞ»º´æ¸üĞÂ
2471  10                                                                              
2472  10                                                                                      if(dev_dataPointTemp.devData_timer[loop * 3] == 0x80){  /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±
             -»´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞÔ
2473  11                                                                                      
2474  11                                                                                              swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
2475  11                                                                                              dev_dataPointTemp.devData_timer[loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½
             -øĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´ÎÖ´ĞĞÍê±ÏºóÇå³ı
2476  11                                                                                              
2477  11                                                                                      }else{
2478  11                                                                                      
2479  11                                                                                              swTim_oneShoot_FLAG &= ~(1 << loop); //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
2480  11                                                                                      }
2481  10                                                                              }
2482   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) *
             - TIMEER_TABLENGTH); //Ö±½Ó¸üĞÂeepromÊı¾İ
2483   9                                                                              itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2484   9                                                                              
2485   9      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED) //Ç¿ÖÆ¿ª¹ØÀàĞÍÎªºìÍâ×ª·¢Æ÷Ê±£¬ÒòÎª3bit²»×ãÒÔ±íÊ¾ºìÍâÖ¸Áî
             -ĞòºÅ£¬ËùÒÔĞèÒªÊ¹ÓÃÁíÍâÀ©Õ¹µÄ8bytesÀ´½øĞĞÒµÎñ²Ù×÷
                                                                                      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 43  

               #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>timer opreatIR cmdNum1 is: %d.\n", (int)dev_dataPointTemp.union_devPar
             -am.infrared_param.irTimeAct_timeUpNum[0]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }       
               #endif 
                                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTypeForceInfrared_timeUpActNum, dev_dataPointTemp.union_devPara
             -m.infrared_param.irTimeAct_timeUpNum, TIMEER_TABLENGTH); //8¶ÎºìÍâ¶¨Ê±ÏìÓ¦²Ù×÷Ö¸ÁîĞòºÅ´æ´¢
              #endif                                                          
2497   9                                                                      }
2498   8                                                                      
2499   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_greenModeSetOpreat){ //ÂÌÉ«Ä£Ê½ÉèÖÃ²Ù×
             -÷£¬ĞèÒªÊ±Ğ§
2500   9                                                                              
2501   9       #if(DEBUG_LOGOUT_EN == 1)
2502   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2503  10                                                                                      
2504  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2505  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd greenMode coming, timeSet:%d.\n", (int)dev_dataPointTemp.devD
             -ata_greenMode);
2506  10                                                                                      PrintString1_logOut(log_buf);
2507  10                                                                              }                       
2508   9       #endif 
2509   9                      
2510   9                                                                              (dev_dataPointTemp.devData_greenMode)?(ifDelay_sw_running_FLAG |= (1 << 0)):(ifDelay_sw_running_F
             -LAG &= ~(1 << 0)); //¸üĞÂÔËĞĞ»º´æ
2511   9                                                                              delayPeriod_closeLoop = dev_dataPointTemp.devData_greenMode;
2512   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2513   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2514   9                                                                      }
2515   8                                                                      
2516   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_nightModeSetOpreat){ //Ò¹¼äÄ£Ê½ÉèÖÃ²Ù×
             -÷£¬ĞèÒªÊ±Ğ§
2517   9                                                                              
2518   9                                                                              u8 dataTemp[sizeof(timing_Dats) * 2] = {0};
2519   9       #if(DEBUG_LOGOUT_EN == 1)
2520   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2521  10                                                                                      
2522  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2523  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd nightMode coming with dats:[%02X %02X %02X", (int)dev_dataPoi
             -ntTemp.devData_nightMode[0],
2524  10                                                                                                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[1],
2525  10                                                                                                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[2]);
2526  10                                                                                      PrintString1_logOut(log_buf);
2527  10                                                                                                                                                                                                                                                      
2528  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2529  10                                                                                      sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_dataPointTemp.devData_nightMode[3],
2530  10                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[4],
2531  10                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[5]);
2532  10                                                                                      PrintString1_logOut(log_buf);
2533  10                                                                              }                       
2534   9       #endif 
2535   9                                                                              (dev_dataPointTemp.devData_nightMode[0])?(dataTemp[0] |= 0x7f):(dataTemp[0] &= ~0x7f); //È«ÌìÒ¹¼ä
2536   9                                                                              (dev_dataPointTemp.devData_nightMode[1])?(dataTemp[0] |= 0x80):(dataTemp[0] &= ~0x80); //Ê±¶ÎÒ¹¼ä
2537   9                                                                              dataTemp[1] = dev_dataPointTemp.devData_nightMode[2]; //×Ö½ÚÏÂ±ê2 µÍ5Î» Ê±
2538   9                                                                              dataTemp[2] = dev_dataPointTemp.devData_nightMode[3]; //×Ö½ÚÏÂ±ê3 È«8Î» ·Ö
2539   9                                                                              dataTemp[4] = dev_dataPointTemp.devData_nightMode[4]; //×Ö½ÚÏÂ±ê4 µÍ5Î» Ê±
2540   9                                                                              dataTemp[5] = dev_dataPointTemp.devData_nightMode[5]; //×Ö½ÚÏÂ±ê5 È«8Î» ·Ö
2541   9                                                                              
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 44  

2542   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dataTemp, sizeof(timing_Dats) * 2); //Ö±½Ó¸üĞÂe
             -epromÊı¾İ
2543   9                                                                              itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2544   9                                                                      }
2545   8                                                                      
2546   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_bkLightSetOpreat){ //±³¹âµÆÉèÖÃ²Ù×÷£¬Ğ
             -èÒªÊ±Ğ§
2547   9                                                                              
2548   9       #if(DEBUG_LOGOUT_EN == 1)
2549   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2550  10                                                                                      
2551  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2552  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd bkLight coming, on-Isrt:%02d, off-Isrt:%02d.\n", (int)dev_dat
             -aPointTemp.devData_bkLight[0], (int)dev_dataPointTemp.devData_bkLight[1]);
2553  10                                                                                      PrintString1_logOut(log_buf);
2554  10                                                                              }                       
2555   9       #endif 
2556   9                                                                      
2557   9                                                                              memcpy(&devBackgroundLight_param, dev_dataPointTemp.devData_bkLight, sizeof(bkLightColorInsert_pa
             -ramAttr)); //»º´æ¸üĞÂ
2558   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, (u8*)&devBackgroundLight_param, sizeof(bkLightCo
             -lorInsert_paramAttr)); //±¾µØ´æ´¢¸üĞÂ
2559   9                                                                      }
2560   8                                                                      
2561   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_horsingLight){ //ÅÜÂíµÆÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2562   9                                                                      
2563   9       #if(DEBUG_LOGOUT_EN == 1)
2564   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2565  10                                                                                      
2566  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2567  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd horsingLight coming, opreatData:%02X.\n", (int)dev_dataPointT
             -emp.devStatus_Reference.statusRef_horsingLight);
2568  10                                                                                      PrintString1_logOut(log_buf);
2569  10                                                                              }       
2570   9       #endif 
2571   9                                                                              
2572   9                                                                              ifHorsingLight_running_FLAG = dev_dataPointTemp.devStatus_Reference.statusRef_horsingLight;
2573   9                                                                              if(ifHorsingLight_running_FLAG)counter_ifTipsFree = 0;
2574   9                                                                              else tips_statusChangeToNormal();
2575   9                                                                      }
2576   8                                                                      
2577   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat){ //¿ª¹ØÎ»»¥¿Ø°
             -ó¶¨²Ù×÷ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2578   9                                                                      
2579   9                                                                              u8 xdata loop = 0;
2580   9       #if(DEBUG_LOGOUT_EN == 1)
2581   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2582  10                                                                                      
2583  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2584  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd switchBindSet coming, opreatBitHold:%02X bindData:%02X %02X %
             -02X.\n", (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat,
2585  10                                                                                                                                                                                                                                                                                                       (int)dev_dataPointTemp.devData_switchBitBind[0], 
2586  10                                                                                                                                                                                                                                                                                                       (int)dev_dataPointTemp.devData_switchBitBind[1], 
2587  10                                                                                                                                                                                                                                                                                                       (int)dev_dataPointTemp.devData_switchBitBind[2]);
2588  10                                                                                      PrintString1_logOut(log_buf);
2589  10                                                                              }       
2590   9       #endif 
2591   9                                                                              
2592   9                                                                              for(loop = 0; loop < 3; loop ++){ //´æ´¢Öµ¼°»º´æÖµ¸üĞÂ
2593  10                                                                              
2594  10                                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat & (1 << loop)
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 45  

             -){
2595  11                                                                                      
2596  11                                                                                              coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &dev_dataPointTemp.devData_switchBitB
             -ind[loop], 1);
2597  11                                                                                              CTRLEATHER_PORT[loop] = dev_dataPointTemp.devData_switchBitBind[loop];
2598  11                                                                                      }
2599  10                                                                              }
2600   9                                                                              
2601   9                                                                              reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2602   9                                                                      }
2603   8                                                                      
2604   8      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_infrareOpreat){ //ºìÍâ×ª·¢Æ÷²Ù×÷£¬ĞèÒª
             -Ê±Ğ§
               #if(DEBUG_LOGOUT_EN == 1)                                                              
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd infrareOpreat coming, optCmd:%02X, insertNum:%d .\n", (int)de
             -v_dataPointTemp.union_devParam.infrared_param.opreatAct,
                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.union_devParam.infrared_param.opreatInsert);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }
               #endif                                                         
                                                                                      if(local_infraredOpreat_ReserveNum != dev_dataPointTemp.union_devParam.infrared_param.currentOpre
             -atReserveNum){ //²Ù×÷¿ÉÓÃÅĞ¶Ï
                                                                                      
                                                                                              local_infraredOpreat_ReserveNum = dev_dataPointTemp.union_devParam.infrared_param.currentOpreatR
             -eserveNum; //ºìÍâ²Ù×÷¿ÉÓÃ¿ÚÁîÖµ¸üĞÂ
                                                                                              
                                                                                              infraredOpreatAct_Stop(); //ÖĞ¶ÏºìÍâµ±Ç°²Ù×÷
                                                                                              
                                                                                              switch(dev_dataPointTemp.union_devParam.infrared_param.opreatAct){ //ºìÍâ²Ù×÷Ö¸Áî½âÎö
                                                                                              
                                                                                                      case IR_OPREATCMD_CONTROL:{ //¿ØÖÆ
                                                                                                      
                                                                                                              infraredOpreatAct_remoteControlStart(dev_dataPointTemp.union_devParam.infrared_param.opreatIns
             -ert);
                                                                                                      
                                                                                                      }break;
                                                                                                      
                                                                                                      case IR_OPREATCMD_LEARNNING:{ //Ñ§Ï°
                                                                                                      
                                                                                                              infraredOpreatAct_learnningStart(dev_dataPointTemp.union_devParam.infrared_param.opreatInsert)
             -;
                                                                                                      
                                                                                                      }break;
                                                                                                      
                                                                                                      default:{}break;
                                                                                              }
                                                                                      }
                                                                              }
                                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_scenarioSwOpreat){ //³¡¾°¿ª¹ØÉèÖÃ²Ù×÷£
             -¬×¢²á»ò×¢Ïú³¡¾°
                                                                                      
                                                                                      u8 loop = 0;
                                                                                                                                              
                                                                                      for(loop = 0; loop < 3; loop ++){
                                                                                              
                                                                                              if(dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioKeyBind[loop]){ //·ÇÁã²ÅÊÇÓĞĞ§²Ù×÷£
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 46  

             -¬·ñÔò¶ÔÓ¦¼üÎ»°ó¶¨³¡¾°ºÅ½ûÖ¹¸ü¸Ä
                                                                                              
                                                                                                      switch(dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioOpreatCmd){
                                                                                                      
                                                                                                              case DATATRANS_KEEPACESS_SCENARIOSW_SONSCOMMAND_SCENARIOreg:{ //¼üÎ»°ó¶¨³¡¾°ºÅ×¢²á
                                                                                                              
                                                                                                                      scenario_ActParam.scenarioNum_record[loop] = dev_dataPointTemp.union_devParam.scenarioSw_para
             -m.scenarioKeyBind[loop];
                                                                                                              
                                                                                                              }break;
                                                                                                              
                                                                                                              case DATATRANS_KEEPACESS_SCENARIOSW_SONSCOMMAND_SCENARIOdel:{ //¼üÎ»°ó¶¨³¡¾°ºÅ×¢Ïú
                                                                                                              
                                                                                                                      scenario_ActParam.scenarioNum_record[loop] = 0;
                                                                                                              
                                                                                                              }break;
                                                                                                              
                                                                                                              default:{}break;
                                                                                                      }
                                                                                                      
                                                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTypeForceScenario_scencarioNumKeyBind, scenario_ActParam.scen
             -arioNum_record, 3); //µôµç´æ´¢¸üĞÂ
                                                                                              }
                                                                                      }
                                                                                      
               #if(DEBUG_LOGOUT_EN == 1)                                                              
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd scenarioSwOpreat coming, optCmd:%02X, current kNum: [%d, %d, 
             -%d]\n", (int)dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioOpreatCmd,
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[0],
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[1],
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[2]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }
               #endif 
                                                                                      
                                                                              }
              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)                                                               
              #else
2689   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_curtainOpPeriodSetOpreat){ //´°Á±¹ìµÀÖ
             -ÜÆÚÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2690   9                                                                      
2691   9       #if(DEBUG_LOGOUT_EN == 1)
2692   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2693  10                                                                                      
2694  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2695  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd curtainOrbitalSet coming, valSet:%d .\n", (int)dev_dataPointT
             -emp.union_devParam.curtain_param.orbital_Period);
2696  10                                                                                      PrintString1_logOut(log_buf);
2697  10                                                                              }       
2698   9       #endif 
2699   9                                                                              //»º´æÊ±¼ä¼°´æ´¢Êı¾İ¸üĞÂ
2700   9                                                                              curtainAct_Param.act_period = dev_dataPointTemp.union_devParam.curtain_param.orbital_Period;
2701   9                                                                              if(curtainAct_Param.act_period == 0xff)curtainAct_Param.act_period = CURTAIN_ORBITAL_PERIOD_INITT
             -IME;
2702   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_curtainOrbitalPeriod, &(curtainAct_Param.act_period), 1);
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 47  

2703   9                                                                              
2704   9                                                                              //Ã¿´ÎÉèÖÃ¹ìµÀÊ±¼äÊ±£¬¶¼½øĞĞÒ»´ÎÈ«¹Ø½ÃÕı²Ù×÷
2705   9                                                                              swCommand_fromUsr.objRelay = 1; //¹Ø²Ù×÷
2706   9                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2707   9      //                                                                      curtainAct_Param.act_counter = curtainAct_Param.act_period; //¹ìµÀÎ»ÖÃ¼ÆÊ±ÖµÖØĞÂ¸³ÖµĞ£×¼  --ĞèÒ
             -ªµÈ´ıÊµ¼Êµç»ú×ª¶¯£¬°Ñ´°Á±¹éÎ»£¬ËùÒÔ²»ÄÜÖ±½Ó½øĞĞÖµ¸üĞÂ
2708   9                                                                      }
2709   8      #endif
2710   8                                                              }
2711   7                                                      
2712   7                                                      }else{
2713   7                                                      
2714   7                                                              memset(&dev_agingCmd_rcvPassive, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2715   7                                                              
2716   7                                                              if(local_ftyRecover_standbyFLG){ //µ±Ê±Ğ§±êÖ¾ÖÃÁãºó²ÅÖ´ĞĞ»Ö¸´³ö³§¶¯×÷£¬·ñÔòÉÏÎ»»ú»áÒ»Ö±ÍùÏÂ·¢¸´Î»
2717   8                                                                      
2718   8      #if(DEBUG_LOGOUT_EN == 1)
2719   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2720   9                                                                              
2721   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2722   9                                                                              sprintf(log_buf, ">>>>>>>>factory recover doing now!.\n");
2723   9                                                                              PrintString1_logOut(log_buf);
2724   9                                                                      }                       
2725   8      #endif  
2726   8                                                                      local_ftyRecover_standbyFLG = 0;
2727   8                                                                      Factory_recover();
2728   8                                                              }
2729   7                                                      }
2730   6                                                      
2731   6                                              }break;
2732   5                                                      
2733   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
2734   6                                                      
2735   6                                                      if(memcmp(&dev_agingCmd_sndInitative, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_a
             -gingDataSet_bitHold))){ //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬Ê±Ğ§Õ¼Î»Óë±¾µØ²»Ò»ÖÂ Ñ¯·ÃÃüÁî¾ÍÒ»Ö±ÎªÖ÷¶¯
2736   7                                                      
2737   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
2738   7                                                              
2739   7                                                      }else{
2740   7                                                      
2741   7                                                              heartBeatPeriod = PERIOD_HEARTBEAT_ASR; //ÇĞ»»Îª±»¶¯Ñ¯·Ã£¬ĞÄÌøÖÜÆÚ¸ÄÎª±»¶¯
2742   7                                                              memset(&dev_agingCmd_sndInitative, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2743   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR;
2744   7                                                      }
2745   6                                                      
2746   6                                              }break;
2747   5                                                      
2748   5                                              default:{}break;
2749   5                                      }
2750   4                              }
2751   3                              
2752   3                      }break;
2753   2      
2754   2      #endif /*ºêÅĞÎ²*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2755   2                      
2756   2                      default:{}break;
2757   2              }
2758   1      }
2759          
2760          /*»Ö¸´³ö³§Ô¤ÖÃ¶¯×÷*/
2761          void fun_factoryRecoverOpreat(void){
2762   1      
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 48  

2763   1              devStatus_switch.statusChange_standBy = status_devFactoryRecoverStandBy;
2764   1              devStatus_switch.statusChange_IF = 1;
2765   1              
2766   1              factoryRecover_HoldTimeCount = 6;
2767   1              factoryRecover_standBy_FLG = 1;
2768   1              tips_statusChangeToFactoryRecover(6);
2769   1      }
2770          
2771          /*zigbeeÖ÷Ïß³Ì*///¶¯×÷×èÈû´óÓÚ200msµÄº¯Êı¶¼ÉèÎª×´Ì¬»úÔËĞĞ£¬ÆäËüĞ¡ÓÚ200msº¯Êı£¬×èÈûÎ¬³Ö£¬·ñÔò×´Ì¬»ú¸´ÔÓ¶È¼Ó
             -´ó
2772          void thread_dataTrans(void){
2773   1              
2774   1              u8 code cmd_datsComing[2] = {0x44, 0x81}; //Ô¶¶ËÊı¾İÖ¡Ö¸Áî
2775   1              u8 code cmd_nwkOpenNote[2] = {0x45, 0xCB}; //ÍøÂç¿ª·ÅÍ¨Öª
2776   1      
2777   1      #define dataLen_zigbDatsTrans (128 + 25)
2778   1              u8 xdata paramTX_temp[dataLen_zigbDatsTrans] = {0};
2779   1              u8 xdata paramRX_temp[dataLen_zigbDatsTrans] = {0};
2780   1              
2781   1              static bit heartBeat_cmdFLG = 0; //ĞÄÌøÆæÅ¼±êÖ¾
2782   1              
2783   1              /*zigbÖ÷Ïß³ÌÏµÍ³Ê±¼ä¸üĞÂ*/
2784   1              if(!sysTimeReales_counter){ 
2785   2              
2786   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES;
2787   2                      getSystemTime_reales();
2788   2              }
2789   1              
2790   1              /*zigbÖ÷Ïß³Ì×´Ì¬»ú£º¸ù¾İ×´Ì¬±êÖ¾ÔËĞĞ*/
2791   1              switch(devRunning_Status){
2792   2              
2793   2                      case status_passiveDataRcv:{
2794   3                              
2795   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
2796   4                              
2797   4                                      devStatus_switch.statusChange_IF = 0;
2798   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
2799   4                                      
2800   4                                      break;
2801   4                              }
2802   3                              
2803   3                              {/*³õÊ¼»¯Ê±¼ä¸³Öµ*///½ö¿ª»ú¸³ÖµÒ»´Î£¬²»×öÊ±Çøµ÷Õû
2804   4                                      static bit FLG_timeSetInit = 1;
2805   4                                      
2806   4                                      if(FLG_timeSetInit){
2807   5                                      
2808   5                                              FLG_timeSetInit = 0;
2809   5                                              zigB_sysTimeSet(1533810700UL - 946713600UL, 0); //zigbeeÊ±¼ä´Á´Óunix¼ÍÔª946713600<2000/01/01 00:00:00
             ->¿ªÊ¼¼ÆËã
2810   5                                              
2811   5                                              dev_currentPanid = ZigB_getPanIDCurrent(); //¿ª»úºó»ñÈ¡Ò»´ÎPINID
2812   5      #if(DEBUG_LOGOUT_EN == 1)
2813   5                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2814   6                                                      
2815   6                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2816   6                                                      sprintf(log_buf, "currentPain get is :%d.\n", (int)dev_currentPanid);
2817   6                                                      PrintString1_logOut(log_buf);
2818   6                                              }       
2819   5      #endif
2820   5                                      }
2821   4                              }
2822   3                              
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 49  

2823   3                              {/*¼´Ê±¸üĞÂtips ¸üĞÂ²¹³¥*///·ÀÖ¹tips¸üĞÂÒÅÂ©
2824   4                              
2825   4                                      if(devTips_status == status_tipsNwkFind)tips_statusChangeToNormal(); //tips¸´Ô­(ÍøÂçÒÑ¼ÓÈë£¬»Ö¸´Õı³£ti
             -ps)
2826   4                                      
2827   4                                      if(!timeCounter_coordinatorLost_detecting){ //±»¶¯¶ªÊ§Íø¹Ø
2828   5                                      
2829   5                                              devTips_nwkZigb = nwkZigb_outLine; //Íø¹Ø¶ªÊ§tipsÓëµôÏßtipsÅĞÎªÒ»Àà
2830   5                                              if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //´¥ÃşÊÍ·Å¼ÆÊ±Ê§ÄÜ£¬ÍøÂçÍ¨ĞÅÒì³££¬²»ÈÃÅÜÅÜÂíµÆ
2831   5                                      }
2832   4                              }
2833   3                              
2834   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ³ÖĞø·¢ËÍ»úÖÆÖ´ĞĞ£¨ÎŞÊÓ»ØÂë£©-------------------------
             ----//Ö÷ÒªÓÃÓÚÕë¶Ô»¥¿ØÒµÎñ
2835   3                              {
2836   4                                      
2837   4                                      u16 code DTREQ_EXATTR_ONCEPERIOD = 251; //µ¥´Î·¢ËÍ¼ä¸ôÊ±¼ä¶¨Òå µ¥Î»£ºms
2838   4                                      u16 idata constandLoop_reserve = datsSend_requestEx[0].constant_Loop + datsSend_requestEx[1].constant_
             -Loop + datsSend_requestEx[2].constant_Loop;
2839   4                                      
2840   4                                      if(constandLoop_reserve){
2841   5                                      
2842   5                                              if(!dtReqEx_counter){
2843   6                                              
2844   6                                                      u16 idata current_Insert = constandLoop_reserve % 3; //´ÎĞòÂÖÁ÷
2845   6                                                      
2846   6      #if(DEBUG_LOGOUT_EN == 1)
2847   6                                                      if((constandLoop_reserve % 3) == 0){ //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä(3¸öloop´òÓ¡Ò»´Î
             -)
2848   7                                                              
2849   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2850   7                                                              sprintf(log_buf, ">>>dtCtrlEach loopParam:%d %d %d.\n", (int)datsSend_requestEx[0].constant_Loop,
2851   7                                                                                                                                                                              (int)datsSend_requestEx[1].constant_Loop,
2852   7                                                                                                                                                                              (int)datsSend_requestEx[2].constant_Loop);
2853   7                                                              PrintString1_logOut(log_buf);
2854   7                                                      }       
2855   6      #endif
2856   6                                                      
2857   6                                                      while(!datsSend_requestEx[current_Insert].constant_Loop){ //´ÎĞòÂÖÁ÷Ç°ÌáÏÂ£¬É¸Ñ¡¿ÉÓÃ
2858   7                                                      
2859   7                                                              current_Insert ++;
2860   7                                                              current_Insert %= 3;
2861   7                                                      }
2862   6                                                      
2863   6                                                      datsSend_requestEx[current_Insert].constant_Loop --;
2864   6                                                      
2865   6                                                      datsSend_requestEx[current_Insert].dats[1] = datsSend_requestEx[current_Insert].constant_Loop; //ÊµÊ
             -±¸üĞÂ³ÖĞø·¢ËÍÊ£Óà´ÎÊıÖµ
2866   6                                                      dataSendRemote_straightforward(datsSend_requestEx[current_Insert].nwkAddr, datsSend_requestEx[curren
             -t_Insert].portPoint, datsSend_requestEx[current_Insert].dats, datsSend_requestEx[current_Insert].datsLen);
2867   6                                                      
2868   6                                                      dtReqEx_counter = DTREQ_EXATTR_ONCEPERIOD;
2869   6                                              }
2870   5                                      }
2871   4                              }
2872   3                              
2873   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º³¡¾°·´Ïò´¥·¢¿ØÖÆ ¼ì²âÊÇ·ñĞèÒª·¢ËÍÊı¾İ--------------------
             ----//Ö÷ÒªÓÃÓÚÕë¶Ô³¡¾°¿ª¹ØÒµÎñ
2874   3      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                      if(scenario_ActParam.scenarioDataSend_FLG){
                                      
                                              frame_zigbScenarioReverseCtrl xdata scenarioData_temp = {0}; //´ı·¢³¡¾°Êı¾İ»º´æ
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 50  

                                              
                                              scenario_ActParam.scenarioDataSend_FLG = 0;
                                              
                                              scenarioData_temp.command = zigbScenarioReverseCtrlCMD_scenarioCtrl; //×ÓÃüÁîÌî×°
                                              switch(scenario_ActParam.scenarioKey_currentTrig){ //³¡¾°ºÅÌî×°
                                              
                                                      case scenarioKey_current_S1:{
                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[0];
                                                      
                                                      }break;
                                                      
                                                      case scenarioKey_current_S2:{
                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[1];
                                                      
                                                      }break;
                                                      
                                                      case scenarioKey_current_S3:{
                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[2];
                                                      
                                                      }break;
                                                              
                                                      default:{
                                                      
                                                              scenarioData_temp.scenario_Num = 0;
                                                              
                                                      }break;
                                              }
                                              (scenarioData_temp.dataOnceReserve_pWord != systemTime_current.time_Second)?\
                                                      (scenarioData_temp.dataOnceReserve_pWord = systemTime_current.time_Second):\
                                                      (scenarioData_temp.dataOnceReserve_pWord = systemTime_current.time_Second + 1); //Êı¾İ¿ÚÁîÌî×° -ÒÔµ±Ç
             -°Ê±¼äÃë×÷ÎªËæ»úÊı¿ÚÁî
                                              
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLSECENARIO; //³¡¾°Êı¾İ×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, &scenarioData_temp, sizeof(frame_zigbScenarioReverseCtrl)); //
             -Êı¾İ½á¹¹»Ø¹éÎªÖ¸Õë
                                              datsSend_request.datsTrans.datsLen = sizeof(frame_zigbScenarioReverseCtrl);
                                              datsRcv_respond.datsTrans.datsLen = 0;
                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 4; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆÚ
             -ÄÚ ·¢ 4´Î
                                              devRunning_Status = status_dataTransRequestDatsSend;
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif
2925   3              
2926   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºĞÄÌø-----------------------------------------------------
             ----//
2927   3                              if(heartBeatCycle_FLG && !heartBeatHang_timeCnt){ //ĞÄÌø´¥·¢±êÖ¾ ¼° ¹ÒÆğÊ±¼ä ÅĞ¶Ï
2928   4                                      
2929   4                                      u8 xdata frame_dataLen = 0; //´ı·¢ËÍÊı¾İÖ¡³¤¶È
2930   4                              
2931   4                                      heartBeatCycle_FLG = 0;
2932   4                                      heartBeat_cmdFLG = !heartBeat_cmdFLG;
2933   4                                      
2934   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 51  

2935   4                                      
2936   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              frame_dataLen = 14;
                                              paramTX_temp[0] = ZIGB_FRAMEHEAD_HEARTBEAT;
                                              paramTX_temp[1] = frame_dataLen ;
                                              (heartBeat_cmdFLG)?(paramTX_temp[2] = FRAME_HEARTBEAT_cmdOdd):(paramTX_temp[2] = FRAME_HEARTBEAT_cmdEv
             -en);
                                              memcpy(&paramTX_temp[4], &MAC_ID[1], 5);
                                              
                                              if(heartBeat_cmdFLG){ //Ææ°ü
                                              
                                                      
                                              
                                              }else{ //Å¼°ü
                                              
                                                      
                                              }
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS)  //ĞÂÖÜÆÚÑ¯·Ã»úÖÆÑ¯·ÃÖÜÆÚ
2953   4                                      
2954   4                                      //×´Ì¬Ìî×°-ÊµÊ±Öµ
2955   4      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                      
                                              //Õû×Ö½ÚÌîÖµ
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = (status_Relay & 0x07) >> 0;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_reserve              = (status_Relay & 0x18) >> 3;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush               = (status_Relay & 0xE0) >> 5;
                                              
              #elif(SWITCH_TYPE_FORCEDEF == 0) //¶àÎ»¿ª¹Ø¸ßÎ»ÍÆËÍÇø·Ö
2963   4                                      
2964   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İµã ¿ª¹Ø
             -×´Ì¬¸üĞÂ
2965   4                                      if(devActionPush_IF.push_IF){ //ÍÆËÍÊı¾İ¼ÓÔØ
2966   5                                      
2967   5                                              devActionPush_IF.push_IF = 0;
2968   5                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush = 0;
2969   5                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush |= devActionPush_IF.dats_Push;
2970   5                                      }
2971   4                                                              
2972   4      #else //ÆäËû¿ª¹ØÃ»ÓĞ¸ßÎ»ÍÆËÍÇø·Ö
                                              //Ö»×°×´Ì¬£¬±¾Éí¾ÍÊÇÍÆËÍ£¬ÆäËüÖµ¸ø0
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_reserve              = 0;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush               = 0;
                                              
              #endif
2979   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_timer                = ifTim_sw_running_FLAG; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İ
             -µã ¶¨Ê±Æ÷×´Ì¬¸üĞÂ
2980   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_devLock              = deviceLock_flag;
2981   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_delay                = (ifDelay_sw_running_FLAG & 0x02) >> 1;
2982   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_greenMode    = (ifDelay_sw_running_FLAG & 0x01) >> 0;
2983   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_nightMode    = ifNightMode_sw_running_FLAG;
2984   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_horsingLight = ifHorsingLight_running_FLAG;
2985   4                                      
2986   4                                      //ÊôĞÔÖµÌî×°-ÊµÊ±Öµ
2987   4                                      {
2988   5                                              u8 xdata loop = 0;
2989   5                                              EEPROM_read_n(EEPROM_ADDR_swTimeTab, &dev_currentDataPoint.devData_timer, sizeof(timing_Dats) * TIMEE
             -R_TABLENGTH); //¶¨Ê±Êı¾İ
2990   5                                              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //Ò»´ÎĞÔÖÜÕ¼Î»»Ö¸´
2991   6                                              
2992   6                                                      if(swTim_oneShoot_FLAG & (1 << loop))dev_currentDataPoint.devData_timer[3 * loop] = 0x80; //Õë¶ÔÒ»´Î
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 52  

             -ĞÔ¶¨Ê±»ØÂëÖÜÕ¼Î»Çå¿Õ
2993   6                                              }
2994   5                                      }
2995   4                                      dev_currentDataPoint.devData_delayer            = delayPeriod_onoff - (delayCnt_onoff / 60); //ÑÓÊ±Êı¾İ
2996   4                                      dev_currentDataPoint.devData_delayUpStatus      = delayUp_act; //ÑÓÊ±ÏìÓ¦×´Ì¬Êı¾İ
2997   4                                      dev_currentDataPoint.devData_greenMode          = delayPeriod_closeLoop; //ÂÌÉ«Ä£Ê½×´Ì¬Êı¾İ
2998   4                                      { //Ò¹¼äÄ£Ê½Êı¾İÌØÊâ×ª»»
2999   5                                              
3000   5                                              timing_Dats xdata nightDatsTemp_CalibrateTab[2] = {0};
3001   5                                              
3002   5                                              datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
3003   5                                              ((nightDatsTemp_CalibrateTab[0].Week_Num & 0x7F) == 0x7F)?(dev_currentDataPoint.devData_nightMode[0] 
             -= 1):(dev_currentDataPoint.devData_nightMode[0] = 0);
3004   5                                              (nightDatsTemp_CalibrateTab[0].if_Timing)?(dev_currentDataPoint.devData_nightMode[1] = 1):(dev_curren
             -tDataPoint.devData_nightMode[1] = 0);
3005   5                                              dev_currentDataPoint.devData_nightMode[2] = nightDatsTemp_CalibrateTab[0].Hour;
3006   5                                              dev_currentDataPoint.devData_nightMode[3] = nightDatsTemp_CalibrateTab[0].Minute;
3007   5                                              dev_currentDataPoint.devData_nightMode[4] = nightDatsTemp_CalibrateTab[1].Hour;
3008   5                                              dev_currentDataPoint.devData_nightMode[5] = nightDatsTemp_CalibrateTab[1].Minute;
3009   5                                              
3010   5      #if(DEBUG_LOGOUT_EN == 1)
3011   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<Ò¹¼äÄ£Ê½ÂãÊı¾İ´òÓ¡
3012   5      //                                              
3013   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3014   5      //                                              sprintf(log_buf, ">>>nightMode dats upload: [%02X %02X %02X",   (int)dev_currentDataPoint.devData_n
             -ightMode[0],
3015   5      //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[1],
3016   5      //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[2]);
3017   5      //                                              PrintString1_logOut(log_buf);
3018   5      //                                                                                                                                                                              
3019   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3020   5      //                                              sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_currentDataPoint.devData_nightMode[3],
3021   5      //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[4],
3022   5      //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[5]);
3023   5      //                                              PrintString1_logOut(log_buf);
3024   5      //                                      }       
3025   5      
3026   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<¶¨Ê±ÔËĞĞ±êÖ¾´òÓ¡
3027   5      //                                      
3028   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3029   5      //                                              sprintf(log_buf, "ifTim_sw_running_FLAG:%d\n",  (int)ifTim_sw_running_FLAG);
3030   5      //                                              PrintString1_logOut(log_buf);
3031   5      //                                      }
3032   5      #endif  
3033   5                                      }
3034   4                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround, &dev_currentDataPoint.devData_bkLight, 2); //±³¾°µÆÊı¾İ
3035   4                                      dev_currentDataPoint.devData_devReset = 0;
3036   4                                      EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther, dev_currentDataPoint.devData_switchBitBind, clusterNum_us
             -r); //»¥¿Ø°ó¶¨Êı¾İ
3037   4                                      { //¸ù¾İÉè±¸ÀàĞÍ£¬·ÖÀàÌî×°Êı¾İ
3038   5                                      
3039   5                                              switch(SWITCH_TYPE){
3040   6                                              
3041   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                                                              case SWITCH_TYPE_SOCKETS:{
                                                                      
                                                                      float code decimal_prtCoefficient = 10000.0F; //Ğ¡ÊıÖµ¼ÆËãÏµÊı  --10000±¶
                                                              
                                                                      { //µçÁ¿Ìî×°
                                                                      u16 integer_prt = (u16)socket_eleDetParam.ele_Consum & 0x00FF;  //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.ele_Consum - (float)integer_prt) * decimal_prtCoefficie
             -nt);        //µçÁ¿Ğ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 53  

                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[0]      = (u8)((integer_prt & 0x00FF) >>
             - 0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[1]      = (u8)((decimal_prt & 0xFF00) >>
             - 8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[2]      = (u8)((decimal_prt & 0x00FF) >>
             - 0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                                      { //¹¦ÂÊÌî×°
                                                                      u16 integer_prt = (u16)socket_eleDetParam.eleParam_power & 0xFFFF;      //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.eleParam_power - (float)integer_prt) * decimal_prtCoeff
             -icient);        //µçÁ¿Ğ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[0]       = (u8)((integer_prt & 0xFF00) >> 
             -8);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[1]       = (u8)((integer_prt & 0x00FF) >> 
             -0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[2]       = (u8)((decimal_prt & 0xFF00) >> 
             -8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[3]       = (u8)((decimal_prt & 0x00FF) >> 
             -0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_corTime = systemTime_current.time_Hour; //¶ÔÓ
             -¦Ğ¡Ê±Çø¼äÌî×°
                                      
                                                                      { //DebugÊı¾İÌî×°-powerFreq<´Ë²¿·ÖÊı¾İµ÷ÊÔºóÈ¥³ı>
                                                                      u16 integer_prt = (u16)socket_eleDetParam.eleParamFun_powerFreqVal & 0xFFFF;    //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.eleParamFun_powerFreqVal - (float)integer_prt) * decima
             -l_prtCoefficient);    //powerFreqĞ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[0] = (u8)((integer_prt & 0xFF0
             -0) >> 8);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[1] = (u8)((integer_prt & 0x00F
             -F) >> 0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[2] = (u8)((decimal_prt & 0xFF0
             -0) >> 8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[3] = (u8)((decimal_prt & 0x00F
             -F) >> 0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                                                              case SWITCH_TYPE_INFRARED:{
                                                              
                                                                      dev_currentDataPoint.union_devParam.infrared_param.opreatAct                                            = IR_currentOpreatRes;                                  //µ±Ç
             -°ºìÍâ²Ù×÷½á¹ûÌî×° -·Ç0¿ÉÓÃ
                                                                      dev_currentDataPoint.union_devParam.infrared_param.opreatInsert                                         = IR_currentOpreatinsert;                               /
             -/µ±Ç°ºìÍâ²Ù×÷¶ÔÓ¦ĞòºÅÌî×°
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentTemperature_integerPrt        = (u8)(temperatur
             -eCurrent_VAL / 100);  //µ±Ç°ºìÍâ×ª·¢Æ÷ÊÒÄÚÎÂ¶ÈÌî×° -ÕûÊı
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentTemperature_decimalPrt        = (u8)(temperature
             -Current_VAL % 100);   //µ±Ç°ºìÍâ×ª·¢Æ÷ÊÒÄÚÎÂ¶ÈÌî×° -Ğ¡Êı
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentOpreatReserveNum                      = 0;                                                                    //ÉÏĞĞ¿ÚÁ
             -îÔİÌî0
                                                                      EEPROM_read_n(EEPROM_ADDR_swTypeForceInfrared_timeUpActNum, dev_currentDataPoint.union_devParam.inf
             -rared_param.irTimeAct_timeUpNum, TIMEER_TABLENGTH);   //°Ë¶ÎºìÍâ¶¨Ê±ÏìÓ¦Ö¸ÁîĞòºÅÌî×°
                                                                      
              // #if(DEBUG_LOGOUT_EN == 1)
              //                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 54  

              //                                                              
              //                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                                              sprintf(log_buf, "---data upload IR timerUp dataNum1:%d.\n", (int)dev_currentDataPoint.union_dev
             -Param.infrared_param.irTimeAct_timeUpNum[0]);
              //                                                              PrintString1_logOut(log_buf);
              //                                                      }                       
              // #endif       
                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                                              case SWITCH_TYPE_SCENARIO:{
                                                              
                                                                      dev_currentDataPoint.union_devParam.scenarioSw_param.scenarioOpreatCmd                          = 0; //³¡¾°²Ù×÷ÏìÓ¦ÃüÁî£¬
             -Ôİ¸ø0
                                                                      memcpy(dev_currentDataPoint.union_devParam.scenarioSw_param.scenarioKeyBind,                     //°´¼ü¶ÔÓ¦°ó¶¨µÄ³¡¾
             -°ºÅ×°Ìî
                                                                                 scenario_ActParam.scenarioNum_record,
                                                                                 3);
                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)                                               
              #else
3114   6                                                      case SWITCH_TYPE_CURTAIN:{
3115   7                                                      
3116   7                                                              dev_currentDataPoint.union_devParam.curtain_param.orbital_Period = curtainAct_Param.act_period;
3117   7                                                      
3118   7                                                      }break;
3119   6      #endif
3120   6                                                      default:{}break;
3121   6                                              }
3122   5                                      }
3123   4                                      
3124   4                                      //Ê±Ğ§²Ù×÷Õ¼Î»Ö¸ÁîÌî×°
3125   4                                      switch(dtModeKeepAcess_currentCmd){
3126   5                                      
3127   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
3128   6                                              
3129   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_rcvPassive, sizeof(stt_agi
             -ngDataSet_bitHold));
3130   6                                              
3131   6                                              }break;
3132   5                                                      
3133   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
3134   6                                              
3135   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_sndInitative, sizeof(stt_a
             -gingDataSet_bitHold));
3136   6                                              
3137   6                                              }break;
3138   5                                                      
3139   5                                              default:{}break;
3140   5                                      }
3141   4                                      
3142   4                                      //Êı¾İÖ¡×ÜÊı¾İÌî×°
3143   4                                      frame_dataLen                                   = 0;
3144   4                                      paramTX_temp[frame_dataLen ++]  = DTMODEKEEPACESS_FRAMEHEAD_ONLINE; //Ö¡Í·
3145   4                                      paramTX_temp[frame_dataLen ++]  = 0;  //Ö¡³¤ÔİÌî0£¬×îºó¸üĞÂ
3146   4                                      memcpy(&paramTX_temp[frame_dataLen], &MAC_ID[1], 5); //MAC , Ç°ÎåÎ»
3147   4                                      frame_dataLen += 6; //¿Õ³ö1Byte MAC
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 55  

3148   4                                      paramTX_temp[frame_dataLen ++]  = dtModeKeepAcess_currentCmd; //ÃüÁî
3149   4                                      paramTX_temp[frame_dataLen ++]  = SWITCH_TYPE; //¿ª¹ØĞÅÏ¢
3150   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0xFF00) >> 8); //PANIDÌî×°
3151   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0x00FF) >> 0); 
3152   4                                      paramTX_temp[frame_dataLen ++]  = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
3153   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_H; //Ê±Çø_Ê±
3154   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_M; //Ê±Çø_·Ö
3155   4                                      memcpy(&paramTX_temp[frame_dataLen], &dev_currentDataPoint, sizeof(stt_devOpreatDataPonit)); //Ö±½ÓÊı¾
             -İÖ¸Õë¶ÔÆë,Êı¾İµãÏòÊı¾İÖ¡´ı·¢»º´æÇ¿í¡
3156   4                                      frame_dataLen += sizeof(stt_devOpreatDataPonit);
3157   4                                      frame_dataLen ++;
3158   4                                      paramTX_temp[1]                                 = frame_dataLen;
3159   4                                      paramTX_temp[frame_dataLen - 1] = frame_Check(&paramTX_temp[1], frame_dataLen - 2); //Ğ£ÑéÂë×îºóËã
3160   4                                      
3161   4      //#if(DEBUG_LOGOUT_EN == 1)
3162   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3163   4      //                      
3164   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3165   4      //                                      sprintf(log_buf, "package_num:[%02d], check_num[%02X].\n", (int)frame_dataLen, (int)paramTX_temp[fr
             -ame_dataLen - 1]);
3166   4      //                                      PrintString1_logOut(log_buf);
3167   4      //                              }                       
3168   4      //#endif        
3169   4                              
3170   4      #endif                          
3171   4                                      datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
3172   4                                      datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
3173   4                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
3174   4                                      memcpy(datsSend_request.datsTrans.dats, paramTX_temp, frame_dataLen );
3175   4                                      datsSend_request.datsTrans.datsLen = frame_dataLen ;
3176   4                                      datsRcv_respond.datsTrans.datsLen = 0;
3177   4                                      devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
3178   4                                      devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 4; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆÚ
             -ÄÚ ·¢ 4´Î
3179   4                                      devRunning_Status = status_dataTransRequestDatsSend;
3180   4                                      
3181   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3182   4                              }
3183   3                              
3184   3                              //------------------------------Ö÷×´Ì¬ÒµÎñ£º±¾µØ¿ª¹ØÊÜ¼¯Èº¿ØÖÆ×´Ì¬Î»ÖÜÆÚĞÔÂÖÑ¯<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>-------
             ---//
3185   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                                      if(!colonyCtrlGet_queryCounter && !colonyCtrlGetHang_timeCnt){ //ÖÜÆÚÑ¯²é ¼° ¹ÒÆğÊ±¼äÅĞ¶Ï
                                      
                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<<<<<<<<<<<<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2...6]       |       frame_data[7]                   |       frame_data[8...10]      |
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾»úMACµØÖ·                     |       ³¡¾°ËµÃ÷(ÔİÎŞËµÃ÷)              |       »¥¿ØËµÃ÷(µ±Ç°×éºÅ)      |               
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              paramTX_temp[0] = ZIGB_SYSCMD_COLONYPARAM_REQPERIOD; //ÃüÁî
                                              paramTX_temp[1] = clusterNum_usr + 5 + 1; //Êı¾İ³¤¶ÈËµÃ÷
                                              memcpy(&paramTX_temp[2], &MAC_ID[1], 5); //MACµØÖ·Ìî×°
                                              paramTX_temp[7] = 0; //³¡¾°ËµÃ÷×°ÔØ(ÎŞËµÃ÷£¬0Ìî³ä)
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 56  

                                              memcpy(&paramTX_temp[8], CTRLEATHER_PORT, clusterNum_usr); //»¥¿ØËµÃ÷×°ÔØ(ËµÃ÷¶Ë¿ÚºÅ)
                                              
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLSYSZIGB; //zigbÏµÍ³½»»¥×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, paramTX_temp[1] + 2); 
                                              datsSend_request.datsTrans.datsLen = paramTX_temp[1] + 2;
                                              datsRcv_respond.datsTrans.datsLen = 0; //²»ĞèÒªÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend;
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
3214   3                              
3215   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İÍÆËÍ-------------------------------------------------
             ---//        
3216   3                              if(devActionPush_IF.push_IF){
3217   4                                      
3218   4                                      const bit dataFromRemote_IF = 1; //Ô¶³ÌÍÆËÍ
3219   4                                      const bit specialCmd_IF = 0; //·ÇÌØÊâÕ¼Î»
3220   4                                      
3221   4                                      u8 xdata datsTX_Len = 0;
3222   4                                      
3223   4                                      devActionPush_IF.push_IF = 0;
3224   4                                      
3225   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              
                                              paramTX_temp[11] = devActionPush_IF.dats_Push; //ÍÆËÍĞÅÏ¢Ìî×°
              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "swData push:%02X.\n", (int)devActionPush_IF.dats_Push);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
                                                                                                                 paramTX_temp,
                                                                                                                 33,
                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
                                                                                                                 FRAME_MtoZIGBCMD_cmdControl,
                                                                                                                 specialCmd_IF);
                                      
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) //ÖÜÆÚÑ¯·Ã»úÖÆÎŞĞèÍÆËÍ£¬Ö»Ğè´¥·¢Ö÷¶¯Ê±Ğ§ÃüÁ
             -î¼´¿É
3255   4                                      
3256   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swPush = (devActionPush_IF.dats_Push & 0xE0) >> 5; 
             -//ÊôĞÔÖµÌî×°
3257   4                                      dev_agingCmd_sndInitative.agingCmd_swOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ğ§Õ¼Î»ÖÃÒ»
3258   4                                      dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 57  

3259   4                                      
3260   4                                      heartBeatPeriod = PERIOD_HEARTBEAT_PST; //Ö÷¶¯Ñ¯·ÃÇĞ»»£¬ĞÄÌøÖÜÆÚ¸ÄÎªÖ÷¶¯
3261   4                                      heartBeatCount  = heartBeatPeriod; 
3262   4      #endif
3263   4      
3264   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3265   4                              }
3266   3                              
3267   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º»¥¿ØÍ¬²½-------------------------------------------------
             ---//
3268   3                              if(EACHCTRL_realesFLG){ //¹ã²¥»¥¿ØÖµ
3269   4                              
3270   4                                      if(devRunning_Status == status_passiveDataRcv){
3271   5                                      
3272   5      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER) //µ÷¹â¿ª¹ØµÄ»¥¿ØÖ±½Ó·ÅÔÚ»¥¿Ø×éÒ»ÄÚ£¬»¥¿ØÊı¾İÎª×´Ì¬Öµ
                                              if(EACHCTRL_realesFLG == 1){
                                                      
                                                      EACHCTRL_realesFLG = 0; //»¥¿ØÓĞĞ§Î»ÇåÁã
                                              
                                                      paramTX_temp[0] = status_Relay; //Ö±½Ó¸øÁÁ¶ÈÖµ
                                                      colonyCtrlGet_statusLocalEaCtrl[0] = paramTX_temp[0]; //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
                                                      localDataRecord_eaCtrl[0] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢Î´¸
             -üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
                                                      
                                                      /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
                                                      datsSend_requestEx[0].nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
                                                      datsSend_requestEx[0].portPoint = CTRLEATHER_PORT[0]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
                                                      memset(datsSend_requestEx[0].dats, 0, 10 * sizeof(u8));
                                                      
                                                      datsSend_requestEx[0].dats[0] = paramTX_temp[0];
                                                      datsSend_requestEx[0].dats[1] = 0; //ÏÂ±ê2Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£¨×îºó·¢Ë
             -ÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
                                                      datsSend_requestEx[0].datsLen = 2;
                                                      datsSend_requestEx[0].constant_Loop = 30; //ÎŞÊÓ»ØÂë£¬·¢30´Î            
                                              }
                                                                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
              #else
3299   5                      
3300   5                                              u8 idata loop;
3301   5                                              
3302   5                                              switch(SWITCH_TYPE){
3303   6                                              
3304   6                                                      case SWITCH_TYPE_SWBIT1:
3305   6                                                      case SWITCH_TYPE_SWBIT2:
3306   6                                                      case SWITCH_TYPE_SWBIT3:{ //Ò»¡¢¶ş¡¢ÈıÎ»¿ª¹Ø»¥¿ØÇø·Ö¿ª¹ØÎ»
3307   7                                                      
3308   7                                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //Èı¸ö¿ª¹ØÎ»·Ö±ğÅĞ¶¨
3309   8                                                              
3310   8                                                                      if(EACHCTRL_realesFLG & (1 << loop)){ //»¥¿ØÓĞĞ§Î»ÅĞ¶Ï
3311   9                                                                      
3312   9                                                                              EACHCTRL_realesFLG &= ~(1 << loop); //»¥¿ØÓĞĞ§Î»ÇåÁã
3313   9                                                                              
3314   9                                                                              paramTX_temp[0] = (status_Relay >> loop) & 0x01; //¿ª¹Ø×´Ì¬Ìî×°
3315   9                                                                              
3316   9                                                                              if((CTRLEATHER_PORT[loop] > CTRLEATHER_PORT_NUMSTART) && CTRLEATHER_PORT[loop] < CTRLEATHER_PORT_
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 58  

             -NUMTAIL){ //ÊÇ·ñÎªÓĞĞ§»¥¿Ø¶Ë¿Ú
3317  10                                                                                      
3318  10                                                                                      (paramTX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_ON):
             -(colonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
3319  10                                                                                      localDataRecord_eaCtrl[loop] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3320  10                                                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅ
             -Ï¢Î´¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3321  10                                                                              
3322  10                                                                                      /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
3323  10                                                                                      datsSend_requestEx[loop].nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3324  10                                                                                      datsSend_requestEx[loop].portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3325  10                                                                                      memset(datsSend_requestEx[loop].dats, 0, 10 * sizeof(u8));
3326  10                                                                                      
3327  10                                                                                      datsSend_requestEx[loop].dats[0] = paramTX_temp[0];
3328  10                                                                                      datsSend_requestEx[loop].dats[1] = 0; //ÏÂ±ê2Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£
             -¨×îºó·¢ËÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
3329  10                                                                                      datsSend_requestEx[loop].datsLen = 2;
3330  10                                                                                      datsSend_requestEx[loop].constant_Loop = 30; //ÎŞÊÓ»ØÂë£¬·¢30´Î
3331  10                                                                                      
3332  10      //                                                                              /*³£¹æ·¢ËÍ£¬ÊÕµ½Ğ­ÒéÕ»»ØÂëÏìÓ¦¾ÍÍ£Ö¹·¢ËÍ£¬ÇÒÓĞ³¬Ê±*///³£¹æ
3333  10      //                                                                              datsSend_request.nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3334  10      //                                                                              datsSend_request.portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3335  10      //                                                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
3336  10      //                                                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, 1);
3337  10      //                                                                              datsSend_request.datsTrans.datsLen = 1;
3338  10      //                                                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
3339  10      //                                                                              
3340  10      //                                                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
3341  10      //                                                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 10; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸
             -ö³¬Ê±ÖÜÆÚÄÚ ·¢ 10 ´Î
3342  10      //                                                                              
3343  10      //                                                                              EACHCTRL_reportFLG = 1; //ÏòÍø¹Ø»ã±¨
3344  10      //                                                                              
3345  10      //                                                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
3346  10      //                                                                              
3347  10      //                                                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´
             -Ì¬±£³Ö£¬µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3348  10                                                                              }
3349   9                                                                      }
3350   8                                                              }               
3351   7                                                      }break;
3352   6                                                      
3353   6                                                      case SWITCH_TYPE_CURTAIN:{ //´°Á±¿ª¹Ø²»Çø·Ö¿ª¹ØÎ»£¬Ö±½Ó»¥¿Ø¶¯×÷Êı¾İ¼´¿É
3354   7                                                      
3355   7                                                              if(EACHCTRL_realesFLG == 1){
3356   8                                                                      
3357   8                                                                      EACHCTRL_realesFLG = 0; //»¥¿ØÓĞĞ§Î»ÇåÁã
3358   8                                                                      
3359   8                                                                      if((CTRLEATHER_PORT[0] > CTRLEATHER_PORT_NUMSTART) && CTRLEATHER_PORT[0] < CTRLEATHER_PORT_NUMTAIL
             -){ //ÓĞĞ§¶Ë¿ÚÅĞ¶Ï
3360   9                                                                      
3361   9                                                                              paramTX_temp[0] = status_Relay; //Ö±½Ó¸ø²Ù×÷Öµ[1:¹Ø, 2:Í£, 4:¿ª]
3362   9                                                                              colonyCtrlGet_statusLocalEaCtrl[0] = paramTX_temp[0]; //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
3363   9                                                                              localDataRecord_eaCtrl[0] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3364   9                                                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ
             -¢Î´¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3365   9                                                                              
3366   9                                                                              /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
3367   9                                                                              datsSend_requestEx[0].nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3368   9                                                                              datsSend_requestEx[0].portPoint = CTRLEATHER_PORT[0]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3369   9                                                                              memset(datsSend_requestEx[0].dats, 0, 10 * sizeof(u8));
3370   9                                                                              
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 59  

3371   9                                                                              datsSend_requestEx[0].dats[0] = paramTX_temp[0];
3372   9                                                                              datsSend_requestEx[0].dats[1] = 0; //ÏÂ±ê2Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£¨×îº
             -ó·¢ËÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
3373   9                                                                              datsSend_requestEx[0].datsLen = 2;
3374   9                                                                              datsSend_requestEx[0].constant_Loop = 30; //ÎŞÊÓ»ØÂë£¬·¢30´Î
3375   9                                                                      }
3376   8                                                              }
3377   7                                                              
3378   7                                                      }break;
3379   6                                                      
3380   6                                                      default:{}break;
3381   6                                              }                       
3382   5      #endif
3383   5                                      }       
3384   4                              }
3385   3      
3386   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ   
                                      if(EACHCTRL_reportFLG){ //ÏòÍø¹Øµ¥²¥µ±Ç°ËùÓĞ»¥¿Ø×éºÅ¶ÔÓ¦µÄ¿ª¹Ø×´Ì¬Öµ
                                      
                                              EACHCTRL_reportFLG = 0;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2/4/6]       |               frame_data[3/5/7]                       |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ          |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ¶ÔÓ¦¿ª¹Ø×´Ì¬Öµ    |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              {
                                                      u8 code remote_responseFrame[3] = {ZIGB_SYSCMD_EACHCTRL_REPORT, 0x01, 0x00}; //Ô¶¶ËÏìÓ¦Ö¡<È·±£Ö÷»úÊÕµ
             -½>
                                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                              
                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                              sprintf(log_buf, "current eaCtrl insrt[2] is: %02X.\n", (int)colonyCtrlGet_statusLocalEaCtrl[1]);
                                                              PrintString1_logOut(log_buf);
                                                      }                       
              #endif  
                                                      
                                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                                      datsSend_request.datsTrans.dats[0]      = ZIGB_SYSCMD_EACHCTRL_REPORT;
                                                      datsSend_request.datsTrans.dats[1]      = 6;
                                                      datsSend_request.datsTrans.dats[2]      = CTRLEATHER_PORT[0];
                                                      datsSend_request.datsTrans.dats[3]      = colonyCtrlGet_statusLocalEaCtrl[0];
                                                      datsSend_request.datsTrans.dats[4]      = CTRLEATHER_PORT[1];
                                                      datsSend_request.datsTrans.dats[5]      = colonyCtrlGet_statusLocalEaCtrl[1];
                                                      datsSend_request.datsTrans.dats[6]      = CTRLEATHER_PORT[2];
                                                      datsSend_request.datsTrans.dats[7]      = colonyCtrlGet_statusLocalEaCtrl[2];
                                                      datsSend_request.datsTrans.datsLen      = 8;
                                                      datsSend_request.nwkAddr                        = 0;
                                                      datsSend_request.portPoint                      = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      memset(datsRcv_respond.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8)); //ĞèÒªÔ¶¶ËÏìÓ¦
                                                      memcpy(datsRcv_respond.datsTrans.dats, remote_responseFrame, 3); //Ô¶¶ËÏìÓ¦Ö¡¼ÓÔØ
                                                      datsRcv_respond.datsTrans.datsLen       = 3;
                                                      datsRcv_respond.nwkAddr                         = 0;
                                                      datsRcv_respond.portPoint                       = ZIGB_ENDPOINT_CTRLSYSZIGB;
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 60  

                                                      
                                                      devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              }
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
3434   3                              
3435   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ½âÎöÏìÓ¦---------------------------------------------
             ---//
3436   3                              if(uartRX_toutFLG){ //Êı¾İ½ÓÊÕ(Ö¡³¬Ê±)
3437   4                                      
3438   4                                      uartRX_toutFLG = 0;
3439   4                                      
3440   4      //                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
3441   4      //                              
3442   4      //#if(DEBUG_LOGOUT_EN == 1)
3443   4      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3444   4      //                      
3445   4      //                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3446   4      //                                                      sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
3447   4      //                                                      PrintString1_logOut(log_buf);
3448   4      //                                              }                       
3449   4      //#endif        
3450   4      //                              }
3451   4                                      
3452   4                                      /*ZigbeeÒ»¼¶Ğ­ÒéºË¶Ô½âÎö*/
3453   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3454   4                                              !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_datsComing, 2)){ //Ô¶¶ËÊı¾İµ½À´Ö¸Áî
3455   5                                              
3456   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
3457   5                                              u8      idata srcPoint =  datsRcv_ZIGB.rcvDats[10];     //Ô´¶Ë
3458   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë
3459   5                                                      
3460   5                                              if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //Êı¾İÀ´Ô´¶ÌµØÖ·¼ì²â£¬ÊÇ·ñÀ´×ÔÍø¹ØÖ÷»ú
3461   6                                              
3462   6                                                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //Íø¹ØÖ÷»úÊ§ÁªÈ·ÈÏ¼ì²â¼ÆÊ±Ö
             -ØÖÃ
3463   6                                                      if(devTips_nwkZigb != nwkZigb_nwkOpen)devTips_nwkZigb = nwkZigb_Normal; //zigbTips×´Ì¬ÏìÓ¦£¬Ö»Òª½ÓÊÕ
             -µ½Íø¹ØzigbÊı¾İ£¬tips×´Ì¬¾ÍÇĞ»»ÖÁÕı³£
3464   6                                              }
3465   5                                              
3466   5                                              memset(paramRX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans);
3467   5                                              memcpy(paramRX_temp, &(datsRcv_ZIGB.rcvDats[21]), datsRcv_ZIGB.rcvDats[20]);
3468   5                                                      
3469   5                                              if(srcPoint > CTRLEATHER_PORT_NUMSTART && srcPoint < CTRLEATHER_PORT_NUMTAIL){ /*»¥¿Ø¶Ë¿Ú*/
3470   6                                                      
3471   6                                                      u8 idata statusRelay_temp = status_Relay; //µ±Ç°¿ª¹Ø×´Ì¬»º´æ
3472   6                                                      u8 idata localActLoop = 0;
3473   6                                                      
3474   6                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢Î´
             -¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3475   6                                                      
3476   6      #if(DEBUG_LOGOUT_EN == 1)
3477   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3478   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3479   7                                                              sprintf(log_buf, "ctrl eachOther cmd coming, cluster:%02d, val:%02d, loop:%02d.\n", (int)srcPoint, 
             -(int)paramRX_temp[0], (int)paramRX_temp[1]);
3480   7                                                              PrintString1_logOut(log_buf);
3481   7                                                      }                       
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 61  

3482   6      #endif  
3483   6      
3484   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER) //µ÷¹â¿ª¹ØµÄ»¥¿ØÖ±½Ó·ÅÔÚ»¥¿Ø×éÒ»ÄÚ£¬»¥¿ØÊı¾İÎª×´Ì¬Öµ
                                                              if((srcPoint == CTRLEATHER_PORT[0]) && (0 != CTRLEATHER_PORT[0])){ //»¥¿Ø×éÒ» ¶ÔÓ¦×éºÅºË¶Ô£¨×éºÅ¼´¶Ë
             -¿ÚºÅ£©
                                                              
                                                                      if(paramRX_temp[1] > datsSend_requestEx[0].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
              
                                                                              swCommand_fromUsr.objRelay = paramRX_temp[0]; //ÁÁ¶ÈÖµ¼ÓÔØ²¢½øĞĞÓ²¼şÏìÓ¦
                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                              
                                                                              colonyCtrlGet_statusLocalEaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
                                                                              
                                                                              datsSend_requestEx[0].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«±»È¡Ïû
                                                                              
                                                                              localDataRecord_eaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
                                                                      }
                                                              }
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
              #else                   
3506   6                                                      switch(SWITCH_TYPE){
3507   7                                                      
3508   7                                                              case SWITCH_TYPE_SWBIT1:
3509   7                                                              case SWITCH_TYPE_SWBIT2:
3510   7                                                              case SWITCH_TYPE_SWBIT3:{
3511   8                                                              
3512   8                                                                      /*»¥¿Ø±»¶¯ÏìÓ¦*///Ò»¡¢¶ş¡¢ÈıÎ»¿ª¹Ø
3513   8                                                                      for(localActLoop = 0; localActLoop < clusterNum_usr; localActLoop ++){
3514   9                                                                      
3515   9                                                                              if((srcPoint == CTRLEATHER_PORT[localActLoop]) && (0 != CTRLEATHER_PORT[localActLoop])){ //¿ª¹ØÎ»
             -x »¥¿Ø°ó¶¨ÅĞ¶Ï
3516  10                                                                              
3517  10                                                                                      if(paramRX_temp[1] > datsSend_requestEx[localActLoop].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
3518  11                                                                                      
3519  11                                                                                              statusRelay_temp &= ~(1 << localActLoop); //¶¯×÷Î»»º´æÇåÁã
3520  11                                                                                              swCommand_fromUsr.objRelay = statusRelay_temp | (paramRX_temp[0] << localActLoop); //bit¶ÔÓ¦ ¿ª
             -¹ØÎ»¶¯×÷¼ÓÔØ
3521  11                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
3522  11                                                                                              (paramRX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRES
             -ERVE_ON):(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
3523  11                                                                                              
3524  11                                                                                              datsSend_requestEx[localActLoop].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«
             -±»È¡Ïû
3525  11                                                                                              
3526  11                                                                                              localDataRecord_eaCtrl[localActLoop] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3527  11                                                                                      }
3528  10                                                                                      
3529  10                                                                                      break;
3530  10                                                                              }
3531   9                                                                      }
3532   8                                                                      
3533   8                                                              }break;
3534   7                                                              
3535   7                                                              case SWITCH_TYPE_CURTAIN:{
3536   8                                                              
3537   8                                                                      if((srcPoint == CTRLEATHER_PORT[0]) && (0 != CTRLEATHER_PORT[0])){ //»¥¿Ø×éÒ» ¶ÔÓ¦×éºÅºË¶Ô£¨×éºÅ¼´
             -¶Ë¿ÚºÅ£©
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 62  

3538   9                                                                      
3539   9                                                                              if(paramRX_temp[1] > datsSend_requestEx[0].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
3540  10      
3541  10                                                                                      swCommand_fromUsr.objRelay = paramRX_temp[0]; //¶¯×÷Öµ¼ÓÔØ²¢½øĞĞÓ²¼şÏìÓ¦
3542  10                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
3543  10                                                                                      
3544  10                                                                                      colonyCtrlGet_statusLocalEaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
3545  10                                                                                      
3546  10                                                                                      datsSend_requestEx[0].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«±»È¡Ïû
3547  10                                                                                      
3548  10                                                                                      localDataRecord_eaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3549  10                                                                              }
3550   9                                                                      }
3551   8                                                                      
3552   8                                                              }break;
3553   7      
3554   7                                                      }               
3555   6      #endif  
3556   6                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ -Ö÷¶¯ÉÏ´«
3557   6                                                      dev_agingCmd_sndInitative.agingCmd_delaySetOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ğ§Õ¼Î»ÖÃÒ»
3558   6                                              
3559   6                                              }else{ /*·Ç»¥¿Ø¶Ë¿Ú*///Ê£ÏÂ¾ÍÊÇÏµÍ³×¨ÓÃµÄ15¸ö¶Ë¿Ú
3560   6                                              
3561   6                                                      switch(srcPoint){
3562   7                                                              
3563   7                                                              /*³¡¾°¼¯Èº¶Ë¿Ú*/
3564   7                                                              case ZIGB_ENDPOINT_CTRLSECENARIO:{      
3565   8                                                              
3566   8                                                                      dataParing_scenarioCtrl(paramRX_temp); //³¡¾°¼¯Èº¿ØÖÆ½âÎö
3567   8                                                                      
3568   8                                                              }break;
3569   7                                                      
3570   7                                                              /*³£¹æ¿ØÖÆ×ª·¢¶Ë¿Ú*/
3571   7                                                              case ZIGB_ENDPOINT_CTRLNORMAL:{ 
3572   8                                                              
3573   8                                                                      if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //À´×ÔĞ­µ÷Æ÷
3574   9                                                                      
3575   9                                                                              dataParing_Nomal(paramRX_temp, datsFrom_addr, srcPoint); //³£¹æ½âÎö
3576   9                                                                      }
3577   8                                                                      
3578   8                                                              }break;
3579   7                                                              
3580   7                                                              /*zigbÏµÍ³½»»¥¶Ë¿Ú*/
3581   7                                                              case ZIGB_ENDPOINT_CTRLSYSZIGB:{        
3582   8                                                              
3583   8                                                                      dataParing_zigbSysCtrl(paramRX_temp); //ÏµÍ³¿ØÖÆ½âÎö
3584   8                                                                      
3585   8                                                              }break;
3586   7                                                                      
3587   7                                                              default:{
3588   8                                                              
3589   8                                                                      
3590   8                                                                      
3591   8                                                              }break;
3592   7                                                      }
3593   6                                              }
3594   5                                              
3595   5                                      }else
3596   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3597   4                                         !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_nwkOpenNote, 2)){ //ÍøÂç¿ª·ÅÍ¨Öª
3598   5                                              
3599   5                                              tips_statusChangeToZigbNwkOpen(datsRcv_ZIGB.rcvDats[4]); //tips´¥·¢
C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 63  

3600   5                                      }
3601   4                              }
3602   3                              
3603   3                      }break;
3604   2                      
3605   2                      case status_nwkREQ:{
3606   3                      
3607   3                              //--------------------------------Ğ­×´Ì¬£ºÇå³ı±¾µØÍøÂçºóÖØĞÂÈëÍøÇëÇó-----------------------------------
             -------------//
3608   3                              devTips_nwkZigb = nwkZigb_nwkREQ;
3609   3                              zigB_nwkJoinRequest(1); //·Ç×èÈûÖ÷¶¯¼ÓÈë¸½½ü¿ª·ÅÍøÂç
3610   3                              
3611   3                      }break;
3612   2                              
3613   2                      case status_nwkReconnect:{
3614   3                      
3615   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂçÖØÁ¬ÇëÇó-----------------------------------------------//
3616   3                              devTips_nwkZigb = nwkZigb_reConfig;
3617   3                              zigB_nwkJoinRequest(0); //·Ç×èÈûÖØÁ¬
3618   3                              
3619   3                      }break;
3620   2                      
3621   2                      case status_dataTransRequestDatsSend:{
3622   3                              
3623   3                              //--------------------------------Ğ­×´Ì¬£ºÊı¾İÇëÇó-----------------------------------------------//
3624   3                              dataTransRequest_datsSend(); //·Ç×èÈûÔ¶¶ËÊı¾İ´«Êä
3625   3                      
3626   3                      }break;
3627   2                      
3628   2                      case status_devNwkHold:{
3629   3                      
3630   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂç¹ÒÆğ-----------------------------------------------//
3631   3                              devTips_nwkZigb = nwkZigb_hold;
3632   3                              function_devNwkHold();
3633   3                              
3634   3                      }break;
3635   2                      
3636   2                      case status_devFactoryRecoverStandBy:{
3637   3                      
3638   3                              //--------------------------------Ğ­×´Ì¬£º»Ö¸´³ö³§Ô¤ÖÃ-----------------------------------------------//
3639   3                              devTips_nwkZigb = nwkZigb_outLine;
3640   3                              if(!factoryRecover_HoldTimeCount){
3641   4                              
3642   4                                      if(factoryRecover_standBy_FLG)Factory_recover();
3643   4                              }
3644   3                              
3645   3                      }break;
3646   2                              
3647   2                      default:{
3648   3                      
3649   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
3650   4                              
3651   4                                      devStatus_switch.statusChange_IF = 0;
3652   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
3653   4                                      
3654   4                                      break;
3655   4                              }
3656   3                      
3657   3                      }break;
3658   2              }
3659   1      }

C51 COMPILER V9.54   DATATRANS                                                             01/11/2019 12:04:13 PAGE 64  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  10211    ----
   CONSTANT SIZE    =   4549    ----
   XDATA SIZE       =    566    1395
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10     144
   IDATA SIZE       =   ----      15
   BIT SIZE         =      9      17
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
