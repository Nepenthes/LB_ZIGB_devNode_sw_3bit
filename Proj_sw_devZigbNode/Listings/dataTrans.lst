C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DATATRANS
OBJECT MODULE PLACED IN .\Output\dataTrans.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE dataTrans\dataTrans.c OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Usr;.\Usr_l
                    -ib;.\std_Lib;.\dataTrans;.\Actuator;.\Sensor;.\hwDriver) DEBUG PRINT(.\Listings\dataTrans.lst) OBJECT(.\Output\dataTrans
                    -.obj)

line level    source

   1          #include "dataTrans.h"
   2          
   3          #include "string.h"
   4          #include "stdio.h"
   5          
   6          #include "eeprom.h"
   7          #include "USART.h"
   8          #include "delay.h"
   9          #include "Relay.h"
  10          #include "usrKin.h"
  11          
  12          #include "timerAct.h"
  13          #include "pars_Method.h"
  14          #include "dataManage.h"
  15          #include "Tips.h"
  16          
  17          #include "driver_I2C_HXD019D.h"
  18          #include "DS18B20.h"
  19          
  20          /**********************±¾µØÎÄ¼ş±äÁ¿¶¨ÒåÇø************************/
  21          datsAttr_datsTrans xdata datsSend_request = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ
  22          datsAttr_dtCtrlEach xdata datsSend_requestEx[3] = {0}; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇó»º´æ£¨³ÖĞø·¢ËÍ£¬ÎŞĞèÔ¶¶ËÏìÓ
             -¦£©
  23          u16 xdata dtReqEx_counter = 0; //À©Õ¹ĞÍÔ¶¶ËÊı¾İ´«ÊäÇëÇóÊı¾İ·¢ËÍ¼ä¸ô¼ÆÊ±Öµ µ¥Î»£ºms
  24          datsAttr_datsTrans xdata datsRcv_respond = {0}; //Ô¶¶ËÊı¾İ´«ÊäÇëÇóµÈ´ıÏìÓ¦»º´æ»º´æ
  25          remoteDataReq_method xdata devRemoteDataReqMethod = {0}; //Ô¶¶ËÊı¾İÇëÇó·½Ê½
  26          
  27          stt_devOpreatDataPonit xdata dev_currentDataPoint = {0}; //ÖÜÆÚÑ¯·ÃÊı¾İµã
  28          stt_agingDataSet_bitHold xdata  dev_agingCmd_rcvPassive = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --±»¶¯½ÓÊÕ
  29          stt_agingDataSet_bitHold xdata  dev_agingCmd_sndInitative = {0}; //ÖÜÆÚÑ¯·ÃÊ±Ğ§Õ¼Î»Ö¸Áî»º´æ --Ö÷¶¯ÉÏ´«
  30          u8 dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR; //Êı¾İ´«ÊäÎª¶¨Ê±Ñ¯·ÃÄ£Ê½Ê±£¬Ğ¯´øÑ¯·ÃÖ¸ÁîÖµ£¬
             -ĞèÒªÖ÷¶¯ÉÏ´«Ê±Ôò¸ü¸Ä´ËÖµ
  31          
  32          //zigbeeÔËĞĞ×´Ì¬ÇĞ»»±êÖ¾
  33          stt_statusChange xdata devStatus_switch = {0, status_NULL};
  34          //Êı¾İÇëÇóÍê³ÉºóÊÇ·ñĞèÒªÖØÆôÍøÂç
  35          bit reConnectAfterDatsReq_IF = 0; //ÓÃÓÚ»¥¿ØÍ¨Ñ¶´Ø¼´¿Ì×¢²áÌØÊâÇé¿öÏÂÊ¹ÓÃ
  36          
  37          bit coordinatorOnline_IF = 0; //Ğ­µ÷Æ÷ÔÚÏß±êÖ¾
  38          
  39          //zigbÍøÂç¶¯×÷×¨ÓÃÊ±¼ä¼ÆÊı
  40          u16 xdata zigbNwkAction_counter = 0;
  41          
  42          //zigbÆ÷¼şÑÓÊ±Æô¶¯Ê±¼ä¼ÆÊ±±äÁ¿ --Ê×´Î¿ª»úÉÏµçÆô¶¯Ê±£¬zigbÆ÷¼şÑÓ³ÙÆô¶¯£¬·ÀÖ¹ÉÏÒ»´Î¸ü»»Íø¹ØÊ±×ÓÉè±¸Ã»ÓĞÍêÈ«¹
             -ÒÆğ
  43          u16 idata devZigbNwk_startUp_delayCounter = 20;
  44          
  45          //zigbÉè±¸ÍøÂç¹ÒÆğÊôĞÔ²ÎÊı
  46          attr_devNwkHold xdata devNwkHoldTime_Param = {0};
  47          
  48          //ĞÄÌø
  49          bit heartBeatCycle_FLG                  = 0; //ĞÄÌøÖÜÆÚ´¥·¢
  50          u8      xdata heartBeatCount            = 0; //ĞÄÌøÖÜÆÚ¼ÆÊı
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 2   

  51          u8      xdata heartBeatPeriod           = PERIOD_HEARTBEAT_ASR; //ĞÄÌø¼ÆÊıÖÜÆÚ
  52          u8      xdata heartBeatHang_timeCnt = 0; //ĞÄÌø¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ·¢ËÍĞÄÌø£¬·ñÔòĞÄÌø¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  53          
  54          //¼¯ÈºÊÜ¿ØÖÜÆÚÂÖÑ¯-<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>
  55          u8      xdata colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÑ¯²é¼ÆÊ±¼ÆÊıÖµ
  56          u8      xdata colonyCtrlGet_statusLocalEaCtrl[clusterNum_usr] = {0}; //¼¯Èº¿ØÖÆ-±¾µØ»¥¿Ø×´Ì¬Î»¼ÇÂ¼
  57          u8      xdata localDataRecord_eaCtrl[clusterNum_usr] = {0}; //±¾µØ¾²Ì¬Êı¾İ¼ÇÂ¼£º»¥¿ØÊµ¼ÊÖµ
  58          u8      xdata colonyCtrlGet_statusLocalScene = 0; //¼¯Èº¿ØÖÆ-±¾µØ³¡¾°×´Ì¬Î»¼ÇÂ¼
  59          u8      xdata colonyCtrlGetHang_timeCnt = 0; //¼¯ÈºÊÜ¿Ø×´Ì¬ÖÜÆÚĞÔÂÖÑ¯¹ÒÆğ¼ÆÊ±(´ËÊı¾İÎª0Ê±²Å¿ÉÒÔ½øĞĞÖÜÆÚÑ¯²é£¬·ñ
             -ÔòÑ¯²é¹ÒÆğ£¬ÓÃÓÚÍ¨ĞÅ±ÜÈÃ)
  60          
  61          //´®¿Ú½ÓÊÕ³¬Ê±±êÖ¾
  62          bit uartRX_toutFLG      = 0;
  63          //´®¿Ú½ÓÊÕ³¬Ê±¼ÆÊı
  64          bit rxTout_count_EN = 0;
  65          u8  rxTout_count        = 0;
  66          //´®¿ÚÊı¾İ»º´æ
  67          u8      datsRcv_length  = 0;
  68          uartTout_datsRcv xdata datsRcv_ZIGB = {{0}, 0};
  69          
  70          //zigbeeÍ¨ĞÅÏß³Ìµ±Ç°ÔËĞĞ×´Ì¬±êÖ¾
  71          threadRunning_Status devRunning_Status = status_NULL;
  72          
  73          //zigbeeĞ­µ÷Æ÷¶ªÊ§¼ì²â¼ÆÊ±±äÁ¿ --ÏŞ¶¨Ê±¼äÄÚÃ»ÓĞÊÕµ½Íø¹ØµÄÊı¾İ
  74          u8 xdata timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; 
  75          //zigbeeĞ­µ÷Æ÷¶ªÊ§ºóÓĞ¶à³¤Ê±¼ä --Íø¹Ø¶ªÊ§ºó¿ªÊ¼¼ÆÊ±
  76          u8 xdata timeCounter_coordinatorLost_keeping = 0;
  77          
  78          u8      xdata factoryRecover_HoldTimeCount = 0; //»Ö¸´³ö³§µÈ´ıÊ±¼ä
  79          bit idata factoryRecover_standBy_FLG = 0; //»Ö¸´³ö³§Ô¤ÖÃ±êÖ¾
  80          
  81          void zigbUart_pinInit(void){
  82   1      
  83   1              //TXÍÆÍìÊä³ö
  84   1              P3M1 &= 0xFD;   
  85   1              P3M0 |= 0x02;   
  86   1              
  87   1              //RX¸ß×èÊäÈë
  88   1              P3M1 |= 0x01;
  89   1              P3M0 &= 0xFE;
  90   1              
  91   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                      
                      P2M1 &= ~0x40;
                      P2M0 |= 0x40;
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                      
              #else
  98   1              
  99   1              P2M1 &= ~0x08;
 100   1              P2M0 |= 0x08;
 101   1      #endif
 102   1      }
 103                  
 104          /*--------------------------------------------------------------*/
 105          void uartObjZigb_Init(void){
 106   1      
 107   1              EA = 0;
 108   1      
 109   1              PS = 0;
 110   1              SCON = (SCON & 0x3f) | UART_8bit_BRTx;
 111   1      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 3   

 112   1      {
 113   2              u32 j = (MAIN_Fosc / 4) / ZIGB_BAUND;   //°´1T¼ÆËã
 114   2                      j = 65536UL - j;
 115   2              
 116   2              TH2 = (u8)(j>>8);
 117   2              TL2 = (u8)j;
 118   2      }
 119   1              AUXR &= ~(1<<4);        //Timer stop
 120   1              AUXR |= 0x01;           //S1 BRT Use Timer2;
 121   1              AUXR &= ~(1<<3);        //Timer2 set As Timer
 122   1              AUXR |=  (1<<2);        //Timer2 set as 1T mode
 123   1      
 124   1              IE2  &= ~(1<<2);        //½ûÖ¹ÖĞ¶Ï
 125   1              AUXR &= ~(1<<3);        //¶¨Ê±
 126   1              AUXR |=  (1<<4);        //Timer run enable
 127   1      
 128   1              ES        = 1;
 129   1              REN   = 1;
 130   1              P_SW1 = (P_SW1 & 0x3f) | (UART1_SW_P30_P31 & 0xc0);
 131   1              
 132   1              memset(TX1_Buffer, 0, sizeof(char) * COM_TX1_Lenth);
 133   1      
 134   1              EA = 1;
 135   1      
 136   1              PrintString1("i'm UART1 for wifi data translate !!!\n");
 137   1              PrintString1_logOut("i'm UART1 for datsLog !!!\n");
 138   1      }
 139          
 140          ///*----------------------------
 141          //·¢ËÍ´®¿ÚÊı¾İ
 142          //----------------------------*/
 143          //void uartObjWIFI_Send_Byte(u8 dat)    //´®¿Ú1
 144          //{
 145          //      TX1_write2buff(dat);
 146          //}
 147          
 148          //void uartObjWIFI_Send_String(char *s,unsigned char ucLength){  //´®¿Ú1
 149          //      
 150          //      uart1_datsSend(s, ucLength);
 151          //}
 152          
 153          //void rxBuff_WIFI_Clr(void){
 154          
 155          //      memset(rxBuff_WIFI, 0xff, sizeof(char) * COM_RX1_Lenth);
 156          //      COM1.RX_Cnt = 0;
 157          //}
 158          
 159          /********************* UART1(WIIF)ÖĞ¶Ïº¯Êı_×Ô¶¨ÒåÖØ¹¹************************/
 160          void UART1_Rountine (void) interrupt UART1_VECTOR
 161          {
 162   1              
 163   1              if(RI)
 164   1              {
 165   2                      RI = 0;
 166   2                      if(COM1.B_RX_OK == 0)
 167   2                      {
 168   3                              
 169   3      //                      if(COM1.RX_Cnt >= COM_RX1_Lenth)        COM1.RX_Cnt = 0;
 170   3      //                      RX1_Buffer[COM1.RX_Cnt++] = SBUF;
 171   3      //                      COM1.RX_TimeOut = TimeOutSet1;
 172   3                              
 173   3                              if(!rxTout_count_EN){
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 4   

 174   4                              
 175   4                                      rxTout_count_EN = 1;
 176   4                                      rxTout_count    = 0;
 177   4                                      datsRcv_length  = 0;
 178   4                                      
 179   4                                      memset(RX1_Buffer, 0xff, sizeof(char) * COM_RX1_Lenth);
 180   4                              }
 181   3                                              
 182   3                              RX1_Buffer[datsRcv_length ++] = SBUF;
 183   3                              rxTout_count = 0;
 184   3                      }
 185   2              }
 186   1      
 187   1              if(TI)
 188   1              {
 189   2                      TI = 0;
 190   2                      if(COM1.TX_read != COM1.TX_write)
 191   2                      {
 192   3                              SBUF = TX1_Buffer[COM1.TX_read];
 193   3                              if(++COM1.TX_read >= COM_TX1_Lenth)     COM1.TX_read = 0;
 194   3                      }
 195   2                      else COM1.B_TX_busy = 0;
 196   2              }
 197   1      }
 198          
 199          /* ×Ô¶¨ÒåĞ£Ñé*///×Ô¼Ò²úÆ·Ğ­Òé²ã
 200          static 
 201          unsigned char frame_Check(unsigned char frame_temp[], u8 check_num){
 202   1        
 203   1              unsigned char loop              = 0;
 204   1              unsigned char val_Check = 0;
 205   1              
 206   1              for(loop = 0; loop < check_num; loop ++){
 207   2              
 208   2                      val_Check += frame_temp[loop];
 209   2              }
 210   1              
 211   1              val_Check  = ~val_Check;
 212   1              val_Check ^= 0xa7;
 213   1              
 214   1              return val_Check;
 215   1      }
 216          
 217          /*´ËÊı¾İ·â×°±ØĞëÔÚÊı¾İ°ü·¢ËÍÇ°×îºóµ÷ÓÃ£¬×Ô¶¨Òå¶ÔÏó½øĞĞÊı¾İ·â×°*///±ÜÃâĞ£Ñé±»ÌáÇ°¶ø³ö´í
 218          static 
 219          u8 dtasTX_loadBasic_CUST(bit ifRemoteDats,
 220                                                       u8 dats_Tx[],
 221                                                       u8 datsLen_TX,
 222                                                       u8 frame_Type,
 223                                                       u8 frame_CMD,
 224                                                       bit ifSpecial_CMD){
 225   1                                                         
 226   1              dats_Tx[2]      = frame_Type;
 227   1              dats_Tx[3]      = frame_CMD;
 228   1              
 229   1              if(!ifSpecial_CMD)dats_Tx[10] = SWITCH_TYPE;    //¿ª¹ØÀàĞÍÌî³ä
 230   1              
 231   1              memcpy(&dats_Tx[5], &MAC_ID[1], 5);     //MACÌî³ä
 232   1                                                        
 233   1              dats_Tx[4]      = frame_Check(&dats_Tx[5], 28);
 234   1                                                                 
 235   1              if(ifRemoteDats){
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 5   

 236   2                      
 237   2                      u8 xdata dats_Temp[64] = {0};
 238   2              
 239   2                      dats_Tx[0] = ZIGB_FRAMEHEAD_CTRLREMOTE;
 240   2                      dats_Tx[1]      = datsLen_TX + 12;
 241   2                      
 242   2                      memcpy(dats_Temp, &dats_Tx[1], datsLen_TX - 13);
 243   2                      memset(&dats_Tx[1], 0, datsLen_TX - 1);
 244   2                      memcpy(&dats_Tx[13], dats_Temp, datsLen_TX - 13);
 245   2                      memcpy(&dats_Tx[1], MAC_ID_DST, 6);
 246   2                      memcpy(&dats_Tx[8], &MAC_ID[1], 5);
 247   2                      
 248   2                      return 45;
 249   2                      
 250   2              }else{
 251   2              
 252   2                      dats_Tx[0]      = ZIGB_FRAMEHEAD_CTRLLOCAL;
 253   2                      dats_Tx[1]      = datsLen_TX;
 254   2                      
 255   2                      return 33;
 256   2              }
 257   1      }
 258          
 259          /*Êı¾İÒì»òĞ£Ñé*///ZNPĞ­Òé²ã
 260          static 
 261          u8 XORNUM_CHECK(u8 buf[], u8 length){
 262   1      
 263   1              u8 loop = 0;
 264   1              u8 valXOR = buf[0];
 265   1              
 266   1              for(loop = 1;loop < length;loop ++)valXOR ^= buf[loop];
 267   1              
 268   1              return valXOR;
 269   1      }
 270          
 271          /*zigbeeÊı¾İÖ¡¼ÓÔØ*/
 272          static 
 273          u8 ZigB_TXFrameLoad(u8 frame[],u8 cmd[],u8 cmdLen,u8 dats[],u8 datsLen){                
 274   1      
 275   1              const u8 frameHead = ZIGB_FRAME_HEAD;   //ZNP,SOFÖ¡Í·
 276   1              u8 xor_check = datsLen;                                 //Òì»òĞ£Ñé£¬Ö¡Î²
 277   1              u8 loop = 0;
 278   1              u8 ptr = 0;
 279   1              
 280   1              frame[ptr ++] = frameHead;
 281   1              frame[ptr ++] = datsLen;
 282   1              
 283   1              memcpy(&frame[ptr],cmd,cmdLen);
 284   1              ptr += cmdLen;
 285   1              for(loop = 0;loop < cmdLen;loop ++)xor_check ^= cmd[loop];
 286   1      
 287   1              memcpy(&frame[ptr],dats,datsLen);
 288   1              ptr += datsLen;
 289   1              for(loop = 0;loop < datsLen;loop ++)xor_check ^= dats[loop];    
 290   1              
 291   1              frame[ptr ++] = xor_check;
 292   1              
 293   1              return ptr;
 294   1      }
 295          
 296          /*ÖÜÆÚĞÔÖ÷¶¯·¢ÂëÍ¨ĞÅ¹ÒÆğ£¬Í¨ĞÅÇåÕÏ*/
 297          void periodDataTrans_momentHang(u8 hangTime){ //¹ÒÆğÊ±¼ä µ¥Î»£ºs
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 6   

 298   1      
 299   1              heartBeatCount = 0;
 300   1              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
 301   1              
 302   1              heartBeatHang_timeCnt = colonyCtrlGetHang_timeCnt = hangTime;
 303   1      }
 304          
 305          /*zigbeeµ¥Ö¸ÁîÊı¾İÇëÇó£¬·µ»ØÓ¦´ğÊı¾İ³¤¶È*/
 306          static 
 307          u8 zigb_datsRequest( u8 frameREQ[],             //ÇëÇóÖ¡
 308                                                   u8 frameREQ_Len,       //ÇëÇóÖ¡³¤
 309                                                   u8 resp_cmd[2],        //ËùĞèÓ¦´ğÖ¸Áî
 310                                                   u8 resp_dats[],        //Ó¦´ğÊı¾İ»º´æ
 311                                                   u8 loopReapt,u16 timeWait){    //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 312   1                                                
 313   1              u16 Local_Delay = timeWait;             
 314   1              u8      loop = 0;
 315   1                                                       
 316   1              for(loop = 0;loop < loopReapt;loop ++){
 317   2              
 318   2                      uartRX_toutFLG = 0;
 319   2                      zigbNwkAction_counter = timeWait;       
 320   2                  uartZigB_datsSend(frameREQ, frameREQ_Len);
 321   2                      
 322   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 323   3      
 324   3                              if(uartRX_toutFLG){
 325   4                              
 326   4                                      uartRX_toutFLG = 0;
 327   4                                      
 328   4                                      if(!memcmp(&(datsRcv_ZIGB.rcvDats[2]), resp_cmd, 2)){
 329   5                                      
 330   5                                              memcpy(resp_dats, datsRcv_ZIGB.rcvDats, datsRcv_ZIGB.rcvDatsLen);
 331   5                                              return datsRcv_ZIGB.rcvDatsLen;
 332   5                                              
 333   5                                      }
 334   4                              }
 335   3                      }
 336   2              }       
 337   1      
 338   1              return 0;
 339   1      }
 340          
 341          /*zigbeeµ¥Ö¸ÁîÏÂ·¢¼°ÏìÓ¦ÑéÖ¤*///×èÈû
 342          bit zigb_VALIDA_INPUT(u8 REQ_CMD[2],            //Ö¸Áî
 343                                                    u8 REQ_DATS[],                //Êı¾İ
 344                                                    u8 REQdatsLen,                //Êı¾İ³¤¶È
 345                                                    u8 ANSR_frame[],              //ÏìÓ¦Ö¡
 346                                                    u8 ANSRdatsLen,               //ÏìÓ¦Ö¡³¤¶È
 347                                                    u8 times,u16 timeDelay){      //Ñ­»·´ÎÊı£¬µ¥´ÎµÈ´ıÊ±¼ä
 348   1                                                 
 349   1      #define dataLen_validaInput     96
 350   1              u8 xdata dataTXBUF[dataLen_validaInput] = {0};
 351   1              u8      loop = 0;
 352   1              u8      datsTX_Len;
 353   1      
 354   1              datsTX_Len = ZigB_TXFrameLoad(dataTXBUF,REQ_CMD, 2, REQ_DATS, REQdatsLen);
 355   1      
 356   1              for(loop = 0;loop < times;loop ++){
 357   2              
 358   2                      uartRX_toutFLG = 0;
 359   2                      zigbNwkAction_counter = timeDelay;
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 7   

 360   2                      uartZigB_datsSend(dataTXBUF, datsTX_Len);
 361   2                      
 362   2                      while(zigbNwkAction_counter){ //¶¨Ê±Æ÷ÖĞ¶ÏÄÚ½øĞĞµ¹¼ÆÊ±
 363   3                              
 364   3                              if(uartRX_toutFLG){
 365   4                              
 366   4                                      uartRX_toutFLG = 0;
 367   4                                      
 368   4                                      if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ANSR_frame, ANSRdatsLen)){
 369   5                                      
 370   5                                              delayMs(2);
 371   5                                              return 1;
 372   5                                      }
 373   4                              }
 374   3                      }
 375   2              }
 376   1              
 377   1              return 0;
 378   1      }
 379          
 380          ///*zigbeeÍ¨ĞÅ´ØÉèÖÃ*///×èÈû
 381          //bit zigb_clusterSet(u16 deviveID, u8 endPoint){
 382          
 383          //      datsAttr_ZigbInit code default_param = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x01,0x00,0x00,
             -0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,300};       //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 384          //      u8 code frameResponse_Subs[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾­×¢²á
 385          //              
 386          //#define       dataLen_zigbClusterSet  64
 387          //      u8 xdata paramTX_temp[dataLen_zigbClusterSet] = {0};
 388          //      
 389          //      bit setResult = 0;
 390          //      
 391          //      memcpy(paramTX_temp, default_param.zigbInit_reqDAT, default_param.reqDAT_num);
 392          //      paramTX_temp[0] = endPoint;
 393          //      paramTX_temp[3] = (u8)((deviveID & 0x00ff) >> 0);
 394          //      paramTX_temp[4] = (u8)((deviveID & 0xff00) >> 8);
 395          //      
 396          //      setResult =  zigb_VALIDA_INPUT( (u8 *)default_param.zigbInit_reqCMD,
 397          //                                                                      (u8 *)paramTX_temp,
 398          //                                                                      default_param.reqDAT_num,
 399          //                                                                      (u8 *)default_param.zigbInit_REPLY,
 400          //                                                                      default_param.REPLY_num,
 401          //                                                                      2,              //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 402          //                                                                      default_param.timeTab_waitAnsr);
 403          //      
 404          //      if(setResult)return setResult;
 405          //      else{
 406          //      
 407          //              return zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 408          //                                                               (u8 *)paramTX_temp,
 409          //                                                               default_param.reqDAT_num,
 410          //                                                               (u8 *)frameResponse_Subs,
 411          //                                                               6,
 412          //                                                               2,             //2´ÎÒÔÄÚÃ»ÓĞÕıÈ·ÏìÓ¦¾ÍÊ§°Ü
 413          //                                                               default_param.timeTab_waitAnsr);
 414          //      }
 415          //}
 416          
 417          ///*zigbeeÖØĞÂÈëÍø*///×èÈûº¯Êı£¬½ö¹©²âÊÔÊ¹ÓÃ
 418          //bit ZigB_NwkJoin(u16 PANID, u8 CHANNELS){
 419          
 420          //#define       cmdNum_zigbNwkJoin      8       
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 8   

 421          //      
 422          //#define        loop_PANID             5
 423          //#define        loop_CHANNELS  6
 424          
 425          //      datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkJoin] = {
 426          //              
 427          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 428          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¸´Î»
 429          //              {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³
             -õÊ¼»¯£¬È«²¿Çå¿Õ
 430          //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      
             -//¶ş´Î¸´Î»
 431          //              
 432          ////            {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨Ğ­µ÷Æ÷£©
 433          //              {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Â·ÓÉÆ÷£©
 434          ////            {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«É
             -èÖÃ£¨ÖÕ¶Ë£©
 435          //              
 436          //              {       {0x27,0x02},    {0x34,0x12},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ
             -÷ÉèÖÃ
 437          //              {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµ
             -À¼Ä´æÆ÷ÅäÖÃ
 438          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 439          //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 440          ////            {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È
             -¶¨½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 441          //      };
 442          //      
 443          //#define       dataLen_zigbNwkJoin 64
 444          //      u8 xdata paramTX_temp[dataLen_zigbNwkJoin] = {0};
 445          //      
 446          //      u8  loop;
 447          //      u32 chnl_temp = 0x00000800UL << CHANNELS;
 448          //      
 449          //      for(loop = 1; loop < cmdNum_zigbNwkJoin; loop ++){
 450          //              
 451          //              memset(paramTX_temp, 0, dataLen_zigbNwkJoin * sizeof(u8));
 452          //              
 453          //              switch(loop){   //×ÔÑ¡²ÎÊı&Ä¬ÈÏ²ÎÊı
 454          //              
 455          //                      case loop_PANID:{
 456          //                      
 457          //                              paramTX_temp[0] = (u8)((PANID & 0x00ff) >> 0);
 458          //                              paramTX_temp[1] = (u8)((PANID & 0xff00) >> 8);
 459          //                              
 460          //                      }break;
 461          //                      
 462          //                      case loop_CHANNELS:{
 463          //                      
 464          //                              paramTX_temp[0] = (u8)((chnl_temp & 0x000000ff) >>  0);
 465          //                              paramTX_temp[1] = (u8)((chnl_temp & 0x0000ff00) >>  8);
 466          //                              paramTX_temp[2] = (u8)((chnl_temp & 0x00ff0000) >> 16);
 467          //                              paramTX_temp[3] = (u8)((chnl_temp & 0xff000000) >> 24);
 468          //                              
 469          //                      }break;
 470          //                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 9   

 471          //                      default:{
 472          //                      
 473          //                              memcpy(paramTX_temp,ZigbInit_dats[loop].zigbInit_reqDAT,ZigbInit_dats[loop].reqDAT_num);
 474          //                              
 475          //                      }break;
 476          //              }
 477          //      
 478          //              delayMs(100);
 479          //              if(0 == zigb_VALIDA_INPUT((u8 *)ZigbInit_dats[loop].zigbInit_reqCMD,
 480          //                                                                (u8 *)paramTX_temp,
 481          //                                                                ZigbInit_dats[loop].reqDAT_num,
 482          //                                                                (u8 *)ZigbInit_dats[loop].zigbInit_REPLY,
 483          //                                                                ZigbInit_dats[loop].REPLY_num,
 484          //                                                                3,
 485          //                                                                ZigbInit_dats[loop].timeTab_waitAnsr)
 486          //                                                               )loop = 0;
 487          //      }
 488          //      
 489          //      return zigb_clusterSet(13, 13); //Éè±¸ID 13£¬ÖÕ¶Ëµã 13£»
 490          //}
 491          
 492          /*zigbee Ö÷¶¯¿ª·ÅÍøÂç*///×èÈû
 493          bit ZigB_nwkOpen(bit openIF, u8 openTime){
 494   1      
 495   1              datsAttr_ZigbInit code default_param = {{0x26,0x08}, {0xFC,0xFF,0x00}, 0x03, {0xFE,0x01,0x66,0x08,0x00,0x
             -6F}, 0x06, 150}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 496   1              
 497   1              bit resultSet = 0;
 498   1              
 499   1              u8 openTime_temp = 0;
 500   1              
 501   1      #define paramLen_zigbNwkOpen 3
 502   1              u8 xdata paramTX_temp[paramLen_zigbNwkOpen] = {0xFC,0xFF,0x00};
 503   1              
 504   1              (openIF)?(paramTX_temp[2] = openTime):(paramTX_temp[2] = 0);
 505   1              
 506   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
 507   1                                                                        (u8 *)paramTX_temp,
 508   1                                                                        default_param.reqDAT_num,
 509   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 510   1                                                                        default_param.REPLY_num,
 511   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 512   1                                                                        default_param.timeTab_waitAnsr);
 513   1      
 514   1      //#if(DEBUG_LOGOUT_EN == 1)     
 515   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 516   1      //              
 517   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 518   1      //              sprintf(log_buf, "nwkOpen result:%d.\n", (int)resultSet);
 519   1      //              PrintString1_logOut(log_buf);
 520   1      //      }
 521   1      //#endif
 522   1              
 523   1              return resultSet;
 524   1      }
 525          
 526          /*zigbee PANID»ñÈ¡*///×èÈû
 527          static u16 ZigB_getPanIDCurrent(void){
 528   1      
 529   1              u16 PANID_temp = 0;
 530   1              
 531   1      #define paramLen_zigbPanIDGet 32
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 10  

 532   1              u8 xdata paramTX_temp[paramLen_zigbPanIDGet] = {0};
 533   1              
 534   1              u8 code frameREQ_zigbPanIDGet[6] = {0xFE, 0x01, 0x26, 0x06, 0x06, 0x27};        //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 535   1              u8 code cmdResp_zigbPanIDGet[2]  = {0x66, 0x06};        //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 536   1              u8 datsResp_Len = 0;
 537   1      
 538   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbPanIDGet, 6, cmdResp_zigbPanIDGet, paramTX_temp, 2, 300);
 539   1      
 540   1              if(datsResp_Len){
 541   2      
 542   2                      PANID_temp |= (((u16)(paramTX_temp[5]) << 0) & 0x00FF);
 543   2                      PANID_temp |= (((u16)(paramTX_temp[6]) << 8) & 0xFF00);
 544   2      
 545   2      //              printf_datsHtoA("[Tips_uartZigb]: resultDats:", local_datsParam->frameResp, local_datsParam->frameResp
             -Len);
 546   2              }
 547   1      
 548   1              return PANID_temp;
 549   1      }
 550          
 551          /*zigbeeÏµÍ³Ê±¼ä»ñÈ¡²¢¸üĞÂ*///×èÈû
 552          static bit getSystemTime_reales(void){
 553   1              
 554   1              bit resultOpreat = 0;
 555   1      
 556   1      #define paramLen_zigbSystimeGet 32
 557   1              u8 xdata paramTX_temp[paramLen_zigbSystimeGet] = {0};
 558   1              
 559   1              u8 code frameREQ_zigbSystimeGet[5] = {0xFE, 0x00, 0x21, 0x11, 0x30};    //zigb PANID»ñÈ¡Ö¸ÁîÖ¡
 560   1              u8 code cmdResp_zigbSystimeGet[2]  = {0x61, 0x11};      //zigb PANID»ñÈ¡Ô¤ÆÚÏìÓ¦Ö¸Áî
 561   1              u8 datsResp_Len = 0;
 562   1      
 563   1              datsResp_Len = zigb_datsRequest(frameREQ_zigbSystimeGet, 5, cmdResp_zigbSystimeGet, paramTX_temp, 2, 300)
             -;
 564   1              
 565   1              if(!datsResp_Len)resultOpreat = 0;
 566   1              else{
 567   2                      
 568   2                      u16 Y_temp16 = ((u16)paramTX_temp[13] << 0) | ((u16)paramTX_temp[14] << 8);
 569   2                      u8  Y_temp8 = 0;
 570   2                      u8  M_temp8 = 0;
 571   2                      
 572   2                      u8 Y = (u8)(Y_temp16 % 2000);
 573   2                      u8 M = paramTX_temp[11];
 574   2                      u8 D = paramTX_temp[12];
 575   2                      u8 W = 0;
 576   2                      
 577   2                      /*¼ÆËã»º´æ¸³Öµ*/
 578   2                      Y_temp8 = Y;
 579   2                      if(M == 1 || M == 2){ //Ò»ÔÂºÍ¶şÔÂµ±×÷ÉÏÒ»ÄêÊ®ÈıÔÂºÍÊ®ËÄÔÂ
 580   3                      
 581   3                              M_temp8 = M + 12;
 582   3                              Y_temp8 --;
 583   3                      }
 584   2                      else M_temp8 = M;
 585   2                      
 586   2                      /*¿ªÊ¼¼ÆËã*/
 587   2                      W =      Y_temp8 + (Y_temp8 / 4) + 5 - 40 + (26 * (M_temp8 + 1) / 10) + D - 1;  //²ÌÀÕ¹«Ê½
 588   2                      W %= 7; 
 589   2                      
 590   2                      /*¼ÆËã½á¹û¸³Öµ*/
 591   2                      W?(systemTime_current.time_Week = W):(systemTime_current.time_Week = 7);
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 11  

 592   2                      
 593   2                      systemTime_current.time_Month =         M;
 594   2                      systemTime_current.time_Day =           D;
 595   2                      systemTime_current.time_Year =          Y;
 596   2                      
 597   2                      systemTime_current.time_Hour =          paramTX_temp[8];
 598   2                      systemTime_current.time_Minute =        paramTX_temp[9];
 599   2                      systemTime_current.time_Second =        paramTX_temp[10];
 600   2                      
 601   2                      /*±¾µØÊ±¼äÎ¬³Ö¼ÆÊıÖµĞ£×¼¸üĞÂ*/
 602   2                      sysTimeKeep_counter = systemTime_current.time_Minute * 60 + systemTime_current.time_Second; //ÏµÍ³Ê±¼äÎ¬
             -³Ö¼ÆÊıÖµ¸üĞÂ
 603   2                      
 604   2                      resultOpreat = 1;
 605   2              }
 606   1              
 607   1      //#if(DEBUG_LOGOUT_EN == 1)     
 608   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 609   1      //              
 610   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 611   1      //              sprintf(log_buf, "sysTime reales result:%d.\n", (int)resultOpreat);
 612   1      //              PrintString1_logOut(log_buf);
 613   1      //      }
 614   1      //#endif
 615   1              
 616   1              return resultOpreat;
 617   1      }
 618          
 619          /*zigbeeÏµÍ³Ê±¼äÉèÖÃ*///×èÈû
 620          static
 621          bit zigB_sysTimeSet(u32 timeStamp, bit timeZoneAdjust_IF){
 622   1      
 623   1              datsAttr_ZigbInit code default_param = {{0x21,0x10},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00},0x0B,{0xFE,0x01,0x61,0x10,0x00},0x05,100}; //zigbeeÖ¸ÁîÏÂ´ïÄ¬ÈÏ²ÎÊı
 624   1              u8 xdata timeStampArray[0x0B] = {0};
 625   1              bit resultSet = 0;
 626   1              u32 timeStamp_temp = timeStamp;
 627   1              
 628   1              if(timeZoneAdjust_IF){ //ÊÇ·ñĞèÒªÊ±Çøµ÷Õû
 629   2              
 630   2                      if(sysTimeZone_H <= 12){
 631   3                      
 632   3                              timeStamp_temp += (3600UL * (long)sysTimeZone_H + 60UL * (long)sysTimeZone_M); //Ê±ÇøÕı
 633   3                              
 634   3                      }else
 635   2                      if(sysTimeZone_H > 12 && sysTimeZone_H <= 24){
 636   3                      
 637   3                              timeStamp_temp -= (3600UL * (long)(sysTimeZone_H - 12) + 60UL * (long)sysTimeZone_M); //Ê±Çø¸º
 638   3                              
 639   3                      }else
 640   2                      if(sysTimeZone_H >= 30){
 641   3                      
 642   3                              timeStamp_temp += (3600UL * (long)(sysTimeZone_H - 17) + 60UL * (long)sysTimeZone_M); //Ê±ÇøÌØÊâ
 643   3                      }
 644   2              }
 645   1      
 646   1              timeStampArray[0] = (u8)((timeStamp_temp & 0x000000ff) >> 0);
 647   1              timeStampArray[1] = (u8)((timeStamp_temp & 0x0000ff00) >> 8);
 648   1              timeStampArray[2] = (u8)((timeStamp_temp & 0x00ff0000) >> 16);
 649   1              timeStampArray[3] = (u8)((timeStamp_temp & 0xff000000) >> 24);
 650   1              
 651   1              resultSet = zigb_VALIDA_INPUT((u8 *)default_param.zigbInit_reqCMD,
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 12  

 652   1                                                                        (u8 *)timeStampArray,
 653   1                                                                        default_param.reqDAT_num,
 654   1                                                                        (u8 *)default_param.zigbInit_REPLY,
 655   1                                                                        default_param.REPLY_num,
 656   1                                                                        2,    //2´ÎÎŞ»Ø¸´ÎªÊ§°Ü
 657   1                                                                        default_param.timeTab_waitAnsr);
 658   1              
 659   1      //#if(DEBUG_LOGOUT_EN == 1)     
 660   1      //      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 661   1      //              
 662   1      //              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 663   1      //              sprintf(log_buf, "sysTime set result:%d.\n", (int)resultSet);
 664   1      //              PrintString1_logOut(log_buf);
 665   1      //      }
 666   1      //#endif
 667   1              
 668   1              return resultSet;
 669   1      }
 670          
 671          ///*zigbeeÓ²¼ş¸´Î»³õÊ¼»¯*///×èÈû
 672          //bit ZigB_resetInit(void){
 673          
 674          //#define zigbInit_loopTry              3
 675          //#define zigbInit_onceWait     5000
 676          
 677          //      u8 code initCmp_Frame[11] = {0xFE, 0x06, 0x41, 0x80, 0x01, 0x02, 0x00, 0x02, 0x06, 0x03, 0xC3};
 678          //      
 679          //      u8      loop = 0;
 680          //      u16 timeWait = 0;
 681          //      
 682          //      for(loop = 0; loop < zigbInit_loopTry; loop ++){
 683          //      
 684          //              zigbPin_RESET = 0;
 685          //              delayMs(100);
 686          //              zigbPin_RESET = 1;
 687          //              
 688          //              timeWait = zigbInit_onceWait;
 689          //              while(timeWait --){
 690          //              
 691          //                      delayMs(2);     //±ØĞëÑÓÊ±
 692          //                      if(uartRX_toutFLG){
 693          //                      
 694          //                              uartRX_toutFLG = 0;
 695          //                              
 696          //                              if(!memcmp(datsRcv_ZIGB.rcvDats, initCmp_Frame, 11)){
 697          //                              
 698          //                                      return 1;
 699          //                                      
 700          //                              }else{
 701          //                                      
 702          //                                      delayMs(1);     //±ØĞëÑÓÊ±
 703          //                              }
 704          //                      }
 705          //              }
 706          //      }
 707          //      
 708          //      return 0;
 709          //}
 710          
 711          ///*zigbee³õÊ¼»¯×Ô¼ì*///×èÈû
 712          //bit ZigB_inspectionSelf(void){        
 713          //      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 13  

 714          //#define       paramLen_zigbInspection 64
 715          //      u8 xdata paramTX_temp[paramLen_zigbInspection] = {0};
 716          //      
 717          ////    bit REQResult = 0;
 718          //      
 719          ////    u8 code frameREQ_zigbStatusCheck[5] = {0xFE, 0x00, 0x27, 0x00, 0x27};   //zigb×´Ì¬²éÑ¯Ö¸ÁîÖ¡
 720          ////    u8 code cmdResp_zigbStatusCheck[2]      = {0x67, 0x00}; //zigb×´Ì¬²éÑ¯ÏìÓ¦Ö¸Áî
 721          //      u8 code frameREQ_zigbJoinNWK[5]         = {0xFE, 0x00, 0x26, 0x00, 0x26};       //zigb¼¤»îÍøÂçÖ¸ÁîÖ¡
 722          //      u8 code cmdResp_zigbJoinNWK[2]          = {0x45, 0xC0}; //zigb¼¤»îÍøÂçÏìÓ¦Ö¸Áî
 723          //      u8 datsResp_Len = 0;
 724          //      
 725          ////    datsResp_Len = zigb_datsRequest(frameREQ_zigbStatusCheck, 5, cmdResp_zigbStatusCheck, paramTX_temp, 2
             -, 500);
 726          ////    if(paramTX_temp[16] == 0x07)REQResult
 727          //      
 728          //      datsResp_Len = zigb_datsRequest(frameREQ_zigbJoinNWK, 5, cmdResp_zigbJoinNWK, paramTX_temp, 2, 5000);
 729          //      if(paramTX_temp[4] == 0x07)return (zigb_clusterSet(13, 13) & zigb_clusterSet(13, 14));  //Éè±¸ID 13£¬ÖÕ¶
             -Ëµã 13£»        
 730          //      else{
 731          //      
 732          //              return 0;
 733          //      }
 734          //}
 735          
 736          /*zigbee·Ç×èÈûÈëÍøÇëÇó×´Ì¬»ú*///·Ç×èÈû ---ĞÅµÀÄ¬ÈÏµÚËÄĞÅµÀ
 737          static 
 738          void zigB_nwkJoinRequest(bit reJoin_IF){
 739   1      
 740   1      #define cmdNum_zigbNwkREQ       9       
 741   1      
 742   1              datsAttr_ZigbInit code ZigbInit_dats[cmdNum_zigbNwkREQ] = {
 743   1      
 744   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Ó²¼ş)
 745   1      //              {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x00,0x02,0x00,0x02,0x06,0x03,0xC2},       0x0B,   4000    },      
             -//¸´Î»(Ìæ²¹)
 746   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¸´Î»(Èí¼ş)
 747   1                      {       {0x26,0x05},    {0x03,0x01,0x03},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //¼Ä´æÆ÷³õÊ
             -¼»¯£¬È«²¿Çå¿Õ
 748   1                      {       {0x46,0x09},    {0},                                    0x00,   {0xFE,0x06,0x41,0x80,0x01,0x02,0x00,0x02,0x06,0x03,0xC3},       0x0B,   4000    },      //
             -¶ş´Î¸´Î»(Èí¼ş)
 749   1                      
 750   1      //              {       {0x26,0x05},    {0x87,0x01,0x00},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨Ğ­µ÷Æ÷£©
 751   1                      {       {0x26,0x05},    {0x87,0x01,0x01},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖÃ£
             -¨Â·ÓÉÆ÷£©
 752   1      //              {       {0x26,0x05},    {0x87,0x01,0x02},               0x03,   {0xFE,0x01,0x66,0x05,0x00,0x62},                                                        0x06,   500             },      //½ÇÉ«ÉèÖ
             -Ã£¨ÖÕ¶Ë£©
 753   1                      
 754   1                      {       {0x27,0x02},    {0xFF,0xFF},                    0x02,   {0xFE,0x01,0x67,0x02,0x00,0x64},                                                        0x06,   500             },      //PAN_ID¼Ä´æÆ÷É
             -èÖÃ
 755   1                      {       {0x27,0x03},    {0x00,0x80,0x00,0x00},  0x04,   {0xFE,0x01,0x67,0x03,0x00,0x65},                                                        0x06,   500             },      //ĞÅµÀ¼
             -Ä´æÆ÷ÅäÖÃ
 756   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x09,0x8D},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨Ğ­µ÷Æ÷ÏìÓ¦£©
 757   1                      {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x07,0x83},                                                        0x06,   8000    },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨½ÇÉ
             -«Ğ­µ÷Æ÷£¨Â·ÓÉÆ÷ÏìÓ¦£©
 758   1      //              {       {0x26,0x00},    {0},                                    0x00,   {0xFE,0x01,0x45,0xC0,0x06,0x82},                                                        0x06,   12000   },      //¿ªÊ¼ÈëÍø£¬ÒÔ¼È¶¨
             -½ÇÉ«Ğ­µ÷Æ÷£¨ÖÕ¶ËÏìÓ¦£©
 759   1                      {       {0x26,0x08},    {0xFC,0xFF,0x00},               0x03,   {0xFE,0x01,0x66,0x08,0x00,0x6F},                                                        0x06,   150             },  //¹Ø±Õ
             -ÍøÂç
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 14  

 760   1              };
 761   1              
 762   1              datsAttr_ZigbInit code defaultParam_clusterRegister = {{0x24,0x00},{0x0E,0x0D,0x00,0x0D,0x00,0x0D,0x00,0x
             -01,0x00,0x00,0x01,0x00,0x00},0x0D,{0xFE,0x01,0x64,0x00,0x00,0x65},0x06,500};  //Êı¾İ´Ø×¢²á,Ä¬ÈÏ²ÎÊı
 763   1              u8 code frameResponseSubs_clusterRegister[6] = {0xFE,0x01,0x64,0x00,0xB8,0xDD}; //ÏìÓ¦Ö¡Ìæ²¹£¬ÈôÊı¾İ´ØÒÑ¾
             -­×¢²á
 764   1              
 765   1      #define clusterNum_default 3
 766   1              datsAttr_clusterREG code cluster_Default[clusterNum_default] = {
 767   1              
 768   1                      {ZIGB_ENDPOINT_CTRLSECENARIO, zigbDatsDefault_ClustID}, 
 769   1                      {ZIGB_ENDPOINT_CTRLNORMAL, zigbDatsDefault_ClustID}, 
 770   1                      {ZIGB_ENDPOINT_CTRLSYSZIGB, zigbDatsDefault_ClustID}
 771   1              };
 772   1              
 773   1      #define dataLen_zigbNwkREQ 64
 774   1              u8 xdata paramTX_temp[dataLen_zigbNwkREQ] = {0};
 775   1              
 776   1              static u8 xdata step_CortexA = 0, //×´Ì¬»ú-Ö÷²½Öè
 777   1                                xdata step_CortexB = 0; //×´Ì¬»ú-×Ó²½Öè
 778   1              static u8 xdata reactionLoop = 0; //ÖØ¸´´ÎÊı»º´æ
 779   1                         u8 xdata actionReaptDefine_normal = 2; //ÖØ¸´´ÎÊı¶¨Òå_³£¹æÖ¸ÁîÏÂ
 780   1              
 781   1              u8 datsTX_Len = 0;
 782   1              
 783   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
 784   2              
 785   2                      devStatus_switch.statusChange_IF = 0;
 786   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
 787   2                      
 788   2                      step_CortexA = 0;
 789   2                      step_CortexB = 0;
 790   2                      reactionLoop = 0;
 791   2                      zigbPin_RESET = 1;
 792   2                      
 793   2                      return;
 794   2              }
 795   1              
 796   1              if(step_CortexA > (cmdNum_zigbNwkREQ + clusterNum_usr + clusterNum_default)){ //ÅĞ¶Ïµ±Ç°×´Ì¬»úÄÚ²¿×´Ì¬Á÷³
             -ÌÊÇ·ñÍê³É
 797   2              
 798   2                      step_CortexA = 0;
 799   2                      step_CortexB = 0;
 800   2                      reactionLoop = 0;
 801   2                      zigbPin_RESET = 1;
 802   2                      
 803   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES; //systime¸üĞÂÖÜÆÚÖØÖÃ£¬·ÀÖ¹¶àÖ¸Áî¶ÂÈû³åÍ»
 804   2                      
 805   2                      devRunning_Status = status_passiveDataRcv; //Íâ²¿×´Ì¬ÇĞ»»
 806   2                      devTips_status = status_Normal; //Éè±¸ÏµÍ³tips×´Ì¬ÇĞ»»
 807   2                      
 808   2                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //Íø¹ØÊ§Áª¼ì²âÊ±¼äÖØÖÃ 
 809   2                      
 810   2                      if(reJoin_IF)statusSave_zigbNwk_nwkExistIF(1); //ÍøÂç´æÔÚ±¾µØ´æ´¢ÅĞ¶ÏÖµ¸üĞÂÎªÒÑ´æÔÚ
 811   2                      
 812   2                      dev_currentPanid = ZigB_getPanIDCurrent(); //¶ÁÈ¡¸üĞÂÒ»´ÎPANID,±ÜÃâ¶ş´ÎÖØĞÂ¼ÓÍø²ĞÁôÀÏµÄPANID
 813   2                      
 814   2      #if(DEBUG_LOGOUT_EN == 1)
 815   2                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 816   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 817   3                              sprintf(log_buf, "nwkZigb connect/rejoin all complete.\n");
 818   3                              PrintString1_logOut(log_buf);
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 15  

 819   3                      }                       
 820   2      #endif
 821   2                      
 822   2                      return;
 823   2              }
 824   1              
 825   1              if(!reJoin_IF)if(step_CortexA == 1)step_CortexA = 7; //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔò²»½øĞĞÓ²¼ş¸´Î»(Ó²¼ş¸
             -´Î»½«µ¼ÖÂ±¾µØÊ±¼ä±»ÖØÖÃ) ´Ó1¿ªÊ¼¾ÍÓĞÓ²¼ş¸´Î»£¬·ñÔòÃ»ÓÃ
 826   1              if((step_CortexA == 7) || (step_CortexA == 0))sysTimeReales_counter     = PERIOD_SYSTIMEREALES; //·Ç×èÈû¹Ø¼üÖ
             -¸Áî²»ÄÜ±»×èÈûÖ¸Áî´ò¶Ï£¨Ó²¼ş¸´Î» ºÍ ÈëÍøÊ± ÖĞ¶Ï×èÈûÖ¸ÁîÏÂ´ï£©
 827   1              
 828   1      #if(DEBUG_LOGOUT_EN == 1)
 829   1              {//Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 830   2              #define STATUSMACHINE_NWKREQ_DISPINITVAL 255
 831   2                      static u8 xdata stepDisp_CortexA = STATUSMACHINE_NWKREQ_DISPINITVAL;
 832   2                      
 833   2                      if(stepDisp_CortexA != step_CortexA){
 834   3                      
 835   3                              stepDisp_CortexA = step_CortexA;
 836   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
 837   3                              sprintf(log_buf, "nwkZigb connect/rejoin mainStep-%02d@method:%d complete.\n", (int)stepDisp_CortexA, (
             -int)reJoin_IF);
 838   3                              PrintString1_logOut(log_buf);
 839   3                      }
 840   2              }
 841   1      #endif
 842   1              
 843   1              if(step_CortexA == 0){ //ÌØÊâÖ¸Áî_Ó²¼ş¸´Î»:<0>
 844   2              
 845   2                      switch(step_CortexA){
 846   3                      
 847   3                              case 0:{ //Ê×ÌõÖ¸Áî£¬Ó²¼ş¸´Î»
 848   4                              
 849   4                                      switch(step_CortexB){
 850   5                                      
 851   5                                              case 0:{ //²½ÖèÒ»£ºÓ²¼şÀ­µÍ100ms
 852   6                                              
 853   6                                                      zigbPin_RESET = 0;
 854   6                                                      zigbNwkAction_counter = 200;
 855   6                                                      step_CortexB = 1;
 856   6                                              
 857   6                                              }break;
 858   5                                      
 859   5                                              case 1:{ //²½Öè¶ş£ºÓ²¼şÀ­µÍÍê±ÏºóÈ·ÈÏÓ¦´ğÖ¡Ê±³¤
 860   6                                              
 861   6                                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı6000ms
 862   7                                                      
 863   7                                                              zigbPin_RESET = 1;
 864   7                                                              zigbNwkAction_counter = 6000;
 865   7                                                              step_CortexB = 2;
 866   7                                                      }
 867   6                                                      
 868   6                                              }break;
 869   5                                              
 870   5                                              case 2:{ //²½Öè¶ş£ºÈ·ÈÏÓ¦´ğÖ¡
 871   6                                                      
 872   6                                                      if(!zigbNwkAction_counter)step_CortexB = 0; //·Ç×èÈûµÈ´ıÏìÓ¦
 873   6                                              
 874   6                                                      if(uartRX_toutFLG){
 875   7                                                      
 876   7                                                              uartRX_toutFLG = 0;
 877   7                                                              
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 16  

 878   7                                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[0].zigbInit_REPLY, ZigbInit_dats[0].RE
             -PLY_num)){
 879   8                              
 880   8                                                                      step_CortexB = 0;
 881   8                                                                      reactionLoop = 0;
 882   8                                                                      step_CortexA ++;
 883   8                                                              }
 884   7                                                      }
 885   6                                                      
 886   6                                              }break;
 887   5                                      }
 888   4                                      
 889   4                              }break;
 890   3                      }
 891   2              }else
 892   1              if(step_CortexA > 0 && step_CortexA < cmdNum_zigbNwkREQ){ //³£¹æÖ¸Áî:<1 - 9>
 893   2                      
 894   2      //              if(!reJoin_IF)if(step_CortexA == 2)step_CortexA = 7;    //ÊÇ·ñÎªÖØĞÂÖ÷¶¯¼ÓÈëĞÂÍøÂç£¬·ñÔòÖ»½øĞĞ±»¶¯ÍøÂç¼¤»
             -î
 895   2      
 896   2                      switch(step_CortexB){
 897   3                      
 898   3                              case 0:{
 899   4                                      
 900   4                                      (step_CortexA == 7)?(actionReaptDefine_normal = 12):(actionReaptDefine_normal =  2); //ÓÉÓÚÈëÍø¹ı³Ì½Ï¸
             -´ÔÓ£¬ÈëÍøÖ¸ÁîµÈ´ıÊ±¼ä·Å³¤
 901   4                                      
 902   4                                      if(reactionLoop > actionReaptDefine_normal){
 903   5                                              
 904   5                                              reactionLoop = 0;
 905   5                                              step_CortexA = 0;
 906   5                                              break;
 907   5                                      }
 908   4                                      
 909   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 910   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqCMD, 
 911   4                                                                                                2, 
 912   4                                                                                                ZigbInit_dats[step_CortexA].zigbInit_reqDAT, 
 913   4                                                                                                ZigbInit_dats[step_CortexA].reqDAT_num);
 914   4                                      
 915   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 916   4                                      
 917   4                                      zigbNwkAction_counter = ZigbInit_dats[step_CortexA].timeTab_waitAnsr;
 918   4                                      step_CortexB = 1;
 919   4                                      
 920   4                              }break;
 921   3                                      
 922   3                              case 1:{
 923   4                                      
 924   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 925   5                                      
 926   5                                              reactionLoop ++;
 927   5                                              step_CortexB = 0;
 928   5                                      }
 929   4                                      else
 930   4                                      if(uartRX_toutFLG){
 931   5                                      
 932   5                                              uartRX_toutFLG = 0;
 933   5                                              
 934   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, ZigbInit_dats[step_CortexA].zigbInit_REPLY, ZigbInit_d
             -ats[step_CortexA].REPLY_num)){
 935   6                                              
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 17  

 936   6                                                      step_CortexB = 0;
 937   6                                                      reactionLoop = 0;
 938   6                                                      step_CortexA ++;
 939   6                                              }
 940   5                                      }
 941   4                                      
 942   4                              }break;
 943   3                      }
 944   2                      
 945   2              }else
 946   1              if(step_CortexA >= cmdNum_zigbNwkREQ){ //ÌØÊâÖ¸Áî_³£¹æÍ¨ĞÅ´Ø×¢²á:<10 - n>
 947   2                      
 948   2                      u8 datsREG_cluster[16] = {0};
 949   2                      memcpy(datsREG_cluster, defaultParam_clusterRegister.zigbInit_reqDAT, defaultParam_clusterRegister.reqDA
             -T_num);
 950   2                      if(step_CortexA < (cmdNum_zigbNwkREQ + clusterNum_default)){ //Ä¬ÈÏ×¨ÓÃÍ¨ĞÅ´Ø²ÎÊıÌî×°
 951   3                      
 952   3                              datsREG_cluster[0] = cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].endpoint;
 953   3                              datsREG_cluster[3] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0x00ff) >> 0);
 954   3                              datsREG_cluster[4] = (u8)((cluster_Default[step_CortexA - cmdNum_zigbNwkREQ].devID & 0xff00) >> 8);
 955   3                              
 956   3                      }else{  //ÓÃ»§Í¨ĞÅ´Ø£¨»¥¿Ø£©×¢²á²ÎÊıÌî×°
 957   3                      
 958   3                              if((CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] >= 0x10) && (CTRLEATHER_PORT[ste
             -p_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr] < 255)){ //Í¨ĞÅ´Ø¶Ë¿ÚºÏ·¨ĞÔÅĞ¶Ï
 959   4                              
 960   4                                      datsREG_cluster[0] = CTRLEATHER_PORT[step_CortexA - cmdNum_zigbNwkREQ - clusterNum_usr];
 961   4                                      datsREG_cluster[3] = zigbDatsDefault_ClustID; //Ä¬ÈÏ´ØID <LSB>
 962   4                                      datsREG_cluster[4] = 0; //Ä¬ÈÏ´ØID <MSB>
 963   4                                      
 964   4                              }else{
 965   4                              
 966   4                                      step_CortexA ++;
 967   4                                      return;
 968   4                              }
 969   3                      }
 970   2              
 971   2                      switch(step_CortexB){
 972   3                      
 973   3                              case 0:{
 974   4                                      
 975   4                                      if(reactionLoop > 2){
 976   5                                              
 977   5                                              reactionLoop = 0;
 978   5                                              step_CortexA = 0;
 979   5                                              break;
 980   5                                      }
 981   4                                      
 982   4                                      datsTX_Len = ZigB_TXFrameLoad(paramTX_temp, 
 983   4                                                                                                defaultParam_clusterRegister.zigbInit_reqCMD, 
 984   4                                                                                                2, 
 985   4                                                                                                datsREG_cluster, 
 986   4                                                                                                defaultParam_clusterRegister.reqDAT_num);
 987   4                                      
 988   4                                      uartZigB_datsSend(paramTX_temp, datsTX_Len);
 989   4                                      
 990   4                                      zigbNwkAction_counter = defaultParam_clusterRegister.timeTab_waitAnsr;
 991   4                                      step_CortexB = 1;
 992   4                                      
 993   4                              }break;
 994   3                                      
 995   3                              case 1:{
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 18  

 996   4                                      
 997   4                                      if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ıÏìÓ¦
 998   5                                      
 999   5                                              reactionLoop ++;
1000   5                                              step_CortexB = 0;
1001   5                                      }
1002   4                                      else
1003   4                                      if(uartRX_toutFLG){
1004   5                                      
1005   5                                              uartRX_toutFLG = 0;
1006   5                                              
1007   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, defaultParam_clusterRegister.zigbInit_REPLY, defaultPa
             -ram_clusterRegister.REPLY_num) || //Ô¤ÆÚÏìÓ¦
1008   5                                                 memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, frameResponseSubs_clusterRegister, 6)){ //Ìæ²¹ÏìÓ¦
1009   6                                              
1010   6                                                      step_CortexB = 0;
1011   6                                                      reactionLoop = 0;
1012   6                                                      step_CortexA ++;
1013   6                                              }
1014   5                                      }
1015   4                                      
1016   4                              }break;
1017   3                      }
1018   2              }
1019   1      }
1020          
1021          /*zigbeeÍøÂçÊı¾İ·¢ËÍ¸ñÊ½»¯Ìî×°*/
1022          static 
1023          u8 zigb_datsLoad_datsSend(u8  frame_Temp[NORMALDATS_DEFAULT_LENGTH],
1024                                                            u16 DstAddr,
1025                                                            u8  portPoint,
1026                                                            u8  dats[],
1027                                                            u8  datsLen){
1028   1              
1029   1              u8 code zigbCMD_DatsSend[2] = {0x24, 0x01};
1030   1              
1031   1      #define zigbDatsSend_datsTransLen       (128 + 25)
1032   1              u8 xdata buf_datsLOAD[zigbDatsSend_datsTransLen] = {0};
1033   1              u8 datsTX_Len = 0;
1034   1                                                                
1035   1              memset(frame_Temp, 0, NORMALDATS_DEFAULT_LENGTH * sizeof(u8));  
1036   1      
1037   1              //·¢ËÍÖ¡Ìî×°
1038   1              buf_datsLOAD[0] = (u8)((DstAddr & 0x00ff) >> 0);
1039   1              buf_datsLOAD[1] = (u8)((DstAddr & 0xff00) >> 8);
1040   1              buf_datsLOAD[2] = portPoint;
1041   1              buf_datsLOAD[3] = portPoint;
1042   1              buf_datsLOAD[4] = zigbDatsDefault_ClustID;
1043   1              buf_datsLOAD[6] = zigbDatsDefault_TransID;
1044   1              buf_datsLOAD[7] = zigbDatsDefault_Option;
1045   1              buf_datsLOAD[8] = zigbDatsDefault_Radius;
1046   1              buf_datsLOAD[9] = datsLen;
1047   1              memcpy(&buf_datsLOAD[10], dats, datsLen);       
1048   1              
1049   1              return ZigB_TXFrameLoad(frame_Temp, (u8 *)zigbCMD_DatsSend, 2, buf_datsLOAD, datsLen + 10);
1050   1      }
1051          
1052          /*zigbeeÎŞÊÓÏìÓ¦»Ø¸´Ö±½Ó·¢ËÍÊı¾İ*///×èÈû
1053          static
1054          void dataSendRemote_straightforward( u16 DstAddr, //Ô¶¶ËÍøÂç¶ÌµØÖ·
1055                                                                                    u8 port,       //¶Ëµã¿Ú
1056                                                                                    u8 dats[], //Êı¾İ
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 19  

1057                                                                                    u8 datsLen ){ //Êı¾İ³¤¶È
1058   1                                                                                                                                                
1059   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1060   1              u8 datsTX_Len = 0;
1061   1              
1062   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, DstAddr, port, dats, datsLen);
1063   1              
1064   1              uartZigB_datsSend(buf_datsTX, datsTX_Len);
1065   1      }
1066          
1067          /*zigbeeÍøÂçÊı¾İ·¢ËÍÇëÇó×´Ì¬»ú*///·Ç×èÈû
1068          static
1069          void dataTransRequest_datsSend(void){
1070   1      
1071   1              u8 xdata buf_datsTX[NORMALDATS_DEFAULT_LENGTH] = {0};
1072   1              u8 datsTX_Len = 0;
1073   1              
1074   1      #define zigbDatsSend_datsRespLen        64
1075   1              u8 xdata buf_datsRX[zigbDatsSend_datsRespLen] = {0};
1076   1              u8 datsRX_Len = 0;
1077   1              
1078   1      #define zigbDatsSend_ASR_datsLen        3
1079   1              u8              ASR_dats[zigbDatsSend_ASR_datsLen] = {0};
1080   1              u8 code ASR_cmd[2] = {0x44,0x80};       //±¾µØZNPĞ­Òé²ãÈ·ÈÏ·¢ËÍÏìÓ¦
1081   1              
1082   1      #define resCODE_datsSend_NOROUTER 0xCD  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-Â·ÓÉÊ§Áª£¬Í¨Ñ¶Ã½½é¶ªÊ§
1083   1      #define resCODE_datsSend_NOREMOTE 0xE9  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-¶Ô·½²»ÔÚÏß£¬Ä¿±êµØÖ·½ÚµãÉè±¸²»´æÔÚ
1084   1      #define resCODE_datsSend_TIMEOUT  0x01  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³¬Ê±
1085   1      #define resCODE_datsSend_SUCCESS  0x00  //Êı¾İ·¢ËÍĞ­Òé²ãÏìÓ¦´úÂë-·¢ËÍ³É¹¦
1086   1              static u8 datsTrans_respondCode = 0; //·¢ËÍÍê³ÉÏìÓ¦Âë
1087   1              
1088   1              static u8 step = 0;
1089   1              static u8 reactionLoop = 0;
1090   1              
1091   1              const  u8 dataReq_failLoop_limit = 15; //Ê§°Ü´ÎÊıÏŞ¶¨Öµ
1092   1              static u8 dataReq_failLoop_record = 0; //Ê§°Ü´ÎÊı¼ÇÂ¼ -³¬³öÏŞÖÆ½«´¥·¢ÖØÁ¬
1093   1              
1094   1              if(devStatus_switch.statusChange_IF){   //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1095   2              
1096   2                      devStatus_switch.statusChange_IF = 0;
1097   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1098   2                      
1099   2                      step = 0;
1100   2                      reactionLoop = 0;
1101   2                      
1102   2                      return;
1103   2              }
1104   1              
1105   1              //½ÓÊÕÖ¡Ìî×°_±¾µØ
1106   1              ASR_dats[0] = resCODE_datsSend_SUCCESS; //·¢ËÍ³É¹¦ÏìÓ¦´úÂë
1107   1              ASR_dats[1] = datsSend_request.portPoint;
1108   1              ASR_dats[2] = zigbDatsDefault_TransID;
1109   1              datsRX_Len = ZigB_TXFrameLoad(buf_datsRX, (u8 *)ASR_cmd, 2, ASR_dats, zigbDatsSend_ASR_datsLen);
1110   1              
1111   1              datsTX_Len = zigb_datsLoad_datsSend(buf_datsTX, datsSend_request.nwkAddr, datsSend_request.portPoint, dat
             -sSend_request.datsTrans.dats, datsSend_request.datsTrans.datsLen);
1112   1              
1113   1              switch(step){
1114   2              
1115   2                      case 0:{ //ÏìÓ¦½ÓÊÕ¾ÍĞ÷£¬ÉèÖÃÏìÓ¦Ê±¼ä
1116   3                              
1117   3                              if(reactionLoop > 3){ //ÖØ·¢´ÎÊıÒÑ³¬³ö
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 20  

1118   4                                      
1119   4                                      datsTrans_respondCode = resCODE_datsSend_TIMEOUT; //ÏìÓ¦Âë¸ÄÎª³¬Ê±
1120   4                                      
1121   4                                      reactionLoop = 0;
1122   4                                      step = 4;
1123   4                                      
1124   4                                      break;
1125   4                              }
1126   3                      
1127   3                              zigbPin_RESET = 1; //±£ÏÕÆğ¼û£¬¸´Î»À­¸ß
1128   3                              if(!devRemoteDataReqMethod.keepTxUntilCmp_IF)uartZigB_datsSend(buf_datsTX, datsTX_Len); //·ÇËÀ¿Ä£¬·¢Ò»´
             -Î¾ÍĞĞ
1129   3                              zigbNwkAction_counter = REMOTE_DATAREQ_TIMEOUT; //Ä¬ÈÏĞ­Òé²ãÏìÓ¦Ê±¼ä<Ê±¼äÌ«¶ÌÎŞ·¨ÊÕµ½ºóÃæµÄ½ÓÊÕ×´Ì¬ÏìÓ¦
             -Ö¸Áî£¬Ö»ÄÜÊÕµ½ÏµÍ³ÏìÓ¦>
1130   3                              step = 1;
1131   3                              
1132   3                      }break;
1133   2                      
1134   2                      case 1:{ //·Ç×èÈûµÈ´ıÏµÍ³ÏìÓ¦
1135   3                              
1136   3                              static u8 xdata local_funRecord = 0; //±¾µØ ³ı´Î±È ÅĞ¶Ï
1137   3                                         u8 xdata funRecord_temp = zigbNwkAction_counter / devRemoteDataReqMethod.datsTxKeep_Period; //³ı´Î±
             -È£¬ÓÃÓÚÖÜÆÚÅĞ¶Ï
1138   3                      
1139   3                              if(!zigbNwkAction_counter){ //³¬Ê±ÅĞ¶Ï
1140   4                              
1141   4                                      reactionLoop ++;
1142   4                                      step = 0;
1143   4                                      local_funRecord = 0;
1144   4                              }
1145   3                              else{
1146   4                                      
1147   4                                      if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //ËÀ¿Ä·½Ê½ÏÂ£¬³¬Ê±Ê±¼äÄÚ£¬ÖÜÆÚÑ­»·ÏÂ·¢Ö¸Áî
1148   5                                              
1149   5                                              if(local_funRecord != funRecord_temp){ //°´³ÖĞøÆµÂÊ³ÖĞø·¢ËÍ
1150   6                                              
1151   6                                                      local_funRecord = funRecord_temp; //±¾µØ³ı´Î±È¸üĞÂ
1152   6                                                      
1153   6                                                      uartZigB_datsSend(buf_datsTX, datsTX_Len);
1154   6                                              }
1155   5                                      }
1156   4                                      
1157   4                                      if(uartRX_toutFLG){
1158   5                                      
1159   5                                              uartRX_toutFLG = 0;
1160   5      
1161   5                                              if(memmem(datsRcv_ZIGB.rcvDats, COM_RX1_Lenth, buf_datsRX, datsRX_Len)){ //Ó¦´ğÖ¸ÁîºÍÓ¦´ğÂë¶¼ÕıÈ·
1162   6                                              
1163   6                                                      if(datsRcv_respond.datsTrans.datsLen == 0){ //ÅĞ¶ÏÌõ¼şÊÇ·ñĞèÒªÔ¶¶ËÏìÓ¦
1164   7                                                      
1165   7                                                              step = 3;
1166   7                                                              
1167   7                                                      }else{
1168   7                                                      
1169   7                                                              step = 2;
1170   7                                                              zigbNwkAction_counter = REMOTE_RESPOND_TIMEOUT; //Ä¬ÈÏÔ¶¶ËÏìÓ¦Ê±¼ä<¶Ô·½½ÚµãÏìÓ¦>
1171   7                                                      }
1172   6                                                      
1173   6                                                      local_funRecord = 0; //±¾µØ³ı´Î±È¸´Î»
1174   6                                                      
1175   6                                              }else{  
1176   6                                                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 21  

1177   6                                                      if(!memcmp(&datsRcv_ZIGB.rcvDats[2], ASR_cmd, 2)){ //Ó¦´ğÖ¸ÁîÕıÈ·£¬µ«Ó¦´ğÂë´íÎó£¬ÔòÈ¡³ö´íÎóÂë
1178   7                                                      
1179   7                                                              datsTrans_respondCode = datsRcv_ZIGB.rcvDats[4]; //´íÎóÏìÓ¦Âë×°ÔØ
1180   7                                                              
1181   7                                                              if(devRemoteDataReqMethod.keepTxUntilCmp_IF){ //·¢ËÍ·½Ê½ÅĞ¶Ï-ÊÇ·ñÎªËÀ¿Ä·½Ê½
1182   8                                                              
1183   8                                                                      
1184   8                                                                      
1185   8                                                              }else{
1186   8                                                              
1187   8                                                                      step = 4; //·ÇËÀ¿Ä·½Ê½£¬ÔòÓĞÓ¦´ğÖ¸Áî£¬µ«Ó¦´ğÊı¾İ´íÎó£¬ÌøÖÁÊ§°Ü²½Öè
1188   8                                                              }
1189   7                                                      }
1190   6                                                      
1191   6      //#if(DEBUG_LOGOUT_EN == 1)
1192   6      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1193   6      // 
1194   6      //                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8)); //Êı¾İ´«ÊäÊ§°ÜĞ­Òé²ãÏìÓ¦´úÂë´òÓ¡
1195   6      //                                                      sprintf(log_buf, "dats_TX fail code: %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[2], (int)datsR
             -cv_ZIGB.rcvDats[3], (int)datsRcv_ZIGB.rcvDats[4]);
1196   6      //                                                      PrintString1_logOut(log_buf);
1197   6      //                                              }       
1198   6      //#endif                                
1199   6                                              }
1200   5                                      }
1201   4                              }
1202   3                              
1203   3                      }break;
1204   2                      
1205   2                      case 2:{ //·Ç×èÈûµÈ´ıÔ¶¶ËÏìÓ¦
1206   3      
1207   3                              if(!zigbNwkAction_counter){
1208   4                              
1209   4                                      reactionLoop ++;
1210   4                                      step = 0;
1211   4                              }
1212   3                              else{
1213   4                                      
1214   4                                      if(uartRX_toutFLG){
1215   5                                              
1216   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
1217   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë  
1218   5                                              
1219   5                                              uartRX_toutFLG = 0;
1220   5                                              
1221   5                                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
1222   6                                              
1223   6      #if(DEBUG_LOGOUT_EN == 1)
1224   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1225   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1226   7                                                              sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
1227   7                                                              PrintString1_logOut(log_buf);
1228   7                                                      }                       
1229   6      #endif  
1230   6                                              }
1231   5      
1232   5                                              if(!memcmp(&(datsRcv_ZIGB.rcvDats[21]), datsRcv_respond.datsTrans.dats, datsRcv_respond.datsTrans.dat
             -sLen) && 
1233   5                                                 (datsRcv_respond.nwkAddr == datsFrom_addr) &&
1234   5                                                      (datsRcv_respond.portPoint == dstPoint)){
1235   6                                              
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 22  

1236   6                                                      step = 3;
1237   6                                                              
1238   6                                              }else{
1239   6                                              
1240   6      #if(DEBUG_LOGOUT_EN == 1)
1241   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1242   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1243   7      //                                                      sprintf(log_buf, "data remoteRcv is %02X %02X %02X.\n", (int)datsRcv_ZIGB.rcvDats[21], (int)datsR
             -cv_ZIGB.rcvDats[22], (int)datsRcv_ZIGB.rcvDats[23]);
1244   7                                                              sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)dstPoint, (int)datsFrom_addr);
1245   7      //                                                      sprintf(log_buf, "rcvPort is %02X, rcvNwkAddr is %04X.\n", (int)datsRcv_respond.portPoint, (int)d
             -atsRcv_respond.nwkAddr);
1246   7                                                              PrintString1_logOut(log_buf);
1247   7                                                      }       
1248   6      #endif  
1249   6                                              }
1250   5                                      }
1251   4                              }
1252   3                              
1253   3                      }break;
1254   2                      
1255   2                      case 3:{ //ÏìÓ¦³É¹¦
1256   3                      
1257   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1258   4                              
1259   4                                      reConnectAfterDatsReq_IF = 0;
1260   4                                      devRunning_Status = status_nwkReconnect;
1261   4                                      
1262   4                              }else{ 
1263   4                              
1264   4                                      devRunning_Status = status_passiveDataRcv;
1265   4                              }
1266   3                              
1267   3                              reactionLoop = 0;
1268   3                              step = 0;
1269   3                              
1270   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1271   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1272   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1273   3                              
1274   3                      }break;
1275   2                      
1276   2                      case 4:{ //ÏìÓ¦Ê§°Ü
1277   3                              
1278   3                              //Õë¶ÔÊı¾İ´«ÊäÊ§°ÜÏìÓ¦´úÂëÇé¿ö½øĞĞÑ¡ÔñĞÔÖØÁ¬£¬·ñÔò½öÊ±ÇøĞ­µ÷Æ÷Éè±¸¾Ígg
1279   3                              if(datsTrans_respondCode){ 
1280   4                                      
1281   4      #if(DEBUG_LOGOUT_EN == 1)                               
1282   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1283   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1284   5                                              sprintf(log_buf, "remote dataRequest fail, code:[0x%02X] --loop%d.\n", (int)datsTrans_respondCode, (i
             -nt)dataReq_failLoop_record);
1285   5                                              PrintString1_logOut(log_buf);
1286   5                                      }
1287   4      #endif  
1288   4                                      if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //ÈôÅÜÂíµÆÕıÔÚÔËĞĞÔòÖĞ¶ÏÅÜÂíµÆ
1289   4                                      
1290   4                                      switch(datsTrans_respondCode){ //ÏìÓ¦Ê§°ÜÂë·ÖÎö
1291   5                                      
1292   5                                              case resCODE_datsSend_NOROUTER:
1293   5                                              case resCODE_datsSend_NOREMOTE:
1294   5                                              case resCODE_datsSend_SUCCESS:{
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 23  

1295   6                                              
1296   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1297   6                                                      
1298   6                                              }break;
1299   5                                              
1300   5                                              default:{
1301   6                                              
1302   6                                                      devTips_nwkZigb = nwkZigb_outLine; //ÔİÊ±Ö»×öÊ§°ÜÌáÊ¾£¬²»×öÆäËû¶¯×÷
1303   6                                                      
1304   6                                              }break;
1305   5                                      }
1306   4                                      
1307   4                                      datsTrans_respondCode = 0;
1308   4                              }
1309   3                              
1310   3                              reactionLoop = 0;
1311   3                              step = 0;
1312   3                              
1313   3                              /*ËÀ¿ÄÊôĞÔ¸´Î»*///ÊôĞÔÉèÖÃ½öÉúĞ§Ò»´Î
1314   3                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 0; //ËÀ¿ÄÊ¹ÄÜ¸´Î»
1315   3                              devRemoteDataReqMethod.datsTxKeep_Period = 0; //ËÀ¿ÄÖÜÆÚ¸´Î»
1316   3                              
1317   3                              if(dataReq_failLoop_record < dataReq_failLoop_limit){ //Êı¾İ´«ÊäÊ§°Ü´ÎÊı³¬ÏŞ£¬´¥·¢Ó¦ÓÃ²ãÖØÁ¬
1318   4                                              
1319   4                                      if(heartBeatPeriod == PERIOD_HEARTBEAT_ASR)dataReq_failLoop_record += (dataReq_failLoop_limit / 3);
1320   4                                      else dataReq_failLoop_record ++;
1321   4                              }
1322   3                              else
1323   3                              {
1324   4                              
1325   4                                      dataReq_failLoop_record = 0;
1326   4                                      devRunning_Status = status_nwkReconnect;
1327   4                                      
1328   4      #if(DEBUG_LOGOUT_EN == 1)                               
1329   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1330   5                                              PrintString1_logOut(">>>dtFail too more, zigbee reconnect right now.\n");
1331   5                                      }
1332   4      #endif  
1333   4                                      return; //Á¢¼´Ö´ĞĞ
1334   4                              }
1335   3                      
1336   3                              if(reConnectAfterDatsReq_IF){ //Õë¶Ô¼´¿Ì×¢²á»¥¿ØÌØÊâÇé¿ö ×´Ì¬ÇĞ»»
1337   4                              
1338   4                                      reConnectAfterDatsReq_IF = 0;
1339   4                                      devRunning_Status = status_nwkReconnect;
1340   4                                      return; //Á¢¼´Ö´ĞĞ
1341   4                                      
1342   4                              }else{ 
1343   4                              
1344   4                                      devRunning_Status = status_passiveDataRcv;
1345   4                              }
1346   3                              
1347   3                      }break;
1348   2                              
1349   2                      default:{
1350   3                      
1351   3                              step = 4;
1352   3                              
1353   3                      }break;
1354   2              }
1355   1      }
1356          
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 24  

1357          /*Éè±¸Êı¾İ´«ÊäÖ÷×´Ì¬ÇĞ»»ÖÁÍøÂç¹ÒÆğ*/
1358          void devStatusChangeTo_devHold(bit zigbNwkSysNote_IF){ //Éè±¸ÍøÂç¹ÒÆğ
1359   1      
1360   1              devNwkHoldTime_Param.devHoldTime_counter = DEVHOLD_TIME_DEFAULT;
1361   1              if(zigbNwkSysNote_IF)devNwkHoldTime_Param.zigbNwkSystemNote_IF = 1;
1362   1              
1363   1              devStatus_switch.statusChange_standBy = status_devNwkHold; //Êı¾İ´«Êä×´Ì¬»ú¸ü±ä
1364   1              devStatus_switch.statusChange_IF = 1;
1365   1              
1366   1              devTips_status = status_devHold; //tips¸ü±ä
1367   1              thread_tipsGetDark(0x0F);
1368   1              
1369   1      #if(DEBUG_LOGOUT_EN == 1)                               
1370   1              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1371   2                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1372   2                      sprintf(log_buf, "devHold start right now.\n");
1373   2                      PrintString1_logOut(log_buf);
1374   2              }
1375   1      #endif  
1376   1      }
1377          
1378          /*Éè±¸ÍøÂç¹ÒÆğÍ£Ö¹£¬Ê¹ÌáÇ°½áÊø*/
1379          void devHoldStop_makeInAdvance(void){ //Í£Ö¹Éè±¸ÍøÂç¹ÒÆğ£¨ÌáÇ°£©
1380   1      
1381   1              if(devNwkHoldTime_Param.devHoldTime_counter)devNwkHoldTime_Param.devHoldTime_counter = 0;
1382   1      }
1383          
1384          /*zigbeeÉè±¸ÍøÂç¹ÒÆğ×´Ì¬»ú*///·Ç×èÈû
1385          static 
1386          void function_devNwkHold(void){
1387   1              
1388   1              static status_Step = 0; //µ±Ç°×´Ì¬»ú²½Öè×´Ì¬Ö¸Ê¾
1389   1              
1390   1              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
1391   2              
1392   2                      devStatus_switch.statusChange_IF = 0;
1393   2                      devRunning_Status = devStatus_switch.statusChange_standBy;
1394   2                      
1395   2                      status_Step = 0;
1396   2                      zigbNwkAction_counter = 0;
1397   2                      
1398   2                      zigbPin_RESET = 1;
1399   2                      
1400   2                      return;
1401   2              }
1402   1              
1403   1              if(devNwkHoldTime_Param.devHoldTime_counter){ //Ö±µ½¹ÒÆğÊ±¼ä½áÊø
1404   2              
1405   2                      if(devNwkHoldTime_Param.zigbNwkSystemNote_IF){ //Í¨Öªµ±Ç°ÍøÂçÄÚ×ÓÉè±¸¹ÒÆğ,±¨Ò»´Î
1406   3                              
1407   3                              u8 xdata dats_Note[3] = {ZIGB_SYSCMD_DEVHOLD, 1, 0}; //ÃüÁî¡¢Êı¾İ³¤¶È¡¢Êı¾İ
1408   3                      
1409   3                              devNwkHoldTime_Param.zigbNwkSystemNote_IF = 0; //Í¨ÖªÊ¹ÄÜ¸´Î»
1410   3                              
1411   3                              dataSendRemote_straightforward( 0xFFFF, //¹ã²¥Í¨ÖªÍøÄÚËùÓĞ×ÓÉè±¸¹ÒÆğ
1412   3                                                                                              ZIGB_ENDPOINT_CTRLSYSZIGB,
1413   3                                                                                              dats_Note,
1414   3                                                                                              3 );
1415   3                              
1416   3                              delayMs(50); //±ØĞèÑÓÊ±£¬·ñÔòÊı¾İ»¹Ã»·¢ËÍ³öÈ¥£¬¾ÍÅÜµ½ÏÂÒ»²½¸´Î»ÁË
1417   3                      }
1418   2                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 25  

1419   2                      { //Éè±¸¹ÒÆğ,Ñ­»·¸´Î»
1420   3                              
1421   3                              switch(status_Step){
1422   4                              
1423   4                                      case 0:{ //¸´Î»200ms
1424   5                                      
1425   5                                              zigbPin_RESET = 0;
1426   5                                              zigbNwkAction_counter = 200;
1427   5                                              status_Step = 1;
1428   5                                      
1429   5                                      }break;
1430   4                                              
1431   4                                      case 1:{ //Ã¿6s¸´Î»Ò»´Î
1432   5                                      
1433   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1434   6                                              
1435   6                                                      zigbPin_RESET = 1;
1436   6                                                      zigbNwkAction_counter = 6000;
1437   6                                                      status_Step = 2;
1438   6                                              }
1439   5                                      
1440   5                                      }break;
1441   4                                      
1442   4                                      case 2:{
1443   5                                      
1444   5                                              if(!zigbNwkAction_counter){ //·Ç×èÈûµÈ´ı
1445   6                                              
1446   6                                                      status_Step = 0;
1447   6                                                      
1448   6      #if(DEBUG_LOGOUT_EN == 1)                               
1449   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1450   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1451   7                                                              sprintf(log_buf, "devHold time count remind: %02d s.\n", (int)devNwkHoldTime_Param.devHoldTime_coun
             -ter);
1452   7                                                              PrintString1_logOut(log_buf);
1453   7                                                      }
1454   6      #endif
1455   6                                              }
1456   5                                      
1457   5                                      }break;
1458   4                                      
1459   4                                      default:{
1460   5                                              
1461   5                                              status_Step = 0;
1462   5                                              
1463   5                                      }break;
1464   4                              }
1465   3                      }
1466   2      
1467   2              }else{
1468   2              
1469   2                      //¹ÒÆğÊ±¼ä½áÊø,Ö÷×´Ì¬»Ö¸´ÖÁÖØÁ¬£¬±¾µØ×´Ì¬»Ö¸´
1470   2                      status_Step = 0;
1471   2                      zigbPin_RESET = 1;
1472   2                      
1473   2                      devRunning_Status = status_nwkReconnect; //Ö±½Ó½«Ö÷×´Ì¬ÇĞ»»ÖÁÍøÂçÖØÁ¬,²»×ßstandbyÁ÷³Ì
1474   2                      devTips_status = status_Normal; //tips¸ü±ä
1475   2              
1476   2      #if(DEBUG_LOGOUT_EN == 1)                               
1477   2                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1478   3                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1479   3                              sprintf(log_buf, "devHold stop.\n");
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 26  

1480   3                              PrintString1_logOut(log_buf);
1481   3                      }
1482   2      #endif  
1483   2              }
1484   1      }
1485          
1486          /*zigbee¼¯Èº¿ØÖÆÊı¾İ½âÎö*/
1487          static 
1488          void dataParing_scenarioCtrl(u8 datsFrame[]){
1489   1      
1490   1              u8 dataTX_temp = CTRLSECENARIO_RESPCMD_SPECIAL;
1491   1              
1492   1              colonyCtrlGet_statusLocalScene = datsFrame[0]; //±¾µØ³¡¾°¿ØÖÆÂÖÑ¯Öµ¸üĞÂ(³¡¾°¿ØÖÆ½öÀ´×ÔÓÚÊÖ»ú¿ØÖÆ)
1493   1              
1494   1              dataSendRemote_straightforward(0, ZIGB_ENDPOINT_CTRLSECENARIO, &dataTX_temp, 1); //³¡¾°¿ØÖÆÔ¶¶Ë»Ø¸´
1495   1              
1496   1      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED) //Ç¿ÖÆÉè±¸ÀàĞÍÎªºìÍâ×ª·¢Æ÷Ê±£¬³¡¾°´¥·¢¶ÔÓ¦ĞòºÅµÄºìÍâ¿ØÖÆ
                      if(infraredStatus_GET() == infraredSMStatus_free)infraredOpreatAct_remoteControlStart(datsFrame[0]); //¿Õ
             -ÏĞÌ¬ÏÂ£¬²Ù×÷¿ÉÓÃ£¬±ÜÃâ¹¦ÄÜÖØ¸´´¥·¢
                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER) //Ç¿ÖÆÉè±¸ÀàĞÍÎªÈÈË®Æ÷Ê±£¬°´¼ü×´Ì¬ËæÖ®¸üĞÂ
                      (datsFrame[0] == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKeepOpen):(heater_ActPara
             -m.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                      devHeater_actOpeartionExecute(heater_ActParam.heater_currentActMode); //¶¯×÷Ö´ĞĞ
                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)         
                      swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
                      swCommand_fromUsr.actMethod = relay_OnOff;
                       
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                      swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
                      swCommand_fromUsr.actMethod = relay_OnOff;      
              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                      swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
                      swCommand_fromUsr.actMethod = relay_OnOff;
                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                      swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
                      swCommand_fromUsr.actMethod = relay_OnOff;
                      
              #else
1520   1              swCommand_fromUsr.objRelay = datsFrame[0]; //¼ÌµçÆ÷ÏìÓ¦¼´¿É
1521   1              swCommand_fromUsr.actMethod = relay_OnOff;
1522   1              
1523   1              if((SWITCH_TYPE == SWITCH_TYPE_CURTAIN) && //¿ª¹ØÀàĞÍÎª´°Á±ÇÒ¿ØÖÆ×´Ì¬Îª·ÇÍ£Ö¹ÇÒ¹ìµÀÊ±¼ä¿ÉÓÃÊ±£¬½ûÖ¹´¥·¢»¥
             -¿Ø
1524   1                 (swCommand_fromUsr.objRelay != 2) &&
1525   1                 (curtainAct_Param.act_period)){
1526   2                      
1527   2                              specialFlg_curtainEachctrlEn = 0; 
1528   2                      }
1529   1              
1530   1      #endif
1531   1              
1532   1      #if(DEBUG_LOGOUT_EN == 1)
1533   1              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1534   2                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1535   2                      sprintf(log_buf, "cmdScenarioCtrl comming, statusData:%02X.\n", (int)datsFrame[0]);
1536   2                      PrintString1_logOut(log_buf);
1537   2              }                       
1538   1      #endif          
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 27  

1539   1      }
1540          
1541          /*zigbeeÏµÍ³½»»¥Êı¾İ½âÎö*/
1542          static 
1543          void dataParing_zigbSysCtrl(u8 datsFrame[]){
1544   1      
1545   1              /*>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<*/
1546   1              /*----------------------------------------------*/
1547   1              /*  frame_CMD   |       frame_dataLen|  frame_data      |
1548   1              /*----------------------------------------------*/
1549   1              /*      1byte           |       1byte            |      < 256byte       |       
1550   1              /*----------------------------------------------*/
1551   1              
1552   1              frame_zigbSysCtrl xdata dats = {0};
1553   1              
1554   1              dats.command = datsFrame[0];
1555   1              memcpy(dats.dats, &datsFrame[2], datsFrame[1]);
1556   1              dats.datsLen = datsFrame[1];
1557   1              
1558   1              switch(dats.command){
1559   2              
1560   2                      case ZIGB_SYSCMD_NWKOPEN:{ //ÍøÂç¿ª·Å
1561   3                              
1562   3                              bit resultSet = 0;
1563   3                              
1564   3                              resultSet = ZigB_nwkOpen(1, dats.dats[0]); //¹¦ÄÜ´¥·¢
1565   3                              tips_statusChangeToZigbNwkOpen(dats.dats[0]); //tips´¥·¢
1566   3                              
1567   3      #if(DEBUG_LOGOUT_EN == 1)
1568   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1569   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1570   4                                      sprintf(log_buf, "master cmdComing:nwkOpen:%02ds.\n", (int)dats.dats[0]);
1571   4                                      PrintString1_logOut(log_buf);
1572   4                              }                       
1573   3      #endif          
1574   3                              
1575   3                      }break;
1576   2                      
1577   2                      case ZIGB_SYSCMD_TIMESET:{ //ÏµÍ³Ê±¼äÉè¶¨
1578   3                      
1579   3                              bit resultSet = 0;
1580   3                              bit timeZoneAdjust_needIF = 0;
1581   3                              u32 time_Temp = 0UL;
1582   3                              
1583   3                              time_Temp |= (u32)dats.dats[0] << 0;
1584   3                              time_Temp |= (u32)dats.dats[1] << 8;
1585   3                              time_Temp |= (u32)dats.dats[2] << 16;
1586   3                              time_Temp |= (u32)dats.dats[3] << 24;
1587   3                              if((sysTimeZone_H != dats.dats[4]) || (sysTimeZone_M != dats.dats[5])){ //Ê±ÇøÍ¬²½
1588   4                              
1589   4                                      sysTimeZone_H = dats.dats[4];
1590   4                                      sysTimeZone_M = dats.dats[5];
1591   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1592   4                                      coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
1593   4                              }
1594   3                              
1595   3                              if(dats.dats[6])timeZoneAdjust_needIF = 1; //Ê±Çø²¹³¥Ê¹ÄÜÅĞ¶Ï
1596   3                              if(time_Temp > ZIGB_UTCTIME_START)resultSet = zigB_sysTimeSet(time_Temp - ZIGB_UTCTIME_START, timeZoneA
             -djust_needIF); //zigbee ±¾µØÏµÍ³Ê±¼äÉèÖÃ<UTC¸º²¹³¥>
1597   3                              
1598   3      #if(DEBUG_LOGOUT_EN == 1)
1599   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 28  

1600   4                                      
1601   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1602   4                                      sprintf(log_buf, "master UTC coming:[0x%02X%02X%02X%02X].\n", (int)dats.dats[3], (int)dats.dats[2], (i
             -nt)dats.dats[1], (int)dats.dats[0]);
1603   4                                      PrintString1_logOut(log_buf);
1604   4                              }                       
1605   3      #endif  
1606   3                      }break;
1607   2                      
1608   2                      case ZIGB_SYSCMD_DEVHOLD:{ //ÍøÂç¹ÒÆğ£¨ÓÃ×÷Íø¹ØÇĞ»»£©
1609   3                              
1610   3      #if(DEBUG_LOGOUT_EN == 1)
1611   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1612   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1613   4                                      sprintf(log_buf, "node cmdComing:devNwk hold.\n");
1614   4                                      PrintString1_logOut(log_buf);
1615   4                              }                       
1616   3      #endif  
1617   3                              devStatusChangeTo_devHold(0); //Éè±¸ÍøÂç±»¶¯¹ÒÆğ,²»½øĞĞÍøÂçÍ¨Öª
1618   3                              
1619   3                      }break;
1620   2                      
1621   2                      case ZIGB_SYSCMD_DATATRANS_HOLD:{ //Í¨ĞÅÖ÷¶¯±ÜÕÏ£¬½«ÖÜÆÚĞÔÍ¨ĞÅ¹ÒÆğ
1622   3                              
1623   3      #if(DEBUG_LOGOUT_EN == 1)
1624   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1625   4                                      
1626   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1627   4                                      sprintf(log_buf, "master cmd: dtPeriod hold, time:%d.\n", (int)dats.dats[0]);
1628   4                                      PrintString1_logOut(log_buf);
1629   4                              }                       
1630   3      #endif  
1631   3                              if(!heartBeatHang_timeCnt && !colonyCtrlGetHang_timeCnt){ //ÓĞĞ§ÖÜÆÚÄÚ£¬¸¨Öú²¹³ä¹ã²¥Ò»´Î£¬·ÀÖ¹ÆäËû½ÚµãÃ
             -»ÊÕµ½
1632   4                                      
1633   4      //                              PrintString1_logOut("dtPeriod hold one more time.\n");
1634   4      //                              dataSendRemote_straightforward(0xffff, ZIGB_ENDPOINT_CTRLSYSZIGB, datsFrame, datsFrame[1] + 2);
1635   4                                      
1636   4                              }else{
1637   4                              
1638   4      //#if(DEBUG_LOGOUT_EN == 1)
1639   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1640   4      //                      
1641   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1642   4      //                                      sprintf(log_buf, "dtPeriod holdAdd err, parm1: %d, parm2: %d.\n", (int)heartBeatHang_timeCnt, (int)
             -colonyCtrlGetHang_timeCnt);
1643   4      //                                      PrintString1_logOut(log_buf);
1644   4      //                              }                       
1645   4      //#endif        
1646   4                              }
1647   3                              
1648   3                              periodDataTrans_momentHang(dats.dats[0]);  //±ÜÕÏÊ±¼ä¼ÓÔØ£¬¶¯×÷Ö´ĞĞ
1649   3                              
1650   3                      }break;
1651   2      
1652   2      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                              case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ¹ÄÜ*///¸üĞÂ¼¯ÈºĞÅÏ¢²¢¶¯×÷
                              
                                      /*>>>>>>>>>>>>>>>>>>>frame_data reference<<<<<<<<<<<<<<<*/
                                      /*------------------------------------------------------*/
                                      /*  frame_data[0]                       |       frame_data[1...3]               |
                                      /*------------------------------------------------------*/
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 29  

                                      /*      ×î½üÒ»´Î³¡¾°¿ØÖÆ×´Ì¬Öµ  |       ×î½üÒ»´Î»¥¿Ø¸üĞÂ×´Ì¬Öµ  |
                                      /*------------------------------------------------------*/
                                      
                                      u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
                                      
              //#if(DEBUG_LOGOUT_EN == 1)
              //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
              //                      
              //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                      sprintf(log_buf, "curRealy_Val:%02X, dataQuery result:%02X %02X %02X %02X.\n",
              //                                                                       (int)status_Relay,
              //                                                                       (int)dats.dats[0],
              //                                                                       (int)dats.dats[1],
              //                                                                       (int)dats.dats[2],
              //                                                                       (int)dats.dats[3]);
              //                                      PrintString1_logOut(log_buf);
              //                              }                       
              //#endif                
                                      if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ scene detect from poling.\n");
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              
                                              //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              colonyCtrlGet_statusLocalScene = dats.dats[0];
                                              
                                              if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
                                              }
                                      }
                                      
                                      if(memcmp(&dats.dats[1], colonyCtrlGet_statusLocalEaCtrl, clusterNum_usr)){ //»¥¿Ø×´Ì¬ÖµÖµÂÖÑ¯¸üĞÂ
                                              
                                              u8 idata loop;
                                              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "differ eachCtrl detect from poling, currentVal is: %02X %02X %02X.\n", (int)colonyC
             -trlGet_statusLocalEaCtrl[0],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[1],
                                                                                                                                                                                                                                       (int)colonyCtrlGet_statusLocalEaCtrl[2]);
                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif
                                              //ÉÏÒ»´Î»¥¿ØÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
                                              memcpy(colonyCtrlGet_statusLocalEaCtrl, &dats.dats[1], clusterNum_usr);
                                              
                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //ÑÚÂëÅĞ¶Ï²Ù×÷Î»£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
                                              
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_ON)statusRelay_temp |= (
             -1 << loop);
                                                      if(colonyCtrlGet_statusLocalEaCtrl[loop] == STATUSLOCALEACTRL_VALMASKRESERVE_OFF)statusRelay_temp &= 
             -~(1 << loop);
                                                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 30  

                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                      swCommand_fromUsr.objRelay = statusRelay_temp;
                                              }
                                      }
                                      
                              }break;
              #else /*ºêÅĞÖĞ*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1725   2                      case ZIGB_SYSCMD_COLONYPARAM_REQPERIOD:{ /*ºêÊ§ÄÜ*///½ö½ÓÊÕ³¡¾°¿ØÖÆĞÅÏ¢²¢¶¯×÷
1726   3                      
1727   3                              u8 idata statusRelay_temp = status_Relay; //¿ª¹Ø¶¯×÷Ö´ĞĞ»º´æ
1728   3                              
1729   3                              if(dats.dats[0] != colonyCtrlGet_statusLocalScene){ //³¡¾°×´Ì¬ÖµÂÖÑ¯¸üĞÂ
1730   4                              
1731   4      #if(DEBUG_LOGOUT_EN == 1)
1732   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1733   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1734   5                                              sprintf(log_buf, "differ scene detect from poling.\n");
1735   5                                              PrintString1_logOut(log_buf);
1736   5                                      }                       
1737   4      #endif  
1738   4                                      
1739   4                                      //ÉÏÒ»´Î³¡¾°¿ØÖÆÈôÃ»ÓĞÊÕµ½£¬Ôò½øĞĞ²¹³¥²Ù×÷
1740   4                                      colonyCtrlGet_statusLocalScene = dats.dats[0];
1741   4                                      
1742   4                                      if(colonyCtrlGet_statusLocalScene <= 0x07){ //3bitÒÔÄÚ²Ù×÷ÎªÓĞĞ§Öµ£¬±ãÓÚ³õÊ¼»¯²Ù×÷Å×ÆúÎŞĞ§Öµ
1743   5                                      
1744   5                                              swCommand_fromUsr.actMethod = relay_OnOff;
1745   5                                              swCommand_fromUsr.objRelay = colonyCtrlGet_statusLocalScene;
1746   5                                      }
1747   4                              }
1748   3                              
1749   3                      }break;
1750   2      #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
1751   2                      default:break;
1752   2              }
1753   1      }
1754          
1755          /*zigbee³£¹æ¿ØÖÆ×ª·¢Êı¾İ½âÎö*/
1756          static 
1757          void dataParing_Nomal(u8 datsParam[], u16 nwkAddr_from, u8 port_from){
1758   1              
1759   1      #define dataLen_dataParingNomal (128 + 25)
1760   1              u8 xdata paramTX_temp[dataLen_dataParingNomal] = {0};
1761   1              
1762   1              bit dataFromRemote_IF = 0;      //ÊÇ·ñÎª·şÎñÆ÷¶ËÊı¾İ±êÖ¾
1763   1      
1764   1              /*²úÆ·¶ş¼¶Ğ­ÒéºË¶Ô_³£¹æ¿ØÖÆ*///¿ØÖÆÏÂ´ï
1765   1              switch(datsParam[0]){
1766   2              
1767   2                      /*Ô¶¶Ë*/
1768   2                      case ZIGB_FRAMEHEAD_CTRLREMOTE:{
1769   3                              
1770   3                              dataFromRemote_IF = 1;
1771   3                              
1772   3                              memcpy(MAC_ID_DST, &datsParam[7], 6);
1773   3                              memcpy(&datsParam[1], &datsParam[13], datsRcv_ZIGB.rcvDats[20] - 13);
1774   3                      }
1775   2                      
1776   2                      /*±¾µØ*/
1777   2                      case ZIGB_FRAMEHEAD_CTRLLOCAL:{
1778   3                              
1779   3                              bit frameCheck_Done = 0; //Êı¾İ¼ì²âºÏ¸ñ±êÖ¾
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 31  

1780   3                              
1781   3                              {
1782   4                                      bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
1783   4                                      bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
1784   4                                      
1785   4                                      if(datsParam[4] == frame_Check(&datsParam[5], 28))frameCodeCheck_PASS = 1; //Ğ£ÑéÂë¼ì²â
1786   4                                      if(!memcmp(&datsParam[5], &MAC_ID[1], 5))frameMacCheck_PASS = 1; //MAC¼ì²â
1787   4      
1788   4                                      if(datsParam[3] == FRAME_MtoZIGBCMD_cmdConfigSearch){ //ÌØÊâÖ¸Áî²»×öMAC¼ì²â
1789   5                                      
1790   5                                              frameMacCheck_PASS = 1;
1791   5                                              
1792   5                                      }else
1793   4                                      if((datsParam[3] == FRAME_MtoZIGBCMD_cmdCfg_swTim) || //ÌØÊâÖ¸Áî²»×öĞ£ÑéÂë¼ì²â
1794   4                                         (datsParam[3] == FRAME_MtoZIGBCMD_cmdswTimQuery)){
1795   5                                         
1796   5                                              frameCodeCheck_PASS = 1;
1797   5                                      }
1798   4                                         
1799   4                                      if(frameCodeCheck_PASS && frameCodeCheck_PASS)frameCheck_Done = 1;
1800   4                              }
1801   3                                 
1802   3                              if(frameCheck_Done){ //Ö¡¼ì²éÍ¨¹ı£¬¿ªÊ¼½âÎö¡¢¶¯×÷¼°ÏìÓ¦
1803   4                                      
1804   4                                      bit respond_IF          = 0;    //ÊÇ·ñ»Ø¸´
1805   4                                      bit specialCmd_IF       = 0;    //ÊÇ·ñÎªÌØÊâÖ¸Áî£¨ÌØÊâÖ¸ÁîÕ¼ÓÃ¿ª¹ØÀàĞÍÄÇÒ»¸ö×Ö½Ú£©
1806   4                                      
1807   4                                      beeps_usrActive(3, 50, 1);
1808   4                                      
1809   4      #if(DEBUG_LOGOUT_EN == 1)
1810   4                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1811   5                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1812   5                                              sprintf(log_buf, "cmdComing:%02X.\n", (int)datsParam[3]);
1813   5                                              PrintString1_logOut(log_buf);
1814   5                                      }                       
1815   4      #endif          
1816   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_dataParingNomal);
1817   4                              
1818   4                                      switch(datsParam[3]){
1819   5                                      
1820   5                                              case FRAME_MtoZIGBCMD_cmdConfigSearch:{
1821   6                                                      
1822   6                                                      if(!deviceLock_flag){ //Éè±¸ÊÇ·ñÉÏËø
1823   7                                                              
1824   7                                                              tips_statusChangeToNormal();
1825   7                                                              if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //´¥ÃşÊÍ·Å¼ÆÊ±Ê§ÄÜ
1826   7                                                              
1827   7                                                              paramTX_temp[11] = status_Relay; //¿ª¹Ø×´Ì¬»Ø¸´Ìî×°
1828   7                                                              paramTX_temp[12] = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
1829   7                                                              
1830   7                                                              paramTX_temp[14] = (u8)((dev_currentPanid & 0xFF00) >> 8); //ÍøÂçPANID»Ø¸´Ìî×°
1831   7                                                              paramTX_temp[15] = (u8)((dev_currentPanid & 0x00FF) >> 0);
1832   7                                                              
1833   7                                                              sysTimeZone_H = datsParam[12];
1834   7                                                              sysTimeZone_M = datsParam[13];
1835   7                                                              coverEEPROM_write_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
1836   7                                                              coverEEPROM_write_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
1837   7                                                              
1838   7                                                              periodDataTrans_momentHang(10); //½ÓÊÕµ½ËÑË÷Âëºó ½«ÆäËûÖÜÆÚÖ÷¶¯·¢ÂëÍ¨ĞÅ½øĞĞ±ÜÈÃ ÎªËÑË÷ÏìÓ¦ÇåÂ· 10s
1839   7                                                      
1840   7                                                              respond_IF              = 1; //ÏìÓ¦»Ø¸´
1841   7                                                              specialCmd_IF   = 0;
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 32  

1842   7                                                              
1843   7                                                      }else{
1844   7                                                      
1845   7                                                              
1846   7                                                      }
1847   6                                                      
1848   6                                              }break;
1849   5                                              
1850   5                                              case FRAME_MtoZIGBCMD_cmdControl:{
1851   6      
1852   6                                                      paramTX_temp[11] = 0;
1853   6                                                      paramTX_temp[11] |= (datsParam[11] & 0x07);     //×´Ì¬Î»Ìî×°
1854   6                                                      if(             (datsParam[11] & 0x01) != (status_Relay & 0x01))paramTX_temp[11] |= 0x20; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ»>µ
             -ÚÒ»Î»
1855   6                                                      else if((datsParam[11] & 0x02) != (status_Relay & 0x02))paramTX_temp[11] |= 0x40; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚ¶şÎ»
1856   6                                                      else if((datsParam[11] & 0x04) != (status_Relay & 0x04))paramTX_temp[11] |= 0x80; //¸ü¸ÄÖµÌî×°<¸ßÈıÎ
             -»>µÚÈıÎ»
1857   6                                                      
1858   6                                                      swCommand_fromUsr.objRelay = datsParam[11];
1859   6                                                      swCommand_fromUsr.actMethod = relay_OnOff;
1860   6                                                      
1861   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                                                              paramTX_temp[11] = datsParam[11]; //µ÷¹âÖ±½Ó»ØÁÁ¶ÈÖµ£¬²»´ø¸ßÎ»
                                                              EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
                                                              (swCommand_fromUsr.objRelay == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKeepOp
             -en):(heater_ActParam.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                                                              devHeater_actOpeartionExecute(heater_ActParam.heater_currentActMode); //¶¯×÷Ö´ĞĞ
                                                              
              #else
1873   6                                                      if(SWITCH_TYPE == SWITCH_TYPE_SWBIT1 || SWITCH_TYPE == SWITCH_TYPE_SWBIT2 || SWITCH_TYPE == SWITCH_T
             -YPE_SWBIT3)EACHCTRL_realesFLG |= (status_Relay ^ swCommand_fromUsr.objRelay); //ÓĞĞ§»¥¿Ø´¥·¢
1874   6                                                      else
1875   6                                                      if(SWITCH_TYPE == SWITCH_TYPE_CURTAIN)EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
1876   6                                                      
1877   6      #endif
1878   6      
1879   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1880   6                                                      specialCmd_IF   = 0;                                                    
1881   6                                                      
1882   6                                              }break;
1883   5                                                      
1884   5                                              case FRAME_MtoZIGBCMD_cmdQuery:{
1885   6                                              
1886   6                                                      paramTX_temp[11] = status_Relay & 0x07;
1887   6                                                      paramTX_temp[12] = 0;
1888   6                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1889   6                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1890   6                                                      
1891   6                                                      respond_IF              = 1; //ÏìÓ¦»Ø¸´
1892   6                                                      specialCmd_IF   = 0;    
1893   6                                              
1894   6                                              }break;
1895   5                                                      
1896   5                                              case FRAME_MtoZIGBCMD_cmdInterface:{}break;
1897   5                                                      
1898   5                                              case FRAME_MtoZIGBCMD_cmdReset:{}break;
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 33  

1899   5                                                      
1900   5                                              case FRAME_MtoZIGBCMD_cmdDevLockON:{
1901   6                                              
1902   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1903   6                                                      {
1904   7                                                              u8 deviceLock_IF = 1;
1905   7                                                              
1906   7                                                              deviceLock_flag  = 1;
1907   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1908   7                                                      }               
1909   6                                                      
1910   6                                              }break;
1911   5                                                      
1912   5                                              case FRAME_MtoZIGBCMD_cmdDevLockOFF:{
1913   6                                              
1914   6                                                      //Êı¾İ´¦Àí¼°¶¯×÷ÏìÓ¦
1915   6                                                      {
1916   7                                                              u8 deviceLock_IF = 0;
1917   7                                                              
1918   7                                                              deviceLock_flag  = 0;
1919   7                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1);
1920   7                                                      }       
1921   6                                              
1922   6                                              }break;
1923   5                                                      
1924   5                                              case FRAME_MtoZIGBCMD_cmdswTimQuery:{
1925   6                                              
1926   6                                                      //·ÖÀà»Ø¸´
1927   6                                                      switch(datsParam[13]){ //×ÓÃüÁî½âÎö
1928   7                                                      
1929   7                                                              case 0: /*ÉÏÎ»»úÔÚ¶¨Ê±µÄÊ±ºò¸ø0£¬´ıĞ­ÉÌ*/
1930   7                                                              case cmdConfigTim_normalSwConfig:{
1931   8                                                              
1932   8                                                                      u8 loop = 0;
1933   8                                                              
1934   8                                                                      //Êı¾İÏìÓ¦¼°»Ø¸´
1935   8                                                                      EEPROM_read_n(EEPROM_ADDR_swTimeTab, &paramTX_temp[14], 12);    //¶¨Ê±±í»Ø¸´Ìî×°
1936   8                                                                      
1937   8                                                                      //»Ø¸´Êı¾İ¶ş´Î´¦Àí£¨Õë¶ÔÒ»´ÎĞÔ¶¨Ê±Êı¾İ£©
1938   8                                                                      for(loop = 0; loop < 4; loop ++){
1939   9                                                                      
1940   9                                                                              if(swTim_oneShoot_FLAG & (1 << loop)){
1941  10                                                                                      
1942  10                                                                                      paramTX_temp[14 + loop * 3] &= 0x80;
1943  10                                                                              }
1944   9                                                                      }
1945   8                                                                                      
1946   8                                                                      specialCmd_IF = 1; //ÌØÊâÕ¼Î»Ö¸Áî
1947   8                                                                      
1948   8      #if(DEBUG_LOGOUT_EN == 1)
1949   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
1950   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
1951   9                                                                              sprintf(log_buf, ">>>>>>>>timer_tab3 respond:[%02X-%02X-%02X].\n", (int)paramTX_temp[20], (int)pa
             -ramTX_temp[21], (int)paramTX_temp[22]);
1952   9                                                                              PrintString1_logOut(log_buf);
1953   9                                                                      }                       
1954   8      #endif  
1955   8                                                                      
1956   8                                                              }break;
1957   7                                                              
1958   7                                                              case cmdConfigTim_onoffDelaySwConfig:{
1959   8                                                              
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 34  

1960   8                                                                      if(!delayCnt_onoff)paramTX_temp[14] = 0;
1961   8                                                                      else paramTX_temp[14] = delayPeriod_onoff - (u8)(delayCnt_onoff / 60);
1962   8                                                                      paramTX_temp[15] = delayUp_act;
1963   8                                                                      
1964   8                                                              }break;
1965   7                                                              
1966   7                                                              case cmdConfigTim_closeLoopSwConfig:{
1967   8                                                              
1968   8                                                                      paramTX_temp[14] = delayPeriod_closeLoop;
1969   8                                                                      
1970   8                                                              }break;
1971   7                                                              
1972   7                                                              case cmdConfigTim_nightModeSwConfig:{  
1973   8                                                              
1974   8                                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &paramTX_temp[14], 6);      //Ò¹¼äÄ£Ê½¶¨Ê±±í»Ø¸´Ìî×°
1975   8                                                                      
1976   8                                                                      (deviceLock_flag)?(paramTX_temp[12] |= 0x01):(paramTX_temp[12] &= ~0x01);
1977   8                                                                      (ifNightMode_sw_running_FLAG)?(paramTX_temp[12] |= 0x02):(paramTX_temp[12] &= ~0x02);
1978   8                                                                      
1979   8                                                              }break;
1980   7                                                              
1981   7                                                              default:break;
1982   7                                                      }
1983   6                                                      
1984   6                                                      paramTX_temp[13] = datsParam[13]; //¶¨Ê±×ÓÃüÁîÍ¬²½»Ø¸´
1985   6                                                      
1986   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
1987   6                                                      
1988   6                                              }break;
1989   5                                                      
1990   5                                              case FRAME_MtoZIGBCMD_cmdConfigAP:{}break;
1991   5                                                      
1992   5                                              case FRAME_MtoZIGBCMD_cmdBeepsON:{ //Ò¹¼äÄ£Ê½¹Ø
1993   6                                              
1994   6                                                      u8 datsTemp = 0;
1995   6                                                      
1996   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1997   6                                                      datsTemp &= ~0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,È¡ÏûÍ·×Ö½ÚÈ«Õ¼Âú,Ê§ÄÜÈ«Ìì
1998   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
1999   6                                                      
2000   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2001   6                                                      
2002   6                                              }break;
2003   5                                                      
2004   5                                              case FRAME_MtoZIGBCMD_cmdBeepsOFF:{ //Ò¹¼äÄ£Ê½¿ª
2005   6                                              
2006   6                                                      u8 datsTemp = 0;
2007   6                                                      
2008   6                                                      EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);
2009   6                                                      datsTemp |= 0x7f; //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢,Í·×Ö½ÚÈ«Õ¼Âú,Ç¿ÖÆÈ«Ìì
2010   6                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsTemp, 1);        
2011   6                                                      
2012   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2013   6                                                      
2014   6                                              }break;
2015   5                                                      
2016   5                                              case FRAME_MtoZIGBCMD_cmdftRecoverRQ:{
2017   6                                              
2018   6                                                      respond_IF = 1;
2019   6                                                      
2020   6                                              }break;
2021   5                                                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 35  

2022   5                                              case FRAME_MtoZIGBCMD_cmdRecoverFactory:{
2023   6                                              
2024   6                                                      Factory_recover();
2025   6                                              
2026   6                                              }break;
2027   5                                                      
2028   5                                              case FRAME_MtoZIGBCMD_cmdCfg_swTim:{
2029   6                                                      
2030   6                                                      u8 loop = 0;
2031   6                                                      
2032   6                                                      switch(datsParam[13]){ //¶¨Ê±Êı¾İ´¦Àí¼°¸üĞÂ,·ÖÀà´¦Àí
2033   7                                                      
2034   7                                                              case cmdConfigTim_normalSwConfig:{      /*ÆÕÍ¨¶¨Ê±*/
2035   8                                                                      
2036   8                                                                      for(loop = 0; loop < 4; loop ++){
2037   9                                                                      
2038   9                                                                              if(datsParam[14 + loop * 3] == 0x80){   /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±»´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞ
             -Ô
2039  10                                                                              
2040  10                                                                                      swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
2041  10                                                                                      datsParam[14 + loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½øĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´
             -ÎÖ´ĞĞÍê±ÏºóÇå³ı
2042  10                                                                                      
2043  10                                                                              }else{
2044  10                                                                              
2045  10                                                                                      swTim_oneShoot_FLAG &= ~(1 << loop);//Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
2046  10                                                                              }
2047   9                                                                      }
2048   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, &datsParam[14], 4 * 3);      //¶¨Ê±±í
2049   8                                                                      itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2050   8      #if(DEBUG_LOGOUT_EN == 1)
2051   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2052   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2053   9                                                                              sprintf(log_buf, ">>>>>>>>timer_tab3 has been set:[%02X-%02X-%02X].\n", (int)datsParam[20], (int)
             -datsParam[21], (int)datsParam[22]);
2054   9                                                                              PrintString1_logOut(log_buf);
2055   9                                                                      }                       
2056   8      #endif  
2057   8                                                              
2058   8                                                              }break;
2059   7                                                              
2060   7                                                              case cmdConfigTim_onoffDelaySwConfig:{  /*¿ª¹ØÑÓÊ±*/
2061   8                                                              
2062   8                                                                      if(datsParam[14]){
2063   9                                                                      
2064   9                                                                              ifDelay_sw_running_FLAG |= (1 << 1);
2065   9                                                                              delayPeriod_onoff               = datsParam[14];
2066   9                                                                              
2067   9                                                                              delayUp_act                             = datsParam[15];
2068   9                                                                              
2069   9                                                                              delayCnt_onoff                  = 0;
2070   9                                                                              
2071   9                                                                      }else{
2072   9                                                                      
2073   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 1);
2074   9                                                                              delayPeriod_onoff               = 0;
2075   9                                                                              delayCnt_onoff                  = 0;
2076   9                                                                      }
2077   8                                                                      
2078   8                                                              }break;
2079   7                                                              
2080   7                                                              case cmdConfigTim_closeLoopSwConfig:{   /*ÂÌÉ«¹¦ÄÜ(×Ô¶¯Ñ­»·¹Ø±Õ)*/
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 36  

2081   8                                                              
2082   8                                                                      if(datsParam[14]){
2083   9                                                                      
2084   9                                                                              ifDelay_sw_running_FLAG |= (1 << 0);
2085   9                                                                              delayPeriod_closeLoop   = datsParam[14];
2086   9                                                                              delayCnt_closeLoop              = 0;
2087   9                                                                              
2088   9                                                                      }else{
2089   9                                                                      
2090   9                                                                              ifDelay_sw_running_FLAG &= ~(1 << 0);
2091   9                                                                              delayPeriod_closeLoop   = 0;
2092   9                                                                              delayCnt_closeLoop              = 0;
2093   9                                                                      }
2094   8                                                                      
2095   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1);
2096   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2097   8                                                                      
2098   8                                                              }break;         
2099   7      
2100   7                                                              case cmdConfigTim_nightModeSwConfig:{  /*Ò¹¼äÄ£Ê½ ±³¹â°ëÁÁ*/
2101   8                                                              
2102   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, &datsParam[14], 6);   //Ò¹¼äÄ£Ê½¶¨Ê±±í´æ´¢
2103   8                                                                      itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2104   8                                                                      
2105   8                                                              }break;
2106   7                                                              
2107   7                                                              default:break;
2108   7                                                      }
2109   6                                                      
2110   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2111   6                                                      
2112   6                                              }break;
2113   5                                              
2114   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ctrlEachO:{
2115   6                                              
2116   6                                                      u8 loop = 0;
2117   6                                                      u8 effective_oprate = datsParam[12]; //ÓĞĞ§²Ù×÷Êı¾İÕ¼Î»»ñÈ¡
2118   6                                                      
2119   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2120   7                                                      
2121   7                                                              if((effective_oprate >> loop) & 0x01){ //ÓĞĞ§Êı¾İÅĞ¶Ï
2122   8                                                              
2123   8                                                                      coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &datsParam[14 + loop], 1); //¶ÔÓ¦Èı×é»¥¿
             -ØºÅ»ñÈ¡²¢½øĞĞ±¾µØ´æ´¢
2124   8                                                                      CTRLEATHER_PORT[loop] = datsParam[14 + loop]; //»º´æ¸üĞÂ
2125   8                                                                      reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2126   8                                                              }
2127   7                                                      }
2128   6                                                      
2129   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2130   6                                              
2131   6                                              }break;
2132   5                                              
2133   5                                              case FRAME_MtoZIGBCMD_cmdQue_ctrlEachO:{
2134   6                                              
2135   6                                                      u8 loop = 0;
2136   6                                                      
2137   6                                                      for(loop = 0; loop < clusterNum_usr; loop ++){
2138   7                                                      
2139   7                                                              EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther + loop, &paramTX_temp[14 + loop], 1);
2140   7                                                      }
2141   6                                                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 37  

2142   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2143   6                                              
2144   6                                              }break;
2145   5                                                      
2146   5                                              case FRAME_MtoZIGBCMD_cmdCfg_ledBackSet:{
2147   6                                              
2148   6                                                      memcpy(&devBackgroundLight_param, &datsParam[14], sizeof(bkLightColorInsert_paramAttr)); //»º´æ¸üĞÂ
2149   6                                                      coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, (u8*)&devBackgroundLight_param, sizeof(bkLightColor
             -Insert_paramAttr)); //±¾µØ´æ´¢¸üĞÂ
2150   6                                                      
2151   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2152   6                                              
2153   6                                              }break;
2154   5                                              
2155   5                                              case FRAME_MtoZIGBCMD_cmdQue_ledBackSet:{
2156   6                                              
2157   6                                                      EEPROM_read_n(EEPROM_ADDR_ledSWBackGround, &datsParam[14], sizeof(bkLightColorInsert_paramAttr)); //
             -±¾µØ´æ´¢Öµ¶ÁÈ¡
2158   6                                                      
2159   6                                                      respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2160   6                                              
2161   6                                              }break;
2162   5                                              
2163   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioSet:{
2164   5      //                                              
2165   5      //                                              u16 xdata panid_Temp = ZigB_getPanIDCurrent(); //ÅäÖÃ»Ø¸´Ìí¼ÓPANID
2166   5      //                                      
2167   5      //                                              bit opt_result = swScenario_oprateSave(datsParam[12], datsParam[14]);
2168   5      //                                              if(opt_result)paramTX_temp[12] = 0;
2169   5      //                                              else paramTX_temp[12] = 0x0A; //³¡¾°ÉèÖÃÎŞĞ§»Ø¸´£¨³¡¾°´æ´¢ÒÑÂú£©
2170   5      //                                              
2171   5      //                                              paramTX_temp[14] = (u8)((panid_Temp & 0xFF00) >> 8);
2172   5      //                                              paramTX_temp[15] = (u8)((panid_Temp & 0x00FF) >> 0);
2173   5      //                                              
2174   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ£¨±¾µØ´æ´¢ÒÑ±»Õ¼Âú£©
2175   5      //                                      
2176   5      //                                      }break;
2177   5      //                                      
2178   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioCtl:{
2179   5      //                                              
2180   5      //                                              u8 sw_Act = swScenario_oprateCheck(datsParam[12]);
2181   5      //                                              if(sw_Act != SW_SCENCRAIO_ACTINVALID){ //ÈôË÷Òıµ½ÓĞĞ§²Ù×÷Î»
2182   5      //                                                      
2183   5      //                                                      swCommand_fromUsr.actMethod = relay_OnOff;
2184   5      //                                                      swCommand_fromUsr.objRelay = sw_Act;
2185   5      //                                              
2186   5      //                                                      paramTX_temp[12] = 0;
2187   5      //                                                      
2188   5      //                                              }else{ //ÈôÎŞ·¨Ë÷Òıµ½ÓĞĞ§²Ù×÷Î»
2189   5      //                                              
2190   5      //                                                      paramTX_temp[12] = 0x0A; //³¡¾°¿ØÖÆÎŞĞ§»Ø¸´£¨³¡¾°ºÅÎŞ·¨±»Ë÷Òı£©
2191   5      //                                              }
2192   5      //                                      
2193   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2194   5      //                                      
2195   5      //                                      }break;
2196   5      //                                      
2197   5      //                                      case FRAME_MtoZIGBCMD_cmdCfg_scenarioDel:{
2198   5      //                                              
2199   5      //                                              swScenario_oprateDele(datsParam[12]);
2200   5      //                                              paramTX_temp[12] = 0;
2201   5      //                                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 38  

2202   5      //                                              respond_IF = 1; //ÏìÓ¦»Ø¸´Ê¹ÄÜ
2203   5      //                                      
2204   5      //                                      }break;
2205   5                                              
2206   5                                              default:{
2207   6                                              
2208   6                                                      respond_IF = 0;
2209   6                                              
2210   6                                              }break;
2211   5                                      }
2212   4                                      
2213   4                                      /*»Ø¸´ÏìÓ¦*/
2214   4                                      if(respond_IF){ //Êı¾İ°ü»Ø¸´ÏìÓ¦¶¯×÷
2215   5                                      
2216   5                                              u8 datsTX_Len = 0;
2217   5                                              
2218   5                                              respond_IF = 0;
2219   5                                              
2220   5                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
2221   5                                                                                                                 paramTX_temp,
2222   5                                                                                                                 33,
2223   5                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
2224   5                                                                                                                 datsParam[3],
2225   5                                                                                                                 specialCmd_IF);
2226   5                                              
2227   5                                              heartBeatCount += 1; //ÑÓÊ±ĞÔĞ­µ÷ĞÄÌøÖÍºó 1s
2228   5                                              
2229   5                                              datsSend_request.nwkAddr = nwkAddr_from;
2230   5                                              datsSend_request.portPoint = port_from;
2231   5                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
2232   5                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
2233   5                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
2234   5                                              datsRcv_respond.datsTrans.datsLen = 0;
2235   5                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
2236   5                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 8; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆ
             -ÚÄÚ ·¢ 8 ´Î
2237   5                                              devRunning_Status = status_dataTransRequestDatsSend;
2238   5                                              
2239   5      //#if(DEBUG_LOGOUT_EN == 1)
2240   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2241   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2242   5      //                                              sprintf(log_buf, ">>>>>>>>standby dataTX_buf_tab3:[%02X-%02X-%02X].\n", (int)datsSend_request.dats
             -Trans.dats[20], (int)datsSend_request.datsTrans.dats[21], (int)datsSend_request.datsTrans.dats[22]);
2243   5      //                                              PrintString1_logOut(log_buf);
2244   5      //                                      }                       
2245   5      //#endif        
2246   5                                      }
2247   4                              }
2248   3                      }break;
2249   2                      
2250   2                      /*ĞÄÌø_Íø¹ØÔÚÏß*/
2251   2                      case ZIGB_FRAMEHEAD_HEARTBEAT:{
2252   3                      
2253   3                              
2254   3                              
2255   3                      }break;
2256   2                      
2257   2                      /*ĞÄÌø_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2258   2                      case ZIGB_FRAMEHEAD_HBOFFLINE:{
2259   3                      
2260   3                              
2261   3                              
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 39  

2262   3                      }break;
2263   2                      
2264   2      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) /*ºêÅĞÍ·*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2265   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÀëÏß*///internetÀëÏß£¬²»ÊÇzigbÍøÂçÀëÏß
2266   2                      case DTMODEKEEPACESS_FRAMEHEAD_OFFLINE:{
2267   3                              
2268   3                              periodDataTrans_momentHang(6); //internetÀëÏßÇé¿öÏÂ£¬ÖÜÆÚÍ¨Ñ¶¾ÍÃ»ÓÃÁË£¬Í¨ĞÅÆµ´ÎÏÂ½µµ½ 6s/´Î
2269   3      #if(DEBUG_LOGOUT_EN == 1)
2270   3                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2271   4                                      
2272   4                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2273   4                                      sprintf(log_buf, ">>>>>>>>internet offline.\n");
2274   4                                      PrintString1_logOut(log_buf);
2275   4                              }       
2276   3      #endif
2277   3                      } /*²»×öbreak*///internetÀëÏßÇé¿öÏÂ£¬Êı¾İ°ü»Ø·¢¸ø×ÓÉè±¸£¬·ÀÖ¹×ÓÉè±¸×öÎŞÒâÒåĞÄÌøÖØ·¢
2278   2                      
2279   2                      /*¶¨Ê±Ñ¯·Ã_Íø¹ØÔÚÏß*/
2280   2                      case DTMODEKEEPACESS_FRAMEHEAD_ONLINE:{
2281   3                      
2282   3                              stt_agingDataSet_bitHold code   agingCmd_Temp = {0};
2283   3                              stt_devOpreatDataPonit xdata    dev_dataPointTemp = {0};
2284   3                              
2285   3                              bit frameCodeCheck_PASS = 0; //Ğ£ÑéÂë¼ì²éÍ¨¹ı±êÖ¾
2286   3                              bit frameMacCheck_PASS  = 0; //macµØÖ·´ı¼ì²éÍ¨¹ı±êÖ¾
2287   3                              bit frameDataOnceReserve_PASS = 0; //µ±Ç°Êı¾İ°üµ¥´Î¿ÉÓÃ±êÖ¾
2288   3                              
2289   3                              static u8 dataTrans_oncePword = 0; //Êı¾İ´«Êäµ¥´Î¿ÉÓÃ¿ÚÁî -ÓÃÓÚÇø·Ö²Ù×÷½ØÖ¹/ÖØ·¢
2290   3                              
2291   3      //#if(DEBUG_LOGOUT_EN == 1)
2292   3      //                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2293   3      //                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2294   3      //                              sprintf(log_buf, "periodKeepAcess respondRcv, cmd[%02X], dataLen[%02d].\n", (int)datsParam[8], (int)
             -datsParam[1]);
2295   3      //                              PrintString1_logOut(log_buf);
2296   3      //                      }                       
2297   3      //#endif        
2298   3                              
2299   3                              if(datsParam[datsParam[1] - 1] == frame_Check(&datsParam[1], datsParam[1] - 2))frameCodeCheck_PASS = 1;
             - //Ğ£ÑéÂëĞ£Ñé
2300   3                              if(!memcmp(&datsParam[2], &MAC_ID[1], 5))frameMacCheck_PASS = 1; //MACµØÖ·Ğ£Ñé
2301   3                              
2302   3                              if(frameCodeCheck_PASS && frameMacCheck_PASS){ 
2303   4                      
2304   4                                      memcpy(&dev_dataPointTemp, &datsParam[15], sizeof(stt_devOpreatDataPonit)); //Êı¾İ½á¹¹»¯
2305   4                                      
2306   4      //#if(DEBUG_LOGOUT_EN == 1)
2307   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2308   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2309   4      //                                      sprintf(log_buf, "agingCmd[%02X], swAging[%d], val[%02X].\n", (int)datsParam[8],
2310   4      //                                                                                                                                                                (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat, 
2311   4      //                                                                                                                                                                (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2312   4      //                                      PrintString1_logOut(log_buf);
2313   4      //                              }                       
2314   4      //#endif        
2315   4                              
2316   4                                      switch(datsParam[8]){ //Ö¡ÃüÁî
2317   5                                      
2318   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
2319   6                                                      
2320   6                                                      static bit local_ftyRecover_standbyFLG = 0; //»Ö¸´³ö³§ÉèÖÃ²Ù×÷Ô¤¶¯×÷±êÖ¾
2321   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 40  

                                                              static u8 local_infraredOpreat_ReserveNum = 1; //ºìÍâ²Ù×÷¿ÉÓÃ¿ÚÁîÖµ -±ÜÃâĞÅºÅ²»ºÃÊ±£¬Ê±Ğ§Î»ÖØ¸´´¥·¢º
             -ìÍâ²Ù×÷£¨Ã¿´Î²Ù×÷¶¼²úÉúĞÂµÄ¿ÚÁîÖµ£©
              #endif          
2324   6                                                      /*·ÇÊ±Ğ§ĞÔÃüÁîÅĞ¶Ï*///Êı¾İ²»Ò»ÖÂÊ±£¬¸üĞÂ»º´æºóÖ´ĞĞ¶¯×÷¼´¿É£¨·ÇÊ±Ğ§ÔòÃ¿´Î»ñÈ¡Êı¾İÊ±¶¼ÒªÓë±¾µØÊı¾İ×÷±È
             -½Ï£©
2325   6      //                                              { //ÆÕÍ¨¿ª¹Ø²Ù×÷£¬ÎŞĞèÊ±Ğ§
2326   6      //                                              
2327   6      //                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2328   6      //                                                      
2329   6      //                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2330   6      //                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2331   6      //                                                              
2332   6      //#if(DEBUG_LOGOUT_EN == 1)
2333   6      //                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2334   6      //                                                                      
2335   6      //                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2336   6      //                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x0
             -7, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2337   6      //                                                                      PrintString1_logOut(log_buf);
2338   6      //                                                              }                       
2339   6      //#endif        
2340   6      //                                                      }
2341   6      //                                              }
2342   6                                                      
2343   6      //                                              { //¿ª¹Ø¶¨Ê±²Ù×÷£¬ÎŞĞèÊ±Ğ§
2344   6      //                                              
2345   6      //                                                      timing_Dats xdata timDatsTemp_CalibrateTab[TIMEER_TABLENGTH] = {0};
2346   6      //                                                      
2347   6      //                                                      datsTiming_read_eeprom(timDatsTemp_CalibrateTab);
2348   6      //                                                      if(memcmp(timDatsTemp_CalibrateTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) * TIMEER
             -_TABLENGTH)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2349   6      //                                                      
2350   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) 
             -* TIMEER_TABLENGTH);
2351   6      //                                                      }
2352   6      //                                              }
2353   6                                                      
2354   6      //                                              { //ÂÌÉ«Ä£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2355   6      //                                              
2356   6      //                                                      if(delayPeriod_closeLoop != dev_dataPointTemp.devData_greenMode){
2357   6      //                                                      
2358   6      //                                                              
2359   6      //                                                      }
2360   6      //                                              }
2361   6                                                      
2362   6      //                                              { //Ò¹¼äÄ£Ê½²Ù×÷£¬ÎŞĞèÊ±Ğ§
2363   6      //                                                      
2364   6      //                                                      timing_Dats xdata nightDatsTemp_CalibrateTab[2];
2365   6      //                                                      
2366   6      //                                                      datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
2367   6      //                                                      if(memcmp(nightDatsTemp_CalibrateTab, dev_dataPointTemp.devData_nightMode, sizeof(timing_Dats) * 
             -2)){ //Êı¾İ²»Ò»ÖÂÔò¸üĞÂeeprom
2368   6      //                                                      
2369   6      //                                                              coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dev_dataPointTemp.devData_nightMode, sizeof(ti
             -ming_Dats) * 2);
2370   6      //                                                      }       
2371   6      //                                              }
2372   6                                                      
2373   6      //                                              { //±³¹âµÆÉèÖÃ²Ù×÷£¬ÎŞĞèÊ±Ğ§
2374   6      //                                              
2375   6      //                                              }
2376   6                                                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 41  

2377   6                                                      /*Ê±Ğ§ĞÔÃüÁîÅĞ¶Ï*///¸üĞÂÊ±Ğ§²Ù×÷ºó£¬Çå¿ÕÊ±Ğ§²Ù×÷Î»£¨Ê±Ğ§ÊÇÎªÁË½ÚÔ¼ĞÔÄÜ²»ÓÃÃ¿´Î²éÑ¯Ê±¶¼×÷±È½Ï£©
2378   6                                                      if(memcmp(&agingCmd_Temp, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_agingDataSet_
             -bitHold))){ //Ò»µ©ÓĞÊ±Ğ§Ö¸ÁîÎ»ÖÃ 1 £¬Ö»ÒªÓĞÊ±Ğ§Õ¼Î»£¬¾ÍÔ­Î»»Ø·¢
2379   7                                                              
2380   7                                                              heartBeatCount = PERIOD_HEARTBEAT_ASR; //ÓĞÊ±Ğ§¿ØÖÆ£¬Ç¿ĞĞÌáÇ°ĞÄÌøÁ¢¼´»ØÂë
2381   7                                                              
2382   7                                                              memcpy(&dev_agingCmd_rcvPassive, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_aging
             -DataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬ÓÃÓÚÔ­Î»»Ø·¢
2383   7                                                      
2384   7                                                              if(dataTrans_oncePword != datsParam[datsParam[1] - 2]){ //Êı¾İ°üµ¥´Î´«Êä¿ÉÓÃ¿ÚÁî¼ì²â -¿ÚÁîÏàÍ¬ÔòÎªÖ
             -Ø·¢£¬ÖØ·¢Ö»»ØÂë£¬µ¥²»½øĞĞÏìÓ¦²Ù×÷
2385   8                                                              
2386   8                                                                      dataTrans_oncePword = datsParam[datsParam[1] - 2]; //±¾µØ¿ÚÁî¸üĞÂ£¬ÓÃÓÚÏÂ´ÎÅĞ¶Ï
2387   8                                                                      frameDataOnceReserve_PASS = 1;
2388   8                                                              }
2389   7                                                              
2390   7                                                              if(frameDataOnceReserve_PASS){ //·ÇÖØ·¢Ö¸Áî£¬ÏìÓ¦²Ù×÷²ÅÉúĞ§
2391   8                                                              
2392   8                                                                      beeps_usrActive(3, 50, 1);
2393   8                                                                      
2394   8                                                                      /*Ê±Ğ§²Ù×÷½âÎö*/                
2395   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_swOpreat){ //¿ª¹Ø×´Ì¬²Ù×÷£¬ĞèÒªÊ±Ğ§
2396   9                                                                              
2397   9      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                                                                                      if(status_Relay != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){
                                                                                      
                                                                                              swCommand_fromUsr.objRelay = datsParam[21]; //Õû×Ö½Ú±íÊ¾ÁÁ¶È
                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                      
                                                                                              EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢
                                                                                              devActionPush_IF.push_IF = 0; //ÍÆËÍÊ§ÄÜ£¬²»ÊÇ¶àÎ»¿ª¹Ø£¬²»ÍÆËÍ
               #if(DEBUG_LOGOUT_EN == 1)
                                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                                      
                                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay, (int
             -)datsParam[21]);
                                                                                                      PrintString1_logOut(log_buf);
                                                                                              }                       
               #endif 
                                                                                      }
                                                                                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
                                                                                      if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
                                                                                      
                                                                                              swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                                              (swCommand_fromUsr.objRelay == 0x01)?(heater_ActParam.heater_currentActMode = heaterActMode_swKe
             -epOpen):(heater_ActParam.heater_currentActMode = heaterActMode_swClose); //°´¼ü×´Ì¬Á¢Âí¸üĞÂ
                                                                                      }
                                                                                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                                                                      swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus; //ÏàÍ¬³¡¾°
             -°´¼ü¿É·´¸´²Ù×÷
                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
                                                                                      
              #else
2428   9                                                                              if((status_Relay & 0x07) != dev_dataPointTemp.devStatus_Reference.statusRef_swStatus){ 
2429  10                                                                              
2430  10                                                                                      swCommand_fromUsr.objRelay = dev_dataPointTemp.devStatus_Reference.statusRef_swStatus;
2431  10                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
2432  10                                                                                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 42  

2433  10                                                                                      if((SWITCH_TYPE == SWITCH_TYPE_SWBIT1) || //¶àÎ»¿ª¹Ø²Å½øĞĞÁ¢ÂíÍÆËÍ
2434  10                                                                                         (SWITCH_TYPE == SWITCH_TYPE_SWBIT2) ||
2435  10                                                                                         (SWITCH_TYPE == SWITCH_TYPE_SWBIT3)){
2436  11      
2437  11                                                                                                      EACHCTRL_realesFLG |= (status_Relay ^ swCommand_fromUsr.objRelay); //ÓĞĞ§»¥¿Ø´¥·¢
2438  11                                                                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
2439  11                                                                                                 
2440  11                                                                                      }
2441  10                                                                                      else
2442  10                                                                                      if(SWITCH_TYPE == SWITCH_TYPE_CURTAIN)EACHCTRL_realesFLG = 1; //ÓĞĞ§»¥¿Ø´¥·¢                                                                       
2443  10                                                                              }
2444   9      #endif
2445   9                                                                              
2446   9       #if(DEBUG_LOGOUT_EN == 1)
2447   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2448  10                                                                                      
2449  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2450  10                                                                                      sprintf(log_buf, ">>>>>>>>relayStatus reales:%02X, currentVal:%02X.\n", (int)status_Relay & 0x07
             -, (int)dev_dataPointTemp.devStatus_Reference.statusRef_swStatus);
2451  10                                                                                      PrintString1_logOut(log_buf);
2452  10                                                                              }                       
2453   9       #endif
2454   9                                                                      }
2455   8                                                                      
2456   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_delaySetOpreat){ //ÑÓÊ±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2457   9                                      
2458   9                                                                              if(dev_dataPointTemp.devData_delayer){ //ÑÓÊ±Ê±¼ä´óÓÚ0¾ÍÊÇ¿ª
2459  10                                                                              
2460  10                                                                                      ifDelay_sw_running_FLAG |= (1 << 1); //ÑÓÊ±±êÖ¾¸üĞÂ£¬Æô¶¯
2461  10                                                                                      delayPeriod_onoff               = dev_dataPointTemp.devData_delayer; //ÑÓÊ±Ê±¼ä
2462  10                                                                                      delayUp_act                             = dev_dataPointTemp.devData_delayUpStatus; //ÑÓÊ±µ½´ïÊ±£¬¿ª¹ØÏìÓ¦×´Ì¬
2463  10                                                                                      delayCnt_onoff                  = 0; //ÑÓÊ±¼ÆÊıÇåÁã
2464  10       #if(DEBUG_LOGOUT_EN == 1)
2465  10                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2466  11                                                                                              
2467  11                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2468  11                                                                                              sprintf(log_buf, ">>>>>>>>delayPeriod:[%d], delayUpAct:[%02X].\n", (int)delayPeriod_onoff, (int
             -)delayUp_act);
2469  11                                                                                              PrintString1_logOut(log_buf);
2470  11                                                                                      }                       
2471  10       #endif 
2472  10                                                                                      
2473  10                                                                              }else{
2474  10                                                                              
2475  10                                                                                      ifDelay_sw_running_FLAG &= ~(1 << 0); //ÑÓÊ±±êÖ¾¸üĞÂ
2476  10                                                                                      delayPeriod_onoff               = 0; 
2477  10                                                                                      delayCnt_onoff                  = 0; 
2478  10                                                                              }
2479   9                                                                      }
2480   8                                                                      
2481   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devResetOpreat){ //³ö³§ÉèÖÃ¸´Î»¶¯×÷£¬Ğ
             -èÒªÊ±Ğ§
2482   9                                                                              
2483   9                                                                              local_ftyRecover_standbyFLG = 1; //½ÓÊÕµ½»Ö¸´³ö³§¶¯×÷ºó£¬½«»Ö¸´³ö³§ÉèÖÃ¶¯×÷½øĞĞ¾ÍĞ÷Ì¬¼ÇÂ¼£¬µÈ´ıÊ±
             -Ğ§±êÖ¾ÖÃÁãºóÔÙ½øĞĞÊµ¼Ê¶¯×÷                                    
2484   9       #if(DEBUG_LOGOUT_EN == 1)
2485   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2486  10                                                              
2487  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2488  10                                                                                      sprintf(log_buf, ">>>>>>>>factory recover standBy!.\n");
2489  10                                                                                      PrintString1_logOut(log_buf);
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 43  

2490  10                                                                              }                       
2491   9       #endif         
2492   9                                                                      }
2493   8                                                                      
2494   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_devLock){ //Éè±¸ËøÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2495   9                                                                      
2496   9                                                                              u8 deviceLock_IF = 0; //²Ù×÷×Ö½Ú»º´æ
2497   9                                                                              
2498   9       #if(DEBUG_LOGOUT_EN == 1)
2499   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2500  10                                                                                      
2501  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2502  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd devLock coming, lockIf:[%d].\n", (int)dev_dataPointTemp.devSt
             -atus_Reference.statusRef_devLock);
2503  10                                                                                      PrintString1_logOut(log_buf);
2504  10                                                                              }                       
2505   9       #endif 
2506   9                                                                              
2507   9                                                                              if(dev_dataPointTemp.devStatus_Reference.statusRef_devLock){ //Êı¾İ·ÅÔÚ×´Ì¬Àï
2508  10                                                                              
2509  10                                                                                      deviceLock_flag = deviceLock_IF = 1; //ÔËĞĞ»º´æ¸üĞÂ
2510  10                                                                                      
2511  10                                                                              }else{
2512  10                                                                              
2513  10                                                                                      deviceLock_flag = deviceLock_IF = 0; //ÔËĞĞ»º´æ¸üĞÂ
2514  10                                                                              }
2515   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &deviceLock_IF, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2516   9                                                                      }
2517   8                                                                      
2518   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_timerSetOpreat){ //¶¨Ê±ÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2519   9                                                                              
2520   9                                                                              u8 loop = 0;
2521   9       #if(DEBUG_LOGOUT_EN == 1)
2522   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2523  10                                                                                      
2524  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2525  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd timer coming, dataTab1:[%02X-%02X-%02X].\n", (int)dev_dataPoi
             -ntTemp.devData_timer[0],
2526  10                                                                                                                                                                                                                                                      (int)dev_dataPointTemp.devData_timer[1],
2527  10                                                                                                                                                                                                                                                      (int)dev_dataPointTemp.devData_timer[2]);
2528  10                                                                                      PrintString1_logOut(log_buf);
2529  10                                                                              }                       
2530   9       #endif 
2531   9                                                                              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //ÔËĞĞ»º´æ¸üĞÂ
2532  10                                                                              
2533  10                                                                                      if(dev_dataPointTemp.devData_timer[loop * 3] == 0x80){  /*Ò»´ÎĞÔ¶¨Ê±ÅĞ¶Ï*///ÖÜÕ¼Î»Îª¿Õ£¬¶ø¶¨Ê±Æ÷±
             -»´ò¿ª£¬ËµÃ÷ÊÇÒ»´ÎĞÔ
2534  11                                                                                      
2535  11                                                                                              swTim_oneShoot_FLAG |= (1 << loop);     //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¿ªÆô
2536  11                                                                                              dev_dataPointTemp.devData_timer[loop * 3] |= (1 << (systemTime_current.time_Week - 1)); //Ç¿ĞĞ½
             -øĞĞµ±Ç°ÖÜÕ¼Î»£¬µ±´ÎÖ´ĞĞÍê±ÏºóÇå³ı
2537  11                                                                                              
2538  11                                                                                      }else{
2539  11                                                                                      
2540  11                                                                                              swTim_oneShoot_FLAG &= ~(1 << loop); //Ò»´ÎĞÔ¶¨Ê±±êÖ¾¹Ø±Õ
2541  11                                                                                      }
2542  10                                                                              }
2543   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab, dev_dataPointTemp.devData_timer, sizeof(timing_Dats) *
             - TIMEER_TABLENGTH); //Ö±½Ó¸üĞÂeepromÊı¾İ
2544   9                                                                              itrf_datsTiming_read_eeprom(); //ÆÕÍ¨¿ª¹Ø¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2545   9                                                                              timerActionDone_FLG_RESET(); //¶¨Ê±¶ÎÍê³É±êÖ¾Çå¿Õ¸´Î»£¬ÔÊĞíÖØ¸´½øĞĞµ±Ç°Ê±¼ä¶¨Ê±Á¢¼´ÏìÓ¦
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 44  

2546   9                                                                              
2547   9      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED) //Ç¿ÖÆ¿ª¹ØÀàĞÍÎªºìÍâ×ª·¢Æ÷Ê±£¬ÒòÎª3bit²»×ãÒÔ±íÊ¾ºìÍâÖ¸Áî
             -ĞòºÅ£¬ËùÒÔĞèÒªÊ¹ÓÃÁíÍâÀ©Õ¹µÄ8bytesÀ´½øĞĞÒµÎñ²Ù×÷
                                                                                      
               #if(DEBUG_LOGOUT_EN == 1)
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>timer opreatIR cmdNum1 is: %d.\n", (int)dev_dataPointTemp.union_devPar
             -am.infrared_param.irTimeAct_timeUpNum[0]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }       
               #endif 
                                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTypeForceInfrared_timeUpActNum, dev_dataPointTemp.union_devPara
             -m.infrared_param.irTimeAct_timeUpNum, TIMEER_TABLENGTH); //8¶ÎºìÍâ¶¨Ê±ÏìÓ¦²Ù×÷Ö¸ÁîĞòºÅ´æ´¢
              #endif                                                          
2559   9                                                                      }
2560   8                                                                      
2561   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_greenModeSetOpreat){ //ÂÌÉ«Ä£Ê½ÉèÖÃ²Ù×
             -÷£¬ĞèÒªÊ±Ğ§
2562   9                                                                              
2563   9       #if(DEBUG_LOGOUT_EN == 1)
2564   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2565  10                                                                                      
2566  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2567  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd greenMode coming, timeSet:%d.\n", (int)dev_dataPointTemp.devD
             -ata_greenMode);
2568  10                                                                                      PrintString1_logOut(log_buf);
2569  10                                                                              }                       
2570   9       #endif 
2571   9                      
2572   9                                                                              (dev_dataPointTemp.devData_greenMode)?(ifDelay_sw_running_FLAG |= (1 << 0)):(ifDelay_sw_running_F
             -LAG &= ~(1 << 0)); //¸üĞÂÔËĞĞ»º´æ
2573   9                                                                              delayPeriod_closeLoop = dev_dataPointTemp.devData_greenMode;
2574   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1); //Ö±½Ó¸üĞÂeepromÊı¾İ
2575   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
2576   9                                                                      }
2577   8                                                                      
2578   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_nightModeSetOpreat){ //Ò¹¼äÄ£Ê½ÉèÖÃ²Ù×
             -÷£¬ĞèÒªÊ±Ğ§
2579   9                                                                              
2580   9                                                                              u8 dataTemp[sizeof(timing_Dats) * 2] = {0};
2581   9       #if(DEBUG_LOGOUT_EN == 1)
2582   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2583  10                                                                                      
2584  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2585  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd nightMode coming with dats:[%02X %02X %02X", (int)dev_dataPoi
             -ntTemp.devData_nightMode[0],
2586  10                                                                                                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[1],
2587  10                                                                                                                                                                                                                                                      (int)dev_dataPointTemp.devData_nightMode[2]);
2588  10                                                                                      PrintString1_logOut(log_buf);
2589  10                                                                                                                                                                                                                                                      
2590  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2591  10                                                                                      sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_dataPointTemp.devData_nightMode[3],
2592  10                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[4],
2593  10                                                                                                                                                                              (int)dev_dataPointTemp.devData_nightMode[5]);
2594  10                                                                                      PrintString1_logOut(log_buf);
2595  10                                                                              }                       
2596   9       #endif 
2597   9                                                                              (dev_dataPointTemp.devData_nightMode[0])?(dataTemp[0] |= 0x7f):(dataTemp[0] &= ~0x7f); //È«ÌìÒ¹¼ä
2598   9                                                                              (dev_dataPointTemp.devData_nightMode[1])?(dataTemp[0] |= 0x80):(dataTemp[0] &= ~0x80); //Ê±¶ÎÒ¹¼ä
2599   9                                                                              dataTemp[1] = dev_dataPointTemp.devData_nightMode[2]; //×Ö½ÚÏÂ±ê2 µÍ5Î» Ê±
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 45  

2600   9                                                                              dataTemp[2] = dev_dataPointTemp.devData_nightMode[3]; //×Ö½ÚÏÂ±ê3 È«8Î» ·Ö
2601   9                                                                              dataTemp[4] = dev_dataPointTemp.devData_nightMode[4]; //×Ö½ÚÏÂ±ê4 µÍ5Î» Ê±
2602   9                                                                              dataTemp[5] = dev_dataPointTemp.devData_nightMode[5]; //×Ö½ÚÏÂ±ê5 È«8Î» ·Ö
2603   9                                                                              
2604   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_TimeTabNightMode, dataTemp, sizeof(timing_Dats) * 2); //Ö±½Ó¸üĞÂe
             -epromÊı¾İ
2605   9                                                                              itrf_datsTimNight_read_eeprom(); //Ò¹¼äÄ£Ê½¶¨Ê±±í¸üĞÂ<<<ÔËĞĞ»º´æ¸üĞÂ
2606   9                                                                      }
2607   8                                                                      
2608   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_bkLightSetOpreat){ //±³¹âµÆÉèÖÃ²Ù×÷£¬Ğ
             -èÒªÊ±Ğ§
2609   9                                                                              
2610   9       #if(DEBUG_LOGOUT_EN == 1)
2611   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2612  10                                                                                      
2613  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2614  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd bkLight coming, on-Isrt:%02d, off-Isrt:%02d.\n", (int)dev_dat
             -aPointTemp.devData_bkLight[0], (int)dev_dataPointTemp.devData_bkLight[1]);
2615  10                                                                                      PrintString1_logOut(log_buf);
2616  10                                                                              }                       
2617   9       #endif 
2618   9                                                                      
2619   9                                                                              memcpy(&devBackgroundLight_param, dev_dataPointTemp.devData_bkLight, sizeof(bkLightColorInsert_pa
             -ramAttr)); //»º´æ¸üĞÂ
2620   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_ledSWBackGround, (u8*)&devBackgroundLight_param, sizeof(bkLightCo
             -lorInsert_paramAttr)); //±¾µØ´æ´¢¸üĞÂ
2621   9                                                                      }
2622   8                                                                      
2623   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_horsingLight){ //ÅÜÂíµÆÉèÖÃ²Ù×÷£¬ĞèÒªÊ
             -±Ğ§
2624   9                                                                      
2625   9       #if(DEBUG_LOGOUT_EN == 1)
2626   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2627  10                                                                                      
2628  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2629  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd horsingLight coming, opreatData:%02X.\n", (int)dev_dataPointT
             -emp.devStatus_Reference.statusRef_horsingLight);
2630  10                                                                                      PrintString1_logOut(log_buf);
2631  10                                                                              }       
2632   9       #endif 
2633   9                                                                              
2634   9                                                                              ifHorsingLight_running_FLAG = dev_dataPointTemp.devStatus_Reference.statusRef_horsingLight;
2635   9                                                                              if(ifHorsingLight_running_FLAG)counter_ifTipsFree = 0;
2636   9                                                                              else tips_statusChangeToNormal();
2637   9                                                                      }
2638   8                                                                      
2639   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat){ //¿ª¹ØÎ»»¥¿Ø°
             -ó¶¨²Ù×÷ÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2640   9                                                                      
2641   9                                                                              u8 xdata loop = 0;
2642   9       #if(DEBUG_LOGOUT_EN == 1)
2643   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2644  10                                                                                      
2645  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2646  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd switchBindSet coming, opreatBitHold:%02X bindData:%02X %02X %
             -02X.\n", (int)dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat,
2647  10                                                                                                                                                                                                                                                                                                       (int)dev_dataPointTemp.devData_switchBitBind[0], 
2648  10                                                                                                                                                                                                                                                                                                       (int)dev_dataPointTemp.devData_switchBitBind[1], 
2649  10                                                                                                                                                                                                                                                                                                       (int)dev_dataPointTemp.devData_switchBitBind[2]);
2650  10                                                                                      PrintString1_logOut(log_buf);
2651  10                                                                              }       
2652   9       #endif 
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 46  

2653   9                                                                              
2654   9                                                                              for(loop = 0; loop < 3; loop ++){ //´æ´¢Öµ¼°»º´æÖµ¸üĞÂ
2655  10                                                                              
2656  10                                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_switchBitBindSetOpreat & (1 << loop)
             -){
2657  11                                                                                      
2658  11                                                                                              coverEEPROM_write_n(EEPROM_ADDR_portCtrlEachOther + loop, &dev_dataPointTemp.devData_switchBitB
             -ind[loop], 1);
2659  11                                                                                              CTRLEATHER_PORT[loop] = dev_dataPointTemp.devData_switchBitBind[loop];
2660  11                                                                                      }
2661  10                                                                              }
2662   9                                                                              
2663   9                                                                              reConnectAfterDatsReq_IF = 1; //¼´¿Ì×¢²á»¥¿ØÍ¨Ñ¶´Ø¶Ë¿Ú
2664   9                                                                      }
2665   8                                                                      
2666   8      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_infrareOpreat){ //ºìÍâ×ª·¢Æ÷²Ù×÷£¬ĞèÒª
             -Ê±Ğ§
               #if(DEBUG_LOGOUT_EN == 1)                                                              
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd infrareOpreat coming, optCmd:%02X, insertNum:%d .\n", (int)de
             -v_dataPointTemp.union_devParam.infrared_param.opreatAct,
                                                                                                                                                                                                                                                                               (int)dev_dataPointTemp.union_devParam.infrared_param.opreatInsert);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }
               #endif                                                         
                                                                                      if(local_infraredOpreat_ReserveNum != dev_dataPointTemp.union_devParam.infrared_param.currentOpre
             -atReserveNum){ //²Ù×÷¿ÉÓÃÅĞ¶Ï
                                                                                      
                                                                                              local_infraredOpreat_ReserveNum = dev_dataPointTemp.union_devParam.infrared_param.currentOpreatR
             -eserveNum; //ºìÍâ²Ù×÷¿ÉÓÃ¿ÚÁîÖµ¸üĞÂ
                                                                                              
                                                                                              infraredOpreatAct_Stop(); //ÖĞ¶ÏºìÍâµ±Ç°²Ù×÷
                                                                                              
                                                                                              switch(dev_dataPointTemp.union_devParam.infrared_param.opreatAct){ //ºìÍâ²Ù×÷Ö¸Áî½âÎö
                                                                                              
                                                                                                      case IR_OPREATCMD_CONTROL:{ //¿ØÖÆ
                                                                                                      
                                                                                                              infraredOpreatAct_remoteControlStart(dev_dataPointTemp.union_devParam.infrared_param.opreatIns
             -ert);
                                                                                                      
                                                                                                      }break;
                                                                                                      
                                                                                                      case IR_OPREATCMD_LEARNNING:{ //Ñ§Ï°
                                                                                                      
                                                                                                              infraredOpreatAct_learnningStart(dev_dataPointTemp.union_devParam.infrared_param.opreatInsert)
             -;
                                                                                                      
                                                                                                      }break;
                                                                                                      
                                                                                                      default:{}break;
                                                                                              }
                                                                                      }
                                                                              }
                                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                                                              if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_scenarioSwOpreat){ //³¡¾°¿ª¹ØÉèÖÃ²Ù×÷£
             -¬×¢²á»ò×¢Ïú³¡¾°
                                                                                      
                                                                                      u8 loop = 0;
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 47  

                                                                                                                                              
                                                                                      for(loop = 0; loop < 3; loop ++){
                                                                                              
                                                                                              if(dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioKeyBind[loop]){ //·ÇÁã²ÅÊÇÓĞĞ§²Ù×÷£
             -¬·ñÔò¶ÔÓ¦¼üÎ»°ó¶¨³¡¾°ºÅ½ûÖ¹¸ü¸Ä
                                                                                              
                                                                                                      switch(dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioOpreatCmd){
                                                                                                      
                                                                                                              case DATATRANS_KEEPACESS_SCENARIOSW_SONSCOMMAND_SCENARIOreg:{ //¼üÎ»°ó¶¨³¡¾°ºÅ×¢²á
                                                                                                              
                                                                                                                      scenario_ActParam.scenarioNum_record[loop] = dev_dataPointTemp.union_devParam.scenarioSw_para
             -m.scenarioKeyBind[loop];
                                                                                                              
                                                                                                              }break;
                                                                                                              
                                                                                                              case DATATRANS_KEEPACESS_SCENARIOSW_SONSCOMMAND_SCENARIOdel:{ //¼üÎ»°ó¶¨³¡¾°ºÅ×¢Ïú
                                                                                                              
                                                                                                                      scenario_ActParam.scenarioNum_record[loop] = 0;
                                                                                                              
                                                                                                              }break;
                                                                                                              
                                                                                                              default:{}break;
                                                                                                      }
                                                                                                      
                                                                                                      coverEEPROM_write_n(EEPROM_ADDR_swTypeForceScenario_scencarioNumKeyBind, scenario_ActParam.scen
             -arioNum_record, 3); //µôµç´æ´¢¸üĞÂ
                                                                                              }
                                                                                      }
                                                                                      
               #if(DEBUG_LOGOUT_EN == 1)                                                              
                                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                                                              
                                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                                                              sprintf(log_buf, ">>>>>>>>agingCmd scenarioSwOpreat coming, optCmd:%02X, current kNum: [%d, %d, 
             -%d]\n", (int)dev_dataPointTemp.union_devParam.scenarioSw_param.scenarioOpreatCmd,
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[0],
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[1],
                                                                                                                                                                                                                                                                                                              (int)scenario_ActParam.scenarioNum_record[2]);
                                                                                              PrintString1_logOut(log_buf);
                                                                                      }
               #endif 
                                                                                      
                                                                              }
              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)                                                               
              #else
2751   8                                                                      if(dev_dataPointTemp.devAgingOpreat_agingReference.agingCmd_curtainOpPeriodSetOpreat){ //´°Á±¹ìµÀÖ
             -ÜÆÚÉèÖÃ²Ù×÷£¬ĞèÒªÊ±Ğ§
2752   9                                                                      
2753   9       #if(DEBUG_LOGOUT_EN == 1)
2754   9                                                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2755  10                                                                                      
2756  10                                                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2757  10                                                                                      sprintf(log_buf, ">>>>>>>>agingCmd curtainOrbitalSet coming, valSet:%d .\n", (int)dev_dataPointT
             -emp.union_devParam.curtain_param.orbital_Period);
2758  10                                                                                      PrintString1_logOut(log_buf);
2759  10                                                                              }       
2760   9       #endif 
2761   9                                                                              //»º´æÊ±¼ä¼°´æ´¢Êı¾İ¸üĞÂ
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 48  

2762   9                                                                              curtainAct_Param.act_period = dev_dataPointTemp.union_devParam.curtain_param.orbital_Period;
2763   9                                                                              if(curtainAct_Param.act_period == 0xff)curtainAct_Param.act_period = CURTAIN_ORBITAL_PERIOD_INITT
             -IME;
2764   9                                                                              coverEEPROM_write_n(EEPROM_ADDR_curtainOrbitalPeriod, &(curtainAct_Param.act_period), 1);
2765   9                                                                              
2766   9                                                                              //Ã¿´ÎÉèÖÃ¹ìµÀÊ±¼äÊ±£¬¶¼½øĞĞÒ»´ÎÈ«¹Ø½ÃÕı²Ù×÷
2767   9                                                                              swCommand_fromUsr.objRelay = 1; //¹Ø²Ù×÷
2768   9                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
2769   9      //                                                                      curtainAct_Param.act_counter = curtainAct_Param.act_period; //¹ìµÀÎ»ÖÃ¼ÆÊ±ÖµÖØĞÂ¸³ÖµĞ£×¼  --ĞèÒ
             -ªµÈ´ıÊµ¼Êµç»ú×ª¶¯£¬°Ñ´°Á±¹éÎ»£¬ËùÒÔ²»ÄÜÖ±½Ó½øĞĞÖµ¸üĞÂ
2770   9                                                                      }
2771   8      #endif
2772   8                                                              }
2773   7                                                      
2774   7                                                      }else{
2775   7                                                      
2776   7                                                              memset(&dev_agingCmd_rcvPassive, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØ±»¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2777   7                                                              
2778   7                                                              if(local_ftyRecover_standbyFLG){ //µ±Ê±Ğ§±êÖ¾ÖÃÁãºó²ÅÖ´ĞĞ»Ö¸´³ö³§¶¯×÷£¬·ñÔòÉÏÎ»»ú»áÒ»Ö±ÍùÏÂ·¢¸´Î»
2779   8                                                                      
2780   8      #if(DEBUG_LOGOUT_EN == 1)
2781   8                                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2782   9                                                                              
2783   9                                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2784   9                                                                              sprintf(log_buf, ">>>>>>>>factory recover doing now!.\n");
2785   9                                                                              PrintString1_logOut(log_buf);
2786   9                                                                      }                       
2787   8      #endif  
2788   8                                                                      local_ftyRecover_standbyFLG = 0;
2789   8                                                                      Factory_recover();
2790   8                                                              }
2791   7                                                      }
2792   6                                                      
2793   6                                              }break;
2794   5                                                      
2795   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
2796   6                                                      
2797   6                                                      if(memcmp(&dev_agingCmd_sndInitative, &dev_dataPointTemp.devAgingOpreat_agingReference, sizeof(stt_a
             -gingDataSet_bitHold))){ //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÍ¬²½¸üĞÂ£¬Ê±Ğ§Õ¼Î»Óë±¾µØ²»Ò»ÖÂ Ñ¯·ÃÃüÁî¾ÍÒ»Ö±ÎªÖ÷¶¯
2798   7                                                      
2799   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
2800   7                                                              
2801   7                                                      }else{
2802   7                                                      
2803   7                                                              heartBeatPeriod = PERIOD_HEARTBEAT_ASR; //ÇĞ»»Îª±»¶¯Ñ¯·Ã£¬ĞÄÌøÖÜÆÚ¸ÄÎª±»¶¯
2804   7                                                              memset(&dev_agingCmd_sndInitative, 0, sizeof(stt_agingDataSet_bitHold)); //±¾µØÖ÷¶¯Ê±Ğ§²Ù×÷»º´æÇåÁã
2805   7                                                              dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_ASR;
2806   7                                                      }
2807   6                                                      
2808   6                                              }break;
2809   5                                                      
2810   5                                              default:{}break;
2811   5                                      }
2812   4                              }
2813   3                              
2814   3                      }break;
2815   2      
2816   2      #endif /*ºêÅĞÎ²*///¶¨Ê±ÀàÍ¨Ñ¶Ä£Ê½ÅĞ¶Ï
2817   2                      
2818   2                      default:{}break;
2819   2              }
2820   1      }
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 49  

2821          
2822          /*»Ö¸´³ö³§Ô¤ÖÃ¶¯×÷*/
2823          void fun_factoryRecoverOpreat(void){
2824   1      
2825   1              devStatus_switch.statusChange_standBy = status_devFactoryRecoverStandBy;
2826   1              devStatus_switch.statusChange_IF = 1;
2827   1              
2828   1              factoryRecover_HoldTimeCount = 6;
2829   1              factoryRecover_standBy_FLG = 1;
2830   1              tips_statusChangeToFactoryRecover(6);
2831   1      }
2832          
2833          /*zigbeeÖ÷Ïß³Ì*///¶¯×÷×èÈû´óÓÚ200msµÄº¯Êı¶¼ÉèÎª×´Ì¬»úÔËĞĞ£¬ÆäËüĞ¡ÓÚ200msº¯Êı£¬×èÈûÎ¬³Ö£¬·ñÔò×´Ì¬»ú¸´ÔÓ¶È¼Ó
             -´ó
2834          void thread_dataTrans(void){
2835   1              
2836   1              u8 code cmd_datsComing[2] = {0x44, 0x81}; //Ô¶¶ËÊı¾İÖ¡Ö¸Áî
2837   1              u8 code cmd_nwkOpenNote[2] = {0x45, 0xCB}; //ÍøÂç¿ª·ÅÍ¨Öª
2838   1      
2839   1      #define dataLen_zigbDatsTrans (128 + 25)
2840   1              u8 xdata paramTX_temp[dataLen_zigbDatsTrans] = {0};
2841   1              u8 xdata paramRX_temp[dataLen_zigbDatsTrans] = {0};
2842   1              
2843   1              static bit heartBeat_cmdFLG = 0; //ĞÄÌøÆæÅ¼±êÖ¾
2844   1              
2845   1              /*zigbÖ÷Ïß³ÌÏµÍ³Ê±¼ä¸üĞÂ*/
2846   1              if(!sysTimeReales_counter){ 
2847   2              
2848   2                      sysTimeReales_counter = PERIOD_SYSTIMEREALES;
2849   2                      getSystemTime_reales();
2850   2              }
2851   1              
2852   1              /*zigbÖ÷Ïß³Ì×´Ì¬»ú£º¸ù¾İ×´Ì¬±êÖ¾ÔËĞĞ*/
2853   1              switch(devRunning_Status){
2854   2              
2855   2                      case status_passiveDataRcv:{
2856   3                              
2857   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
2858   4                              
2859   4                                      devStatus_switch.statusChange_IF = 0;
2860   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
2861   4                                      
2862   4                                      break;
2863   4                              }
2864   3                              
2865   3                              {/*³õÊ¼»¯Ê±¼ä¸³Öµ*///½ö¿ª»ú¸³ÖµÒ»´Î£¬²»×öÊ±Çøµ÷Õû
2866   4                                      static bit FLG_timeSetInit = 1;
2867   4                                      
2868   4                                      if(FLG_timeSetInit){
2869   5                                      
2870   5                                              FLG_timeSetInit = 0;
2871   5                                              zigB_sysTimeSet(1533810700UL - 946713600UL, 0); //zigbeeÊ±¼ä´Á´Óunix¼ÍÔª946713600<2000/01/01 00:00:00
             ->¿ªÊ¼¼ÆËã
2872   5                                              
2873   5                                              dev_currentPanid = ZigB_getPanIDCurrent(); //¿ª»úºó»ñÈ¡Ò»´ÎPINID
2874   5      #if(DEBUG_LOGOUT_EN == 1)
2875   5                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2876   6                                                      
2877   6                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2878   6                                                      sprintf(log_buf, "currentPain get is :%d.\n", (int)dev_currentPanid);
2879   6                                                      PrintString1_logOut(log_buf);
2880   6                                              }       
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 50  

2881   5      #endif
2882   5                                      }
2883   4                              }
2884   3                              
2885   3                              {/*¼´Ê±¸üĞÂtips ¸üĞÂ²¹³¥*///·ÀÖ¹tips¸üĞÂÒÅÂ©
2886   4                              
2887   4                                      if(devTips_status == status_tipsNwkFind)tips_statusChangeToNormal(); //tips¸´Ô­(ÍøÂçÒÑ¼ÓÈë£¬»Ö¸´Õı³£ti
             -ps)
2888   4                                      
2889   4                                      if(!timeCounter_coordinatorLost_detecting){ //±»¶¯¶ªÊ§Íø¹Ø -ÓëÍø¹ØÊ§Áª
2890   5                                      
2891   5                                              devTips_nwkZigb = nwkZigb_outLine; //Íø¹Ø¶ªÊ§tipsÓëµôÏßtipsÅĞÎªÒ»Àà
2892   5                                              if(countEN_ifTipsFree)countEN_ifTipsFree = 0; //´¥ÃşÊÍ·Å¼ÆÊ±Ê§ÄÜ£¬ÍøÂçÍ¨ĞÅÒì³££¬²»ÈÃÅÜÅÜÂíµÆ
2893   5                                              
2894   5                                              if(timeCounter_coordinatorLost_keeping > COORDINATOR_LOST_PERIOD_CONFIRM){ //Íø¹ØÊ§ÁªÊ±¼ä¹ı³¤£¬´¥·¢ÖØ
             -Á¬
2895   6                                              
2896   6                                                      timeCounter_coordinatorLost_keeping = 0; //Íø¹Ø¶ªÊ§ºóÀÛ¼Æ¼ÆÊ±±äÁ¿ÖØÖÃ
2897   6                                                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //¼ì²âÍø¹Ø¶ªÊ§¼ÆÊ±±äÁ¿ÖØÖÃ
2898   6                                                      
2899   6      #if(DEBUG_LOGOUT_EN == 1)                               
2900   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
2901   7                                                              PrintString1_logOut(">>>coordinator lost too long, zigbee reconnect right now.\n");
2902   7                                                      }
2903   6      #endif  
2904   6                                                      devRunning_Status = status_nwkReconnect;
2905   6                                                      return; //Á¢¼´Ö´ĞĞ
2906   6                                              }
2907   5                                              
2908   5                                      }else{
2909   5                                      
2910   5                                              timeCounter_coordinatorLost_keeping = 0; //Íø¹Ø¶ªÊ§Ê±¼ä¼ÆÊ±±äÁ¿¸´Î»
2911   5                                      }
2912   4                              }
2913   3                              
2914   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ³ÖĞø·¢ËÍ»úÖÆÖ´ĞĞ£¨ÎŞÊÓ»ØÂë£©-------------------------
             ----//Ö÷ÒªÓÃÓÚÕë¶Ô»¥¿ØÒµÎñ
2915   3                              {
2916   4                                      
2917   4                                      u16 code DTREQ_EXATTR_ONCEPERIOD = 251; //µ¥´Î·¢ËÍ¼ä¸ôÊ±¼ä¶¨Òå µ¥Î»£ºms
2918   4                                      u16 idata constandLoop_reserve = datsSend_requestEx[0].constant_Loop + datsSend_requestEx[1].constant_
             -Loop + datsSend_requestEx[2].constant_Loop;
2919   4                                      
2920   4                                      if(constandLoop_reserve){
2921   5                                      
2922   5                                              if(!dtReqEx_counter){
2923   6                                              
2924   6                                                      u16 idata current_Insert = constandLoop_reserve % 3; //´ÎĞòÂÖÁ÷
2925   6                                                      
2926   6      #if(DEBUG_LOGOUT_EN == 1)
2927   6                                                      if((constandLoop_reserve % 3) == 0){ //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä(3¸öloop´òÓ¡Ò»´Î
             -)
2928   7                                                              
2929   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
2930   7                                                              sprintf(log_buf, ">>>dtCtrlEach loopParam:%d %d %d, data:%d.\n", (int)datsSend_requestEx[0].constan
             -t_Loop,
2931   7                                                                                                                                                                                               (int)datsSend_requestEx[1].constant_Loop,
2932   7                                                                                                                                                                                               (int)datsSend_requestEx[2].constant_Loop,
2933   7                                                                                                                                                                                               (int)datsSend_requestEx[0].dats[0]);
2934   7                                                              PrintString1_logOut(log_buf);
2935   7                                                      }       
2936   6      #endif
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 51  

2937   6                                                      
2938   6                                                      while(!datsSend_requestEx[current_Insert].constant_Loop){ //´ÎĞòÂÖÁ÷Ç°ÌáÏÂ£¬É¸Ñ¡¿ÉÓÃ
2939   7                                                      
2940   7                                                              current_Insert ++;
2941   7                                                              current_Insert %= 3;
2942   7                                                      }
2943   6                                                      
2944   6                                                      datsSend_requestEx[current_Insert].constant_Loop --;
2945   6                                                      
2946   6                                                      datsSend_requestEx[current_Insert].dats[1] = datsSend_requestEx[current_Insert].constant_Loop; //ÊµÊ
             -±¸üĞÂ³ÖĞø·¢ËÍÊ£Óà´ÎÊıÖµ
2947   6                                                      dataSendRemote_straightforward(datsSend_requestEx[current_Insert].nwkAddr, datsSend_requestEx[curren
             -t_Insert].portPoint, datsSend_requestEx[current_Insert].dats, datsSend_requestEx[current_Insert].datsLen);
2948   6                                                      
2949   6                                                      dtReqEx_counter = DTREQ_EXATTR_ONCEPERIOD;
2950   6                                              }
2951   5                                      }
2952   4                              }
2953   3                              
2954   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º³¡¾°·´Ïò´¥·¢¿ØÖÆ ¼ì²âÊÇ·ñĞèÒª·¢ËÍÊı¾İ--------------------
             ----//Ö÷ÒªÓÃÓÚÕë¶Ô³¡¾°¿ª¹ØÒµÎñ
2955   3      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                      if(scenario_ActParam.scenarioDataSend_FLG){
                                      
                                              frame_zigbScenarioReverseCtrl xdata scenarioData_temp = {0}; //´ı·¢³¡¾°Êı¾İ»º´æ
                                              
                                              scenario_ActParam.scenarioDataSend_FLG = 0;
                                              
                                              scenarioData_temp.command = zigbScenarioReverseCtrlCMD_scenarioCtrl; //×ÓÃüÁîÌî×°
                                              switch(scenario_ActParam.scenarioKey_currentTrig){ //³¡¾°ºÅÌî×°
                                              
                                                      case scenarioKey_current_S1:{
                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[0];
                                                      
                                                      }break;
                                                      
                                                      case scenarioKey_current_S2:{
                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[1];
                                                      
                                                      }break;
                                                      
                                                      case scenarioKey_current_S3:{
                                                      
                                                              scenarioData_temp.scenario_Num = scenario_ActParam.scenarioNum_record[2];
                                                      
                                                      }break;
                                                              
                                                      default:{
                                                      
                                                              scenarioData_temp.scenario_Num = 0;
                                                              
                                                      }break;
                                              }
                                              (scenarioData_temp.dataOnceReserve_pWord != systemTime_current.time_Second)?\
                                                      (scenarioData_temp.dataOnceReserve_pWord = systemTime_current.time_Second):\
                                                      (scenarioData_temp.dataOnceReserve_pWord = systemTime_current.time_Second + 1); //Êı¾İ¿ÚÁîÌî×° -ÒÔµ±Ç
             -°Ê±¼äÃë×÷ÎªËæ»úÊı¿ÚÁî
                                              
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLSECENARIO; //³¡¾°Êı¾İ×¨ÓÃ¶Ë¿Ú
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 52  

                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, &scenarioData_temp, sizeof(frame_zigbScenarioReverseCtrl)); //
             -Êı¾İ½á¹¹»Ø¹éÎªÖ¸Õë
                                              datsSend_request.datsTrans.datsLen = sizeof(frame_zigbScenarioReverseCtrl);
                                              datsRcv_respond.datsTrans.datsLen = 0;
                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 4; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆÚ
             -ÄÚ ·¢ 4´Î
                                              devRunning_Status = status_dataTransRequestDatsSend;
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif
3006   3              
3007   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºĞÄÌø-----------------------------------------------------
             ----//
3008   3                              if(heartBeatCycle_FLG && !heartBeatHang_timeCnt){ //ĞÄÌø´¥·¢±êÖ¾ ¼° ¹ÒÆğÊ±¼ä ÅĞ¶Ï
3009   4                                      
3010   4                                      u8 xdata frame_dataLen = 0; //´ı·¢ËÍÊı¾İÖ¡³¤¶È
3011   4                              
3012   4                                      heartBeatCycle_FLG = 0;
3013   4                                      heartBeat_cmdFLG = !heartBeat_cmdFLG;
3014   4                                      
3015   4                                      memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
3016   4                                      
3017   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              frame_dataLen = 14;
                                              paramTX_temp[0] = ZIGB_FRAMEHEAD_HEARTBEAT;
                                              paramTX_temp[1] = frame_dataLen ;
                                              (heartBeat_cmdFLG)?(paramTX_temp[2] = FRAME_HEARTBEAT_cmdOdd):(paramTX_temp[2] = FRAME_HEARTBEAT_cmdEv
             -en);
                                              memcpy(&paramTX_temp[4], &MAC_ID[1], 5);
                                              
                                              if(heartBeat_cmdFLG){ //Ææ°ü
                                              
                                                      
                                              
                                              }else{ //Å¼°ü
                                              
                                                      
                                              }
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS)  //ĞÂÖÜÆÚÑ¯·Ã»úÖÆÑ¯·ÃÖÜÆÚ
3034   4                                      
3035   4                                      //×´Ì¬Ìî×°-ÊµÊ±Öµ
3036   4      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
                      
                                              //Õû×Ö½ÚÌîÖµ
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = (status_Relay & 0x07) >> 0;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_reserve              = (status_Relay & 0x18) >> 3;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush               = (status_Relay & 0xE0) >> 5;
                                              
              #elif(SWITCH_TYPE_FORCEDEF == 0) //¶àÎ»¿ª¹Ø¸ßÎ»ÍÆËÍÇø·Ö
3044   4                                      
3045   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İµã ¿ª¹Ø
             -×´Ì¬¸üĞÂ
3046   4                                      if(devActionPush_IF.push_IF){ //ÍÆËÍÊı¾İ¼ÓÔØ
3047   5                                      
3048   5                                              devActionPush_IF.push_IF = 0;
3049   5                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush = 0;
3050   5                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush |= devActionPush_IF.dats_Push;
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 53  

3051   5                                      }
3052   4                                                              
3053   4      #else //ÆäËû¿ª¹ØÃ»ÓĞ¸ßÎ»ÍÆËÍÇø·Ö
                                              //Ö»×°×´Ì¬£¬±¾Éí¾ÍÊÇÍÆËÍ£¬ÆäËüÖµ¸ø0
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swStatus     = status_Relay;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_reserve              = 0;
                                              dev_currentDataPoint.devStatus_Reference.statusRef_swPush               = 0;
                                              
              #endif
3060   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_timer                = ifTim_sw_running_FLAG; //ÖÜÆÚÑ¯·Ã±¾µØÊı¾İ
             -µã ¶¨Ê±Æ÷×´Ì¬¸üĞÂ
3061   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_devLock              = deviceLock_flag;
3062   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_delay                = (ifDelay_sw_running_FLAG & 0x02) >> 1;
3063   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_greenMode    = (ifDelay_sw_running_FLAG & 0x01) >> 0;
3064   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_nightMode    = ifNightMode_sw_running_FLAG;
3065   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_horsingLight = ifHorsingLight_running_FLAG;
3066   4                                      
3067   4                                      //ÊôĞÔÖµÌî×°-ÊµÊ±Öµ
3068   4                                      {
3069   5                                              u8 xdata loop = 0;
3070   5                                              EEPROM_read_n(EEPROM_ADDR_swTimeTab, &dev_currentDataPoint.devData_timer, sizeof(timing_Dats) * TIMEE
             -R_TABLENGTH); //¶¨Ê±Êı¾İ
3071   5                                              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){ //Ò»´ÎĞÔÖÜÕ¼Î»»Ö¸´
3072   6                                              
3073   6                                                      if(swTim_oneShoot_FLAG & (1 << loop))dev_currentDataPoint.devData_timer[3 * loop] = 0x80; //Õë¶ÔÒ»´Î
             -ĞÔ¶¨Ê±»ØÂëÖÜÕ¼Î»Çå¿Õ
3074   6                                              }
3075   5                                      }
3076   4                                      dev_currentDataPoint.devData_delayer            = delayPeriod_onoff - (delayCnt_onoff / 60); //ÑÓÊ±Êı¾İ
3077   4                                      dev_currentDataPoint.devData_delayUpStatus      = delayUp_act; //ÑÓÊ±ÏìÓ¦×´Ì¬Êı¾İ
3078   4                                      dev_currentDataPoint.devData_greenMode          = delayPeriod_closeLoop; //ÂÌÉ«Ä£Ê½×´Ì¬Êı¾İ
3079   4                                      { //Ò¹¼äÄ£Ê½Êı¾İÌØÊâ×ª»»
3080   5                                              
3081   5                                              timing_Dats xdata nightDatsTemp_CalibrateTab[2] = {0};
3082   5                                              
3083   5                                              datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
3084   5                                              ((nightDatsTemp_CalibrateTab[0].Week_Num & 0x7F) == 0x7F)?(dev_currentDataPoint.devData_nightMode[0] 
             -= 1):(dev_currentDataPoint.devData_nightMode[0] = 0);
3085   5                                              (nightDatsTemp_CalibrateTab[0].if_Timing)?(dev_currentDataPoint.devData_nightMode[1] = 1):(dev_curren
             -tDataPoint.devData_nightMode[1] = 0);
3086   5                                              dev_currentDataPoint.devData_nightMode[2] = nightDatsTemp_CalibrateTab[0].Hour;
3087   5                                              dev_currentDataPoint.devData_nightMode[3] = nightDatsTemp_CalibrateTab[0].Minute;
3088   5                                              dev_currentDataPoint.devData_nightMode[4] = nightDatsTemp_CalibrateTab[1].Hour;
3089   5                                              dev_currentDataPoint.devData_nightMode[5] = nightDatsTemp_CalibrateTab[1].Minute;
3090   5                                              
3091   5      #if(DEBUG_LOGOUT_EN == 1)
3092   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<Ò¹¼äÄ£Ê½ÂãÊı¾İ´òÓ¡
3093   5      //                                              
3094   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3095   5      //                                              sprintf(log_buf, ">>>nightMode dats upload: [%02X %02X %02X",   (int)dev_currentDataPoint.devData_n
             -ightMode[0],
3096   5      //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[1],
3097   5      //                                                                                                                                                                              (int)dev_currentDataPoint.devData_nightMode[2]);
3098   5      //                                              PrintString1_logOut(log_buf);
3099   5      //                                                                                                                                                                              
3100   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3101   5      //                                              sprintf(log_buf, " %02X %02X %02X].\n",         (int)dev_currentDataPoint.devData_nightMode[3],
3102   5      //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[4],
3103   5      //                                                                                                                                      (int)dev_currentDataPoint.devData_nightMode[5]);
3104   5      //                                              PrintString1_logOut(log_buf);
3105   5      //                                      }       
3106   5      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 54  

3107   5      //                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä<<<¶¨Ê±ÔËĞĞ±êÖ¾´òÓ¡
3108   5      //                                      
3109   5      //                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3110   5      //                                              sprintf(log_buf, "ifTim_sw_running_FLAG:%d\n",  (int)ifTim_sw_running_FLAG);
3111   5      //                                              PrintString1_logOut(log_buf);
3112   5      //                                      }
3113   5      #endif  
3114   5                                      }
3115   4                                      memcpy(&dev_currentDataPoint.devData_bkLight, &devBackgroundLight_param, 2); //±³¾°µÆÊı¾İÌî×°
3116   4                                      dev_currentDataPoint.devData_devReset = 0;
3117   4                                      EEPROM_read_n(EEPROM_ADDR_portCtrlEachOther, dev_currentDataPoint.devData_switchBitBind, clusterNum_us
             -r); //»¥¿Ø°ó¶¨Êı¾İ
3118   4                                      { //¸ù¾İÉè±¸ÀàĞÍ£¬·ÖÀàÌî×°Êı¾İ
3119   5                                      
3120   5                                              switch(SWITCH_TYPE){
3121   6                                              
3122   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
                                                              case SWITCH_TYPE_SOCKETS:{
                                                                      
                                                                      float code decimal_prtCoefficient = 10000.0F; //Ğ¡ÊıÖµ¼ÆËãÏµÊı  --10000±¶
                                                              
                                                                      { //µçÁ¿Ìî×°
                                                                      u16 integer_prt = (u16)socket_eleDetParam.ele_Consum & 0x00FF;  //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.ele_Consum - (float)integer_prt) * decimal_prtCoefficie
             -nt);        //µçÁ¿Ğ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[0]      = (u8)((integer_prt & 0x00FF) >>
             - 0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[1]      = (u8)((decimal_prt & 0xFF00) >>
             - 8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_eleConsum[2]      = (u8)((decimal_prt & 0x00FF) >>
             - 0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                                      { //¹¦ÂÊÌî×°
                                                                      u16 integer_prt = (u16)socket_eleDetParam.eleParam_power & 0xFFFF;      //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.eleParam_power - (float)integer_prt) * decimal_prtCoeff
             -icient);        //µçÁ¿Ğ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[0]       = (u8)((integer_prt & 0xFF00) >> 
             -8);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[1]       = (u8)((integer_prt & 0x00FF) >> 
             -0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[2]       = (u8)((decimal_prt & 0xFF00) >> 
             -8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_elePower[3]       = (u8)((decimal_prt & 0x00FF) >> 
             -0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.data_corTime = systemTime_current.time_Hour; //¶ÔÓ
             -¦Ğ¡Ê±Çø¼äÌî×°
                                      
                                                                      { //DebugÊı¾İÌî×°-powerFreq<´Ë²¿·ÖÊı¾İµ÷ÊÔºóÈ¥³ı>
                                                                      u16 integer_prt = (u16)socket_eleDetParam.eleParamFun_powerFreqVal & 0xFFFF;    //µçÁ¿ÕûÊı²¿·Ö
                                                                      u16 decimal_prt = (u16)((socket_eleDetParam.eleParamFun_powerFreqVal - (float)integer_prt) * decima
             -l_prtCoefficient);    //powerFreqĞ¡Êı²¿·ÖÇ¿×ªÎªÕûÊıÀàĞÍ
                                                                      
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[0] = (u8)((integer_prt & 0xFF0
             -0) >> 8);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[1] = (u8)((integer_prt & 0x00F
             -F) >> 0);        //ÕûÊı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[2] = (u8)((decimal_prt & 0xFF0
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 55  

             -0) >> 8);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      dev_currentDataPoint.union_devParam.socket_param.dataDebug_powerFreq[3] = (u8)((decimal_prt & 0x00F
             -F) >> 0);        //Ğ¡Êı²¿·ÖÌî×°
                                                                      }
                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
                                                              case SWITCH_TYPE_INFRARED:{
                                                              
                                                                      dev_currentDataPoint.union_devParam.infrared_param.opreatAct                                            = IR_currentOpreatRes;                                  //µ±Ç
             -°ºìÍâ²Ù×÷½á¹ûÌî×° -·Ç0¿ÉÓÃ
                                                                      dev_currentDataPoint.union_devParam.infrared_param.opreatInsert                                         = IR_currentOpreatinsert;                               /
             -/µ±Ç°ºìÍâ²Ù×÷¶ÔÓ¦ĞòºÅÌî×°
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentTemperature_integerPrt        = (u8)(temperatur
             -eCurrent_VAL / 100);  //µ±Ç°ºìÍâ×ª·¢Æ÷ÊÒÄÚÎÂ¶ÈÌî×° -ÕûÊı
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentTemperature_decimalPrt        = (u8)(temperature
             -Current_VAL % 100);   //µ±Ç°ºìÍâ×ª·¢Æ÷ÊÒÄÚÎÂ¶ÈÌî×° -Ğ¡Êı
                                                                      dev_currentDataPoint.union_devParam.infrared_param.currentOpreatReserveNum                      = 0;                                                                    //ÉÏĞĞ¿ÚÁ
             -îÔİÌî0
                                                                      EEPROM_read_n(EEPROM_ADDR_swTypeForceInfrared_timeUpActNum, dev_currentDataPoint.union_devParam.inf
             -rared_param.irTimeAct_timeUpNum, TIMEER_TABLENGTH);   //°Ë¶ÎºìÍâ¶¨Ê±ÏìÓ¦Ö¸ÁîĞòºÅÌî×°
                                                                      
              // #if(DEBUG_LOGOUT_EN == 1)
              //                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
              //                                                              
              //                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
              //                                                              sprintf(log_buf, "---data upload IR timerUp dataNum1:%d.\n", (int)dev_currentDataPoint.union_dev
             -Param.infrared_param.irTimeAct_timeUpNum[0]);
              //                                                              PrintString1_logOut(log_buf);
              //                                                      }                       
              // #endif       
                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
                                                              case SWITCH_TYPE_SCENARIO:{
                                                              
                                                                      dev_currentDataPoint.union_devParam.scenarioSw_param.scenarioOpreatCmd                          = 0; //³¡¾°²Ù×÷ÏìÓ¦ÃüÁî£¬
             -Ôİ¸ø0
                                                                      memcpy(dev_currentDataPoint.union_devParam.scenarioSw_param.scenarioKeyBind,                     //°´¼ü¶ÔÓ¦°ó¶¨µÄ³¡¾
             -°ºÅ×°Ìî
                                                                                 scenario_ActParam.scenarioNum_record,
                                                                                 3);
                                                                      
                                                              }break;
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)                                               
              #else
3195   6                                                      case SWITCH_TYPE_CURTAIN:{
3196   7                                                      
3197   7                                                              dev_currentDataPoint.union_devParam.curtain_param.orbital_Period = curtainAct_Param.act_period;
3198   7                                                      
3199   7                                                      }break;
3200   6      #endif
3201   6                                                      default:{}break;
3202   6                                              }
3203   5                                      }
3204   4                                      
3205   4                                      //Ê±Ğ§²Ù×÷Õ¼Î»Ö¸ÁîÌî×°
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 56  

3206   4                                      switch(dtModeKeepAcess_currentCmd){
3207   5                                      
3208   5                                              case DTMODEKEEPACESS_FRAMECMD_ASR:{
3209   6                                              
3210   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_rcvPassive, sizeof(stt_agi
             -ngDataSet_bitHold));
3211   6                                              
3212   6                                              }break;
3213   5                                                      
3214   5                                              case DTMODEKEEPACESS_FRAMECMD_PST:{
3215   6                                              
3216   6                                                      memcpy(&dev_currentDataPoint.devAgingOpreat_agingReference, &dev_agingCmd_sndInitative, sizeof(stt_a
             -gingDataSet_bitHold));
3217   6                                              
3218   6                                              }break;
3219   5                                                      
3220   5                                              default:{}break;
3221   5                                      }
3222   4                                      
3223   4                                      //Êı¾İÖ¡×ÜÊı¾İÌî×°
3224   4                                      frame_dataLen                                   = 0;
3225   4                                      paramTX_temp[frame_dataLen ++]  = DTMODEKEEPACESS_FRAMEHEAD_ONLINE; //Ö¡Í·
3226   4                                      paramTX_temp[frame_dataLen ++]  = 0;  //Ö¡³¤ÔİÌî0£¬×îºó¸üĞÂ
3227   4                                      memcpy(&paramTX_temp[frame_dataLen], &MAC_ID[1], 5); //MAC , Ç°ÎåÎ»
3228   4                                      frame_dataLen += 6; //¿Õ³ö1Byte MAC
3229   4                                      paramTX_temp[frame_dataLen ++]  = dtModeKeepAcess_currentCmd; //ÃüÁî
3230   4                                      paramTX_temp[frame_dataLen ++]  = SWITCH_TYPE; //¿ª¹ØĞÅÏ¢
3231   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0xFF00) >> 8); //PANIDÌî×°
3232   4                                      paramTX_temp[frame_dataLen ++]  = (u8)((dev_currentPanid & 0x00FF) >> 0); 
3233   4                                      paramTX_temp[frame_dataLen ++]  = DEVICE_VERSION_NUM; //Éè±¸°æ±¾ºÅÌî×°
3234   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_H; //Ê±Çø_Ê±
3235   4                                      paramTX_temp[frame_dataLen ++]  = sysTimeZone_M; //Ê±Çø_·Ö
3236   4                                      memcpy(&paramTX_temp[frame_dataLen], &dev_currentDataPoint, sizeof(stt_devOpreatDataPonit)); //Ö±½ÓÊı¾
             -İÖ¸Õë¶ÔÆë,Êı¾İµãÏòÊı¾İÖ¡´ı·¢»º´æÇ¿í¡
3237   4                                      frame_dataLen += sizeof(stt_devOpreatDataPonit);
3238   4                                      frame_dataLen ++;
3239   4                                      paramTX_temp[1]                                 = frame_dataLen;
3240   4                                      paramTX_temp[frame_dataLen - 1] = frame_Check(&paramTX_temp[1], frame_dataLen - 2); //Ğ£ÑéÂë×îºóËã
3241   4                                      
3242   4      //#if(DEBUG_LOGOUT_EN == 1)
3243   4      //                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3244   4      //                      
3245   4      //                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3246   4      //                                      sprintf(log_buf, "package_num:[%02d], check_num[%02X].\n", (int)frame_dataLen, (int)paramTX_temp[fr
             -ame_dataLen - 1]);
3247   4      //                                      PrintString1_logOut(log_buf);
3248   4      //                              }                       
3249   4      //#endif        
3250   4                              
3251   4      #endif                          
3252   4                                      datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
3253   4                                      datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
3254   4                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
3255   4                                      memcpy(datsSend_request.datsTrans.dats, paramTX_temp, frame_dataLen );
3256   4                                      datsSend_request.datsTrans.datsLen = frame_dataLen ;
3257   4                                      datsRcv_respond.datsTrans.datsLen = 0;
3258   4                                      devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
3259   4                                      devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 4; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸ö³¬Ê±ÖÜÆÚ
             -ÄÚ ·¢ 4´Î
3260   4                                      devRunning_Status = status_dataTransRequestDatsSend;
3261   4                                      
3262   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 57  

             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3263   4                              }
3264   3                              
3265   3                              //------------------------------Ö÷×´Ì¬ÒµÎñ£º±¾µØ¿ª¹ØÊÜ¼¯Èº¿ØÖÆ×´Ì¬Î»ÖÜÆÚĞÔÂÖÑ¯<°üÀ¨ÓĞ»¥¿ØºÍ³¡¾°>-------
             ---//
3266   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
                                      if(!colonyCtrlGet_queryCounter && !colonyCtrlGetHang_timeCnt){ //ÖÜÆÚÑ¯²é ¼° ¹ÒÆğÊ±¼äÅĞ¶Ï
                                      
                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<<<<<<<<<<<<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2...6]       |       frame_data[7]                   |       frame_data[8...10]      |
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾»úMACµØÖ·                     |       ³¡¾°ËµÃ÷(ÔİÎŞËµÃ÷)              |       »¥¿ØËµÃ÷(µ±Ç°×éºÅ)      |               
                                              /*----------------------------------------------------------------------------------------------------
             -----------------------*/
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              paramTX_temp[0] = ZIGB_SYSCMD_COLONYPARAM_REQPERIOD; //ÃüÁî
                                              paramTX_temp[1] = clusterNum_usr + 5 + 1; //Êı¾İ³¤¶ÈËµÃ÷
                                              memcpy(&paramTX_temp[2], &MAC_ID[1], 5); //MACµØÖ·Ìî×°
                                              paramTX_temp[7] = 0; //³¡¾°ËµÃ÷×°ÔØ(ÎŞËµÃ÷£¬0Ìî³ä)
                                              memcpy(&paramTX_temp[8], CTRLEATHER_PORT, clusterNum_usr); //»¥¿ØËµÃ÷×°ÔØ(ËµÃ÷¶Ë¿ÚºÅ)
                                              
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLSYSZIGB; //zigbÏµÍ³½»»¥×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, paramTX_temp[1] + 2); 
                                              datsSend_request.datsTrans.datsLen = paramTX_temp[1] + 2;
                                              datsRcv_respond.datsTrans.datsLen = 0; //²»ĞèÒªÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend;
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
3295   3                              
3296   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İÍÆËÍ-------------------------------------------------
             ---//        
3297   3                              if(devActionPush_IF.push_IF){
3298   4                                      
3299   4                                      const bit dataFromRemote_IF = 1; //Ô¶³ÌÍÆËÍ
3300   4                                      const bit specialCmd_IF = 0; //·ÇÌØÊâÕ¼Î»
3301   4                                      
3302   4                                      u8 xdata datsTX_Len = 0;
3303   4                                      
3304   4                                      devActionPush_IF.push_IF = 0;
3305   4                                      
3306   4      #if(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_HEARTBEAT) //Ô­¼´Ê±Í¨Ñ¶»úÖÆĞÄÌø
                                              
                                              memset(paramTX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans); //Çå»º´æ
                                              
                                              paramTX_temp[11] = devActionPush_IF.dats_Push; //ÍÆËÍĞÅÏ¢Ìî×°
              
              #if(DEBUG_LOGOUT_EN == 1)
                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
                                                      
                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                      sprintf(log_buf, "swData push:%02X.\n", (int)devActionPush_IF.dats_Push);
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 58  

                                                      PrintString1_logOut(log_buf);
                                              }                       
              #endif  
                                              datsTX_Len = dtasTX_loadBasic_CUST(dataFromRemote_IF,
                                                                                                                 paramTX_temp,
                                                                                                                 33,
                                                                                                                 FRAME_TYPE_StoM_RCVsuccess,
                                                                                                                 FRAME_MtoZIGBCMD_cmdControl,
                                                                                                                 specialCmd_IF);
                                      
                                              datsSend_request.nwkAddr = 0; //½ö¶ÔÍø¹Ø·¢ËÍ£¬½øĞĞÊı¾İ×ª·¢
                                              datsSend_request.portPoint = ZIGB_ENDPOINT_CTRLNORMAL; //³£¹æÊı¾İ×ª·¢×¨ÓÃ¶Ë¿Ú
                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, datsTX_Len);
                                              datsSend_request.datsTrans.datsLen = datsTX_Len;
                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              
              #elif(ZIGB_DATATRANS_WORKMODE == DATATRANS_WORKMODE_KEEPACESS) //ÖÜÆÚÑ¯·Ã»úÖÆÎŞĞèÍÆËÍ£¬Ö»Ğè´¥·¢Ö÷¶¯Ê±Ğ§ÃüÁ
             -î¼´¿É
3336   4                                      
3337   4                                      dev_currentDataPoint.devStatus_Reference.statusRef_swPush = (devActionPush_IF.dats_Push & 0xE0) >> 5; 
             -//ÊôĞÔÖµÌî×°
3338   4                                      dev_agingCmd_sndInitative.agingCmd_swOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ğ§Õ¼Î»ÖÃÒ»
3339   4                                      dtModeKeepAcess_currentCmd = DTMODEKEEPACESS_FRAMECMD_PST;
3340   4                                      
3341   4                                      heartBeatPeriod = PERIOD_HEARTBEAT_PST; //Ö÷¶¯Ñ¯·ÃÇĞ»»£¬ĞÄÌøÖÜÆÚ¸ÄÎªÖ÷¶¯
3342   4                                      heartBeatCount  = heartBeatPeriod; 
3343   4      #endif
3344   4      
3345   4                                      return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
3346   4                              }
3347   3                              
3348   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£º»¥¿ØÍ¬²½-------------------------------------------------
             ---//
3349   3                              if(EACHCTRL_realesFLG){ //¹ã²¥»¥¿ØÖµ
3350   4                              
3351   4                                      if(devRunning_Status == status_passiveDataRcv){
3352   5                                      
3353   5      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER) //µ÷¹â¿ª¹ØµÄ»¥¿ØÖ±½Ó·ÅÔÚ»¥¿Ø×éÒ»ÄÚ£¬»¥¿ØÊı¾İÎª×´Ì¬Öµ
                                                      if(EACHCTRL_realesFLG == 1){
                                                              
                                                              EACHCTRL_realesFLG = 0; //»¥¿ØÓĞĞ§Î»ÇåÁã
                                                      
                                                              paramTX_temp[0] = status_Relay; //Ö±½Ó¸øÁÁ¶ÈÖµ
                                                              colonyCtrlGet_statusLocalEaCtrl[0] = paramTX_temp[0]; //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
                                                              localDataRecord_eaCtrl[0] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
                                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢Î´
             -¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
                                                              
                                                              /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
                                                              datsSend_requestEx[0].nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
                                                              datsSend_requestEx[0].portPoint = CTRLEATHER_PORT[0]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
                                                              memset(datsSend_requestEx[0].dats, 0, 10 * sizeof(u8));
                                                              
                                                              datsSend_requestEx[0].dats[0] = paramTX_temp[0];
                                                              datsSend_requestEx[0].dats[1] = 0; //ÏÂ±ê2Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£¨×îºó·¢
             -ËÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
                                                              datsSend_requestEx[0].datsLen = 2;
                                                              datsSend_requestEx[0].constant_Loop = 30; //ÎŞÊÓ»ØÂë£¬·¢30´Î            
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 59  

                                                      }
                                                                      
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
              #else
3380   5                      
3381   5                                              u8 idata loop;
3382   5                                              
3383   5                                              switch(SWITCH_TYPE){
3384   6                                              
3385   6                                                      case SWITCH_TYPE_SWBIT1:
3386   6                                                      case SWITCH_TYPE_SWBIT2:
3387   6                                                      case SWITCH_TYPE_SWBIT3:{ //Ò»¡¢¶ş¡¢ÈıÎ»¿ª¹Ø»¥¿ØÇø·Ö¿ª¹ØÎ»
3388   7                                                      
3389   7                                                              for(loop = 0; loop < clusterNum_usr; loop ++){ //Èı¸ö¿ª¹ØÎ»·Ö±ğÅĞ¶¨
3390   8                                                              
3391   8                                                                      if(EACHCTRL_realesFLG & (1 << loop)){ //»¥¿ØÓĞĞ§Î»ÅĞ¶Ï
3392   9                                                                      
3393   9                                                                              EACHCTRL_realesFLG &= ~(1 << loop); //»¥¿ØÓĞĞ§Î»ÇåÁã
3394   9                                                                              
3395   9                                                                              paramTX_temp[0] = (status_Relay >> loop) & 0x01; //¿ª¹Ø×´Ì¬Ìî×°
3396   9                                                                              
3397   9                                                                              if((CTRLEATHER_PORT[loop] > CTRLEATHER_PORT_NUMSTART) && CTRLEATHER_PORT[loop] < CTRLEATHER_PORT_
             -NUMTAIL){ //ÊÇ·ñÎªÓĞĞ§»¥¿Ø¶Ë¿Ú
3398  10                                                                                      
3399  10                                                                                      (paramTX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_ON):
             -(colonyCtrlGet_statusLocalEaCtrl[loop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
3400  10                                                                                      localDataRecord_eaCtrl[loop] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3401  10                                                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅ
             -Ï¢Î´¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3402  10                                                                              
3403  10                                                                                      /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
3404  10                                                                                      datsSend_requestEx[loop].nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3405  10                                                                                      datsSend_requestEx[loop].portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3406  10                                                                                      memset(datsSend_requestEx[loop].dats, 0, 10 * sizeof(u8));
3407  10                                                                                      
3408  10                                                                                      datsSend_requestEx[loop].dats[0] = paramTX_temp[0];
3409  10                                                                                      datsSend_requestEx[loop].dats[1] = 0; //ÏÂ±ê2Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£
             -¨×îºó·¢ËÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
3410  10                                                                                      datsSend_requestEx[loop].datsLen = 2;
3411  10                                                                                      datsSend_requestEx[loop].constant_Loop = 30; //ÎŞÊÓ»ØÂë£¬·¢30´Î
3412  10                                                                                      
3413  10      //                                                                              /*³£¹æ·¢ËÍ£¬ÊÕµ½Ğ­ÒéÕ»»ØÂëÏìÓ¦¾ÍÍ£Ö¹·¢ËÍ£¬ÇÒÓĞ³¬Ê±*///³£¹æ
3414  10      //                                                                              datsSend_request.nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3415  10      //                                                                              datsSend_request.portPoint = CTRLEATHER_PORT[loop]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3416  10      //                                                                              memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
3417  10      //                                                                              memcpy(datsSend_request.datsTrans.dats, paramTX_temp, 1);
3418  10      //                                                                              datsSend_request.datsTrans.datsLen = 1;
3419  10      //                                                                              datsRcv_respond.datsTrans.datsLen = 0; //ÎŞĞèÔ¶¶ËÓ¦´ğ
3420  10      //                                                                              
3421  10      //                                                                              devRemoteDataReqMethod.keepTxUntilCmp_IF = 1; //ËÀ¿Ä
3422  10      //                                                                              devRemoteDataReqMethod.datsTxKeep_Period = REMOTE_DATAREQ_TIMEOUT / 10; //ËÀ¿ÄÖÜÆÚ£¬³ı´Î±È µ¥¸
             -ö³¬Ê±ÖÜÆÚÄÚ ·¢ 10 ´Î
3423  10      //                                                                              
3424  10      //                                                                              EACHCTRL_reportFLG = 1; //ÏòÍø¹Ø»ã±¨
3425  10      //                                                                              
3426  10      //                                                                              devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
3427  10      //                                                                              
3428  10      //                                                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´
             -Ì¬±£³Ö£¬µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 60  

3429  10                                                                              }
3430   9                                                                      }
3431   8                                                              }               
3432   7                                                      }break;
3433   6                                                      
3434   6                                                      case SWITCH_TYPE_CURTAIN:{ //´°Á±¿ª¹Ø²»Çø·Ö¿ª¹ØÎ»£¬Ö±½Ó»¥¿Ø¶¯×÷Êı¾İ¼´¿É
3435   7                                                      
3436   7                                                              if(EACHCTRL_realesFLG == 1){
3437   8                                                                      
3438   8                                                                      EACHCTRL_realesFLG = 0; //»¥¿ØÓĞĞ§Î»ÇåÁã
3439   8                                                                      
3440   8                                                                      if((CTRLEATHER_PORT[0] > CTRLEATHER_PORT_NUMSTART) && CTRLEATHER_PORT[0] < CTRLEATHER_PORT_NUMTAIL
             -){ //ÓĞĞ§¶Ë¿ÚÅĞ¶Ï
3441   9                                                                      
3442   9                                                                              paramTX_temp[0] = status_Relay; //Ö±½Ó¸ø²Ù×÷Öµ[1:¹Ø, 2:Í£, 4:¿ª]
3443   9                                                                              colonyCtrlGet_statusLocalEaCtrl[0] = paramTX_temp[0]; //±¾µØ»¥¿Ø×´Ì¬²éÑ¯Öµ¸üĞÂ
3444   9                                                                              localDataRecord_eaCtrl[0] = paramTX_temp[0];  //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3445   9                                                                              colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ
             -¢Î´¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3446   9                                                                              
3447   9                                                                              /*ÎŞÊÓ»ØÂë£¬³ÖĞøĞÔ·¢ËÍ*///·Ç³£¹æ
3448   9                                                                              datsSend_requestEx[0].nwkAddr = 0xffff; //¼ä½Ó×é²¥£¨¶Ô»¥¿Ø×¨ÓÃ¶Ë¿Ú½øĞĞ¹ã²¥£©
3449   9                                                                              datsSend_requestEx[0].portPoint = CTRLEATHER_PORT[0]; //»¥¿ØÎ»¶ÔÓ¦°ó¶¨¶Ë¿Ú
3450   9                                                                              memset(datsSend_requestEx[0].dats, 0, 10 * sizeof(u8));
3451   9                                                                              
3452   9                                                                              datsSend_requestEx[0].dats[0] = paramTX_temp[0];
3453   9                                                                              datsSend_requestEx[0].dats[1] = 0; //ÏÂ±ê2Îª³ÖĞø·¢ËÍÊ£Óà´ÎÊı£¬ÓÃÀ´È·¶¨×îºó·¢ËÍ»¥¿ØÊı¾İµÄ¶ÔÏó£¨×îº
             -ó·¢ËÍµÄ»¥¿ØÊı¾İ²ÅÊÇÓĞĞ§Êı¾İ£©£¬ÔÚ·¢ËÍÊ±ÊµÊ±¸üĞÂ£¬³õÊ¼¸³ÖµÎª0
3454   9                                                                              datsSend_requestEx[0].datsLen = 2;
3455   9                                                                              datsSend_requestEx[0].constant_Loop = 30; //ÎŞÊÓ»ØÂë£¬·¢30´Î
3456   9                                                                      }
3457   8                                                              }
3458   7                                                              
3459   7                                                      }break;
3460   6                                                      
3461   6                                                      default:{}break;
3462   6                                              }                       
3463   5      #endif
3464   5                                      }       
3465   4                              }
3466   3      
3467   3      #if(COLONYINFO_QUERYPERIOD_EN == ENABLE) /*ºêÅĞÍ·*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ   
                                      if(EACHCTRL_reportFLG){ //ÏòÍø¹Øµ¥²¥µ±Ç°ËùÓĞ»¥¿Ø×éºÅ¶ÔÓ¦µÄ¿ª¹Ø×´Ì¬Öµ
                                      
                                              EACHCTRL_reportFLG = 0;
                                              
                                              /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>frame reference<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             -<<<<<<*/
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      frame_data[0]           |       frame_data[1]           |       frame_data[2/4/6]       |               frame_data[3/5/7]                       |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              /*      ÃüÁî                            |       Êı¾İ³¤¶È                        |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ          |       ±¾µØ»¥¿Ø¶Ë¿ÚºÅ¶ÔÓ¦¿ª¹Ø×´Ì¬Öµ    |
                                              /*----------------------------------------------------------------------------------------------------
             -------*/
                                              {
                                                      u8 code remote_responseFrame[3] = {ZIGB_SYSCMD_EACHCTRL_REPORT, 0x01, 0x00}; //Ô¶¶ËÏìÓ¦Ö¡<È·±£Ö÷»úÊÕµ
             -½>
                                                      
              #if(DEBUG_LOGOUT_EN == 1)
                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 61  

                                                              
                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
                                                              sprintf(log_buf, "current eaCtrl insrt[2] is: %02X.\n", (int)colonyCtrlGet_statusLocalEaCtrl[1]);
                                                              PrintString1_logOut(log_buf);
                                                      }                       
              #endif  
                                                      
                                                      memset(datsSend_request.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8));
                                                      datsSend_request.datsTrans.dats[0]      = ZIGB_SYSCMD_EACHCTRL_REPORT;
                                                      datsSend_request.datsTrans.dats[1]      = 6;
                                                      datsSend_request.datsTrans.dats[2]      = CTRLEATHER_PORT[0];
                                                      datsSend_request.datsTrans.dats[3]      = colonyCtrlGet_statusLocalEaCtrl[0];
                                                      datsSend_request.datsTrans.dats[4]      = CTRLEATHER_PORT[1];
                                                      datsSend_request.datsTrans.dats[5]      = colonyCtrlGet_statusLocalEaCtrl[1];
                                                      datsSend_request.datsTrans.dats[6]      = CTRLEATHER_PORT[2];
                                                      datsSend_request.datsTrans.dats[7]      = colonyCtrlGet_statusLocalEaCtrl[2];
                                                      datsSend_request.datsTrans.datsLen      = 8;
                                                      datsSend_request.nwkAddr                        = 0;
                                                      datsSend_request.portPoint                      = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      memset(datsRcv_respond.datsTrans.dats, 0, DATBASE_LENGTH * sizeof(u8)); //ĞèÒªÔ¶¶ËÏìÓ¦
                                                      memcpy(datsRcv_respond.datsTrans.dats, remote_responseFrame, 3); //Ô¶¶ËÏìÓ¦Ö¡¼ÓÔØ
                                                      datsRcv_respond.datsTrans.datsLen       = 3;
                                                      datsRcv_respond.nwkAddr                         = 0;
                                                      datsRcv_respond.portPoint                       = ZIGB_ENDPOINT_CTRLSYSZIGB;
                                                      
                                                      devRunning_Status = status_dataTransRequestDatsSend; //Ö±½ÓÇĞ»»£¨²»×öÔ¤±¸¶¯×÷£©
                                              }
                                              
                                              return; //Ô½¹ı±¾´Îµ÷¶È£¬Õ¼ÓÃÊı¾İ·¢ËÍ×´Ì¬¸ü¸ÄÈ¨£¬ÏÈµ½ÏÈµÃ£¬ÆäËüĞèÒª¸ü¸ÄÊı¾İ·¢ËÍÈ¨µÄÒµÎñ£¬·¢ËÍ×´Ì¬±£³Ö£¬
             -µÈ´ıÏÈĞĞÒµÎñÊı¾İ·¢ËÍÍê±Ï
                                      }
              #endif /*ºêÅĞÎ²*///¼¯Èº¿ØÖÆĞÅÏ¢ÖÜÆÚ²éÑ¯Ê¹ÄÜ
3515   3                              
3516   3                              //--------------------------------Ö÷×´Ì¬ÒµÎñ£ºÊı¾İ½âÎöÏìÓ¦---------------------------------------------
             ---//
3517   3                              if(uartRX_toutFLG){ //Êı¾İ½ÓÊÕ(Ö¡³¬Ê±)
3518   4                                      
3519   4                                      uartRX_toutFLG = 0;
3520   4                                      
3521   4      //                              if(datsRcv_ZIGB.rcvDats[0] != ZIGB_FRAME_HEAD){ //Ö¡Í·²»¶Ô£¬´òÓ¡Êä³ö
3522   4      //                              
3523   4      //#if(DEBUG_LOGOUT_EN == 1)
3524   4      //                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3525   4      //                      
3526   4      //                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3527   4      //                                                      sprintf(log_buf, "err frameHead:%02X.\n", (int)datsRcv_ZIGB.rcvDats[0]);
3528   4      //                                                      PrintString1_logOut(log_buf);
3529   4      //                                              }                       
3530   4      //#endif        
3531   4      //                              }
3532   4                                      
3533   4                                      /*ZigbeeÒ»¼¶Ğ­ÒéºË¶Ô½âÎö*/
3534   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3535   4                                              !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_datsComing, 2)){ //Ô¶¶ËÊı¾İµ½À´Ö¸Áî
3536   5                                              
3537   5                                              u16 idata datsFrom_addr = ((u16)(datsRcv_ZIGB.rcvDats[9]) << 8) | ((u16)(datsRcv_ZIGB.rcvDats[8]) << 
             -0); //Êı¾İ·¢ËÍ·½ÍøÂçµØÖ·
3538   5                                              u8      idata srcPoint =  datsRcv_ZIGB.rcvDats[10];     //Ô´¶Ë
3539   5                                              u8      idata dstPoint =  datsRcv_ZIGB.rcvDats[11];     //Ô¶¶Ë
3540   5                                                      
3541   5                                              if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //Êı¾İÀ´Ô´¶ÌµØÖ·¼ì²â£¬ÊÇ·ñÀ´×ÔÍø¹ØÖ÷»ú
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 62  

3542   6                                              
3543   6                                                      timeCounter_coordinatorLost_detecting = COORDINATOR_LOST_PERIOD_CONFIRM; //Íø¹ØÖ÷»úÊ§ÁªÈ·ÈÏ¼ì²â¼ÆÊ±Ö
             -ØÖÃ
3544   6                                                      if(devTips_nwkZigb != nwkZigb_nwkOpen)devTips_nwkZigb = nwkZigb_Normal; //zigbTips×´Ì¬ÏìÓ¦£¬Ö»Òª½ÓÊÕ
             -µ½Íø¹ØzigbÊı¾İ£¬tips×´Ì¬¾ÍÇĞ»»ÖÁÕı³£
3545   6                                              }
3546   5                                              
3547   5                                              memset(paramRX_temp, 0, sizeof(u8) * dataLen_zigbDatsTrans);
3548   5                                              memcpy(paramRX_temp, &(datsRcv_ZIGB.rcvDats[21]), datsRcv_ZIGB.rcvDats[20]);
3549   5                                                      
3550   5                                              if(srcPoint > CTRLEATHER_PORT_NUMSTART && srcPoint < CTRLEATHER_PORT_NUMTAIL){ /*»¥¿Ø¶Ë¿Ú*/
3551   6                                                      
3552   6                                                      u8 idata statusRelay_temp = status_Relay; //µ±Ç°¿ª¹Ø×´Ì¬»º´æ
3553   6                                                      u8 idata localActLoop = 0;
3554   6                                                      
3555   6                                                      colonyCtrlGet_queryCounter = COLONYCTRLGET_QUERYPERIOD; //¼¯ÈºĞÅÏ¢²éÑ¯Ö÷¶¯ÖÍºó£¬ÒÔ·ÀÓëÖ÷»ú¼¯ÈºĞÅÏ¢Î´
             -¸üĞÂ£¬µ¼ÖÂÓë±¾µØĞÅÏ¢³åÍ»
3556   6                                                      
3557   6      #if(DEBUG_LOGOUT_EN == 1)
3558   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3559   7                                                              memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3560   7                                                              sprintf(log_buf, "ctrl eachOther cmd coming, cluster:%02d, val:%02d, loop:%02d.\n", (int)srcPoint, 
             -(int)paramRX_temp[0], (int)paramRX_temp[1]);
3561   7                                                              PrintString1_logOut(log_buf);
3562   7                                                      }                       
3563   6      #endif  
3564   6      
3565   6      #if(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_FANS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_dIMMER) //µ÷¹â¿ª¹ØµÄ»¥¿ØÖ±½Ó·ÅÔÚ»¥¿Ø×éÒ»ÄÚ£¬»¥¿ØÊı¾İÎª×´Ì¬Öµ
                                                              if((srcPoint == CTRLEATHER_PORT[0]) && (0 != CTRLEATHER_PORT[0])){ //»¥¿Ø×éÒ» ¶ÔÓ¦×éºÅºË¶Ô£¨×éºÅ¼´¶Ë
             -¿ÚºÅ£©
                                                              
                                                                      if(paramRX_temp[1] > datsSend_requestEx[0].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
              
                                                                              swCommand_fromUsr.objRelay = paramRX_temp[0]; //ÁÁ¶ÈÖµ¼ÓÔØ²¢½øĞĞÓ²¼şÏìÓ¦
                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
                                                                              
                                                                              colonyCtrlGet_statusLocalEaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
                                                                              
                                                                              datsSend_requestEx[0].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«±»È¡Ïû
                                                                              
                                                                              localDataRecord_eaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
                                                                      }
                                                              }
                                                              
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SOCKETS)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_INFRARED)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_SCENARIO)
              #elif(SWITCH_TYPE_FORCEDEF == SWITCH_TYPE_HEATER)
              #else                   
3587   6                                                      switch(SWITCH_TYPE){
3588   7                                                      
3589   7                                                              case SWITCH_TYPE_SWBIT1:
3590   7                                                              case SWITCH_TYPE_SWBIT2:
3591   7                                                              case SWITCH_TYPE_SWBIT3:{
3592   8                                                              
3593   8                                                                      /*»¥¿Ø±»¶¯ÏìÓ¦*///Ò»¡¢¶ş¡¢ÈıÎ»¿ª¹Ø
3594   8                                                                      for(localActLoop = 0; localActLoop < clusterNum_usr; localActLoop ++){
3595   9                                                                      
3596   9                                                                              if((srcPoint == CTRLEATHER_PORT[localActLoop]) && (0 != CTRLEATHER_PORT[localActLoop])){ //¿ª¹ØÎ»
             -x »¥¿Ø°ó¶¨ÅĞ¶Ï
3597  10                                                                              
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 63  

3598  10                                                                                      if(paramRX_temp[1] > datsSend_requestEx[localActLoop].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
3599  11                                                                                      
3600  11                                                                                              statusRelay_temp &= ~(1 << localActLoop); //¶¯×÷Î»»º´æÇåÁã
3601  11                                                                                              swCommand_fromUsr.objRelay = statusRelay_temp | (paramRX_temp[0] << localActLoop); //bit¶ÔÓ¦ ¿ª
             -¹ØÎ»¶¯×÷¼ÓÔØ
3602  11                                                                                              swCommand_fromUsr.actMethod = relay_OnOff;
3603  11                                                                                              (paramRX_temp[0])?(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRES
             -ERVE_ON):(colonyCtrlGet_statusLocalEaCtrl[localActLoop] = STATUSLOCALEACTRL_VALMASKRESERVE_OFF); //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
3604  11                                                                                              
3605  11                                                                                              datsSend_requestEx[localActLoop].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«
             -±»È¡Ïû
3606  11                                                                                              
3607  11                                                                                              localDataRecord_eaCtrl[localActLoop] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3608  11                                                                                      }
3609  10                                                                                      
3610  10                                                                                      break;
3611  10                                                                              }
3612   9                                                                      }
3613   8                                                                      
3614   8                                                              }break;
3615   7                                                              
3616   7                                                              case SWITCH_TYPE_CURTAIN:{
3617   8                                                              
3618   8                                                                      if((srcPoint == CTRLEATHER_PORT[0]) && (0 != CTRLEATHER_PORT[0])){ //»¥¿Ø×éÒ» ¶ÔÓ¦×éºÅºË¶Ô£¨×éºÅ¼´
             -¶Ë¿ÚºÅ£©
3619   9                                                                      
3620   9                                                                              if(paramRX_temp[1] > datsSend_requestEx[0].constant_Loop){ //loopÖµ´óÓÚ±¾µØ²ÅÓĞĞ§
3621  10      
3622  10                                                                                      swCommand_fromUsr.objRelay = paramRX_temp[0]; //¶¯×÷Öµ¼ÓÔØ²¢½øĞĞÓ²¼şÏìÓ¦
3623  10                                                                                      swCommand_fromUsr.actMethod = relay_OnOff;
3624  10                                                                                      
3625  10                                                                                      colonyCtrlGet_statusLocalEaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿ØÂÖÑ¯Öµ¸üĞÂ
3626  10                                                                                      
3627  10                                                                                      datsSend_requestEx[0].constant_Loop = 0;  //loopÖµ´óÓÚ±¾µØ£¬±¾µØÕıÔÚ½øĞĞµÄ»¥¿Ø´«Êä½«±»È¡Ïû
3628  10                                                                                      
3629  10                                                                                      localDataRecord_eaCtrl[0] = paramRX_temp[0]; //±¾µØ»¥¿Ø¼ÇÂ¼Öµ¸üĞÂ
3630  10                                                                              }
3631   9                                                                      }
3632   8                                                                      
3633   8                                                              }break;
3634   7      
3635   7                                                      }               
3636   6      #endif  
3637   6                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ -Ö÷¶¯ÉÏ´«
3638   6                                                      dev_agingCmd_sndInitative.agingCmd_delaySetOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ğ§Õ¼Î»ÖÃÒ»
3639   6                                              
3640   6                                              }else{ /*·Ç»¥¿Ø¶Ë¿Ú*///Ê£ÏÂ¾ÍÊÇÏµÍ³×¨ÓÃµÄ15¸ö¶Ë¿Ú
3641   6                                              
3642   6                                                      switch(srcPoint){
3643   7                                                              
3644   7                                                              /*³¡¾°¼¯Èº¶Ë¿Ú*/
3645   7                                                              case ZIGB_ENDPOINT_CTRLSECENARIO:{      
3646   8                                                              
3647   8                                                                      dataParing_scenarioCtrl(paramRX_temp); //³¡¾°¼¯Èº¿ØÖÆ½âÎö
3648   8                                                                      
3649   8                                                              }break;
3650   7                                                      
3651   7                                                              /*³£¹æ¿ØÖÆ×ª·¢¶Ë¿Ú*/
3652   7                                                              case ZIGB_ENDPOINT_CTRLNORMAL:{ 
3653   8                                                              
3654   8                                                                      if(datsFrom_addr == ZIGB_NWKADDR_CORDINATER){ //À´×ÔĞ­µ÷Æ÷
3655   9                                                                      
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 64  

3656   9                                                                              dataParing_Nomal(paramRX_temp, datsFrom_addr, srcPoint); //³£¹æ½âÎö
3657   9                                                                      }
3658   8                                                                      
3659   8                                                              }break;
3660   7                                                              
3661   7                                                              /*zigbÏµÍ³½»»¥¶Ë¿Ú*/
3662   7                                                              case ZIGB_ENDPOINT_CTRLSYSZIGB:{        
3663   8                                                              
3664   8                                                                      dataParing_zigbSysCtrl(paramRX_temp); //ÏµÍ³¿ØÖÆ½âÎö
3665   8                                                                      
3666   8                                                              }break;
3667   7                                                                      
3668   7                                                              default:{
3669   8                                                              
3670   8                                                                      
3671   8                                                                      
3672   8                                                              }break;
3673   7                                                      }
3674   6                                              }
3675   5                                              
3676   5                                      }else
3677   4                                      if((datsRcv_ZIGB.rcvDats[0] == ZIGB_FRAME_HEAD) &&
3678   4                                         !memcmp(&datsRcv_ZIGB.rcvDats[2], cmd_nwkOpenNote, 2)){ //ÍøÂç¿ª·ÅÍ¨Öª
3679   5                                              
3680   5                                              if(datsRcv_ZIGB.rcvDats[4])tips_statusChangeToZigbNwkOpen(datsRcv_ZIGB.rcvDats[4]); //tips´¥·¢ --½öÏì
             -Ó¦¿ª´¥·¢£¬²»ÏìÓ¦¹Ø´¥·¢
3681   5                                                 
3682   5      #if(DEBUG_LOGOUT_EN == 1)
3683   5                                              { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
3684   6                                                      
3685   6                                                      memset(log_buf, 0, LOGBUFF_LEN * sizeof(u8));
3686   6                                                      sprintf(log_buf, "zigbNwk open notice get:%ds.\n", (int)datsRcv_ZIGB.rcvDats[4]);
3687   6                                                      PrintString1_logOut(log_buf);
3688   6                                              }                       
3689   5      #endif
3690   5                                      }
3691   4                              }
3692   3                              
3693   3                      }break;
3694   2                      
3695   2                      case status_nwkREQ:{
3696   3                      
3697   3                              //--------------------------------Ğ­×´Ì¬£ºÇå³ı±¾µØÍøÂçºóÖØĞÂÈëÍøÇëÇó-----------------------------------
             -------------//
3698   3                              devTips_nwkZigb = nwkZigb_nwkREQ;
3699   3                              
3700   3                              countEN_ifTipsFree = 0; //½ûÖ¹ÅÜÂíµÆ
3701   3                              
3702   3                              zigB_nwkJoinRequest(1); //·Ç×èÈûÖ÷¶¯¼ÓÈë¸½½ü¿ª·ÅÍøÂç
3703   3                              
3704   3                      }break;
3705   2                              
3706   2                      case status_nwkReconnect:{
3707   3                      
3708   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂçÖØÁ¬ÇëÇó-----------------------------------------------//
3709   3                              devTips_nwkZigb = nwkZigb_reConfig;
3710   3                              
3711   3                              countEN_ifTipsFree = 0; //½ûÖ¹ÅÜÂíµÆ
3712   3                              
3713   3                              if(zigbNwk_exist_FLG){ //ÍøÂç´æÔÚ¾ÍÖØÁ¬£¬·ñÔòÒ»Ö±¸´Î»¹ÒÆğ
3714   4                              
3715   4                                      if(devZigbNwk_startUp_delayCounter){ //ÑÓ³ÙÆô¶¯Ê±¼äÄÚ½ûÖ¹zigbÆ÷¼ş²Ù×÷
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 65  

3716   5                                      
3717   5                                              zigbPin_RESET = ZIGBMOD_RESET_LEVEL_ENABLE; //zigb¸´Î» --½ûÖ¹²Ù×÷ÆÚ
3718   5                                      
3719   5                                      }else{
3720   5                                      
3721   5                                              zigB_nwkJoinRequest(0); //·Ç×èÈûÖØÁ¬
3722   5                                      }
3723   4      
3724   4                              }else{
3725   4                              
3726   4                                      zigbPin_RESET = ZIGBMOD_RESET_LEVEL_ENABLE; //zigb¸´Î»
3727   4                                      
3728   4                                      if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
3729   5                                      
3730   5                                              zigbPin_RESET = ZIGBMOD_RESET_LEVEL_DISABLE; //zigbÆ÷¼ş»Ö¸´
3731   5                                              
3732   5                                              devStatus_switch.statusChange_IF = 0;
3733   5                                              devRunning_Status = devStatus_switch.statusChange_standBy;
3734   5                                              
3735   5                                              return;
3736   5                                      }
3737   4                              }
3738   3                              
3739   3                      }break;
3740   2                      
3741   2                      case status_dataTransRequestDatsSend:{
3742   3                              
3743   3                              //--------------------------------Ğ­×´Ì¬£ºÊı¾İÇëÇó-----------------------------------------------//
3744   3                              dataTransRequest_datsSend(); //·Ç×èÈûÔ¶¶ËÊı¾İ´«Êä
3745   3                      
3746   3                      }break;
3747   2                      
3748   2                      case status_devNwkHold:{
3749   3                      
3750   3                              //--------------------------------Ğ­×´Ì¬£ºÍøÂç¹ÒÆğ-----------------------------------------------//
3751   3                              devTips_nwkZigb = nwkZigb_hold;
3752   3                              function_devNwkHold();
3753   3                              
3754   3                      }break;
3755   2                      
3756   2                      case status_devFactoryRecoverStandBy:{
3757   3                      
3758   3                              //--------------------------------Ğ­×´Ì¬£º»Ö¸´³ö³§Ô¤ÖÃ-----------------------------------------------//
3759   3                              devTips_nwkZigb = nwkZigb_outLine;
3760   3                              if(!factoryRecover_HoldTimeCount){
3761   4                              
3762   4                                      if(factoryRecover_standBy_FLG)Factory_recover();
3763   4                              }
3764   3                              
3765   3                      }break;
3766   2                              
3767   2                      default:{
3768   3                      
3769   3                              if(devStatus_switch.statusChange_IF){ //×´Ì¬Ç¿ÖÆÇĞ»»Ê±£¬½«µ±Ç°×Ó×´Ì¬ÄÚ¾²Ì¬±äÁ¿³õÊ¼»¯ºóÔÙ½øĞĞÍâ²¿ÇĞ»»
3770   4                              
3771   4                                      devStatus_switch.statusChange_IF = 0;
3772   4                                      devRunning_Status = devStatus_switch.statusChange_standBy;
3773   4                                      
3774   4                                      break;
3775   4                              }
3776   3                      
3777   3                      }break;
C51 COMPILER V9.54   DATATRANS                                                             02/15/2019 15:28:04 PAGE 66  

3778   2              }
3779   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  10414    ----
   CONSTANT SIZE    =   4705    ----
   XDATA SIZE       =    567    1395
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11     145
   IDATA SIZE       =      2      15
   BIT SIZE         =      9      17
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
