C51 COMPILER V9.54   TIMERACT                                                              11/09/2018 14:49:55 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TIMERACT
OBJECT MODULE PLACED IN .\Output\timerAct.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Actuator\timerAct.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Usr;.\Usr_lib
                    -;.\std_Lib;.\dataTrans;.\Actuator;.\Sensor;.\hwDriver) DEBUG PRINT(.\Listings\timerAct.lst) OBJECT(.\Output\timerAct.obj
                    -)

line level    source

   1          #include "timerAct.h"
   2          
   3          #include "dataManage.h" 
   4          #include "Relay.h"
   5          #include "dataTrans.h"
   6          
   7          #include "string.h"
   8          #include "stdio.h"
   9          
  10          #include "eeprom.h"
  11          
  12          /****************±¾µØÎÄ¼þ±äÁ¿¶¨ÒåÇø*************************/
  13          stt_Time xdata  systemTime_current                              = {0};  //ÏµÍ³Ê±¼ä
  14          u8               xdata  sysTimeReales_counter                   = PERIOD_SYSTIMEREALES;
  15          u8               xdata  sysTimeZone_H                                   = 8;
  16          u8               xdata  sysTimeZone_M                                   = 0;
  17          
  18          u16              idata  sysTimeKeep_counter                             = 0;    //ÏµÍ³Ê±¼äÎ¬³Ö¼ÆÊý£¬Ò»ÃëµÝÔö£¬ÓÃÓÚÏµÍ³Ê±¼ä²éÑ¯ÖÜÆÚµ½´ïÖ®Ç°Î¬³ÖÏµÍ
             -³Ê±¼äÔË×ª
  19          
  20          u8               idata  swTim_onShoot_FLAG                              = 0;    //ÆÕÍ¨¿ª¹Ø¶¨Ê±Ò»´ÎÐÔ±êÖ¾¡ª¡ª°ËÎ»±êÊ¶°Ë¸ö¶¨Ê±Æ÷£¬±¾µØ¿ØÖÆÖ»×÷ÓÃµ½Ç°Ë
             -Ä¸ö
  21          bit              idata  ifTim_sw_running_FLAG                   = 0;    //ÆÕÍ¨¿ª¹Ø¶¨Ê±ÔËÐÐ±êÖ¾Î»
  22          
  23          bit              idata  ifNightMode_sw_running_FLAG             = 0;    //ÆÕÍ¨¿ª¹ØÒ¹¼äÄ£Ê½ÔËÐÐ±êÖ¾Î»
  24          
  25          u8               idata  ifDelay_sw_running_FLAG                 = 0;    //ÑÓÊ±¶¯×÷_ÊÇ·ñÔËÐÐ±êÖ¾Î»£¨bit 1ÑÓÊ±¿ª¹ØÔËÐÐÊ¹ÄÜ±êÖ¾£¬bit 0ÂÌÉ«
             -Ä£Ê½(¶¨Ê±¹Ø±ÕÔËÐÐÊ¹ÄÜ)±êÖ¾£©
  26          u16              idata  delayCnt_onoff                                  = 0;    //ÑÓÊ±¶¯×÷¼ÆÊ±¼ÆÊý
  27          u8               idata  delayPeriod_onoff                               = 0;    //ÑÓÊ±¶¯×÷ÖÜÆÚ
  28          u8               idata  delayUp_act                                             = 0;    //ÑÓÊ±¶¯×÷¾ßÌå¶¯×÷
  29          u16              idata  delayCnt_closeLoop                              = 0;    //ÂÌÉ«Ä£Ê½¼ÆÊ±¼ÆÊý
  30          u8               idata  delayPeriod_closeLoop                   = 0;    //ÂÌÉ«Ä£Ê½¶¯×÷ÖÜÆÚ
  31          
  32          /*-----------------------------------------------------------------------------------------------*/
  33          void timeZone_Reales(void){
  34   1      
  35   1              EEPROM_read_n(EEPROM_ADDR_timeZone_H, &sysTimeZone_H, 1);
  36   1              EEPROM_read_n(EEPROM_ADDR_timeZone_M, &sysTimeZone_M, 1);
  37   1      }
  38          
  39          void datsTiming_read_eeprom(timing_Dats timDats_tab[TIMEER_TABLENGTH]){
  40   1      
  41   1              u8 dats_Temp[TIMEER_TABLENGTH * 3] = {0};
  42   1              u8 loop = 0;
  43   1              
  44   1              EEPROM_read_n(EEPROM_ADDR_swTimeTab, dats_Temp, TIMEER_TABLENGTH * 3);
  45   1              
  46   1              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){
  47   2              
  48   2                      timDats_tab[loop].Week_Num      = (dats_Temp[loop * 3 + 0] & 0x7f) >> 0;        /*ÖÜÕ¼Î»Êý¾Ý*///µÍÆßÎ»
  49   2                      timDats_tab[loop].if_Timing = (dats_Temp[loop * 3 + 0] & 0x80) >> 7;    /*ÊÇ·ñ¿ªÆô¶¨Ê±Æ÷Êý¾Ý*///¸ßÒ»Î»
  50   2                      timDats_tab[loop].Status_Act= (dats_Temp[loop * 3 + 1] & 0xe0) >> 5;    /*¶¨Ê±ÏìÓ¦×´Ì¬Êý¾Ý*///¸ßÈýÎ»
C51 COMPILER V9.54   TIMERACT                                                              11/09/2018 14:49:55 PAGE 2   

  51   2                      timDats_tab[loop].Hour          = (dats_Temp[loop * 3 + 1] & 0x1f) >> 0;        /*¶¨Ê±Ê±¿Ì_Ð¡Ê±*///µÍÎåÎ»
  52   2                      timDats_tab[loop].Minute        = (dats_Temp[loop * 3 + 2] & 0xff) >> 0;        /*¶¨Ê±Ê±¿Ì_·Ö*///È«°ËÎ»
  53   2              }
  54   1      }
  55          
  56          void datsTimNight_read_eeprom(timing_Dats timDats_tab[2]){
  57   1      
  58   1              u8 dats_Temp[6] = {0};
  59   1              u8 loop = 0;
  60   1              
  61   1              EEPROM_read_n(EEPROM_ADDR_TimeTabNightMode, dats_Temp, 6);
  62   1              
  63   1              for(loop = 0; loop < 2; loop ++){
  64   2              
  65   2                      timDats_tab[loop].Week_Num      = (dats_Temp[loop * 3 + 0] & 0x7f) >> 0;        /*ÖÜÕ¼Î»Êý¾Ý*///µÍÆßÎ» ------------Ò
             -¹¼ä¶¨Ê±Êý¾ÝÊ±£¬ÖÜÕ¼Î»È«Îª1Ê±Ôò±íÊ¾È«Ìì
  66   2                      timDats_tab[loop].if_Timing = (dats_Temp[loop * 3 + 0] & 0x80) >> 7;    /*ÊÇ·ñ¿ªÆô¶¨Ê±Æ÷Êý¾Ý*///¸ßÒ»Î»
  67   2                      timDats_tab[loop].Status_Act= (dats_Temp[loop * 3 + 1] & 0xe0) >> 5;    /*¶¨Ê±ÏìÓ¦×´Ì¬Êý¾Ý*///¸ßÈýÎ»
  68   2                      timDats_tab[loop].Hour          = (dats_Temp[loop * 3 + 1] & 0x1f) >> 0;        /*¶¨Ê±Ê±¿Ì_Ð¡Ê±*///µÍÎåÎ»
  69   2                      timDats_tab[loop].Minute        = (dats_Temp[loop * 3 + 2] & 0xff) >> 0;        /*¶¨Ê±Ê±¿Ì_·Ö*///È«°ËÎ»
  70   2              }
  71   1      }
  72          
  73          /*ÖÜÕ¼Î»ÅÐ¶Ï*///ÅÐ¶Ïµ±Ç°ÖÜÖµÊÇ·ñÔÚÕ¼Î»×Ö½ÚÖÐ
  74          bit weekend_judge(u8 weekNum, u8 HoldNum){
  75   1      
  76   1              u8 loop;
  77   1              
  78   1              weekNum --;
  79   1              for(loop = 0; loop < 7; loop ++){
  80   2              
  81   2                      if(HoldNum & (1 << loop)){
  82   3                              
  83   3                              if(loop == weekNum)return 1;
  84   3                      }
  85   2              }
  86   1              
  87   1              return 0;
  88   1      }
  89          
  90          #if(DEBUG_LOGOUT_EN == 1)
  91          void time_Logout(stt_Time code timeDats){
  92   1      
  93   1              u8 xdata Log[80]        = {0};
  94   1              
  95   1              /*»º´æ²»×ãÊ±£¬·Ö´Î´òÓ¡*/
  96   1              
  97   1      //      sprintf(Log, 
  98   1      //      "\n>>===Ê±¼ä´Á===<<\n    20%d/%02d/%02d-W%01d\n        %02d:%02d:%02d\n", 
  99   1      //                      (int)timeDats.time_Year,
 100   1      //                      (int)timeDats.time_Month,
 101   1      //                      (int)timeDats.time_Day,
 102   1      //                      (int)timeDats.time_Week,
 103   1      //                      (int)timeDats.time_Hour,
 104   1      //                      (int)timeDats.time_Minute,
 105   1      //                      (int)timeDats.time_Second);
 106   1      //                      
 107   1      ////    LogDats(Log, strlen(Log));
 108   1      //      PrintString1_logOut(Log);
 109   1              
 110   1              sprintf(Log, 
 111   1              "\n>>===Ê±¼ä´Á===<<\n    20%02d/%02d/%02d-W%01d\n", 
C51 COMPILER V9.54   TIMERACT                                                              11/09/2018 14:49:55 PAGE 3   

 112   1                              (int)timeDats.time_Year,
 113   1                              (int)timeDats.time_Month,
 114   1                              (int)timeDats.time_Day,
 115   1                              (int)timeDats.time_Week);
 116   1                              
 117   1      //      LogDats(Log, strlen(Log));
 118   1              PrintString1_logOut(Log);
 119   1                              
 120   1              sprintf(Log, 
 121   1              "        %02d:%02d:%02d\n", 
 122   1                              (int)timeDats.time_Hour,
 123   1                              (int)timeDats.time_Minute,
 124   1                              (int)timeDats.time_Second);
 125   1                              
 126   1      //      LogDats(Log, strlen(Log));
 127   1              PrintString1_logOut(Log);
 128   1                              
 129   1              sprintf(Log, 
 130   1                              "timeZone_H:%02d.\n", 
 131   1                              (int)sysTimeZone_H);
 132   1                              
 133   1              PrintString1_logOut(Log);
 134   1      }
 135          #endif
 136          
 137          void thread_Timing(void){
 138   1      
 139   1              u8 loop = 0;
 140   1              
 141   1              timing_Dats xdata timDatsTemp_CalibrateTab[TIMEER_TABLENGTH] = {0};     /*¶¨Ê±ÆðÊ¼Ê±¿Ì±í»º´æ*///ÆðÊ¼Ê±¿Ì¼°ÊôÐ
             -Ô
 142   1              timing_Dats xdata nightDatsTemp_CalibrateTab[2] = {0};  /*Ò¹¼äÄ£Ê½ÆðÊ¼Ê±¿Ì±í»º´æ*///ÆðÊ¼Ê±¿Ì¼°ÊôÐÔ
 143   1              
 144   1              bit idata timeUp_actionDone_flg = 0; //Í¬Ò»·ÖÖÓÄÚ¶¨Ê±Æ÷ÏìÓ¦¶¯×÷Íê³É±êÖ¾<±ÜÃâÖØ¸´ÏìÓ¦>
 145   1      
 146   1      #if(DEBUG_LOGOUT_EN == 1)       
 147   1              { //µ÷ÊÔlog´úÂë-µ±Ç°Ê±¼äÊä³ö
 148   2                      
 149   2                      u16 code log_period = 5000;
 150   2                      static u16 xdata log_Count = 0;
 151   2                      
 152   2                      if(log_Count < log_period)log_Count ++;
 153   2                      else{
 154   3                      
 155   3                              log_Count = 0;
 156   3                              
 157   3                              time_Logout(systemTime_current);
 158   3                      }
 159   2              }
 160   1      #endif
 161   1      
 162   1              /*ÑÓÊ±ÒµÎñ¼°×Ô¶¯Ñ­»·ÒµÎñµôµç´æ´¢Êý¾Ý¶ÁÈ¡*///¿ª»ú¶ÁÒ»´Î¸üÐÂ¼´¿É
 163   1              {
 164   2                      
 165   2                      static bit read_FLG = 0;
 166   2                      
 167   2                      if(!read_FLG){
 168   3                      
 169   3                              read_FLG = 1;
 170   3                              
 171   3                              EEPROM_read_n(EEPROM_ADDR_swDelayFLAG, &ifDelay_sw_running_FLAG, 1);
 172   3                              EEPROM_read_n(EEPROM_ADDR_periodCloseLoop, &delayPeriod_closeLoop, 1);
C51 COMPILER V9.54   TIMERACT                                                              11/09/2018 14:49:55 PAGE 4   

 173   3                      }
 174   2              }
 175   1              
 176   1              /*ÏµÍ³Ê±¼äÎ¬³Ö¸üÐÂ*///zigb²éÑ¯sysTimeÖÜÆÚÖ®Íâ ±¾µØ×ÔÐÐÃ¿Ãë¸üÐÂ
 177   1              {
 178   2                      
 179   2                      systemTime_current.time_Minute = sysTimeKeep_counter / 60;
 180   2                      systemTime_current.time_Second = sysTimeKeep_counter % 60;
 181   2                      
 182   2                      if(sysTimeKeep_counter < 3600){
 183   3                              
 184   3                      }else{
 185   3                      
 186   3                              sysTimeKeep_counter = 0;
 187   3                              (systemTime_current.time_Hour >= 24)?(systemTime_current.time_Hour = 0):(systemTime_current.time_Hour +
             -+);
 188   3                              (systemTime_current.time_Week >   7)?(systemTime_current.time_Week = 1):(systemTime_current.time_Week +
             -+);
 189   3                      }
 190   2              }
 191   1              
 192   1              /*Ò¹¼äÄ£Ê½¶¨Ê±*///Á½¶ÎÊý¾Ý===============================================================================
             -========================<<<
 193   1              datsTimNight_read_eeprom(nightDatsTemp_CalibrateTab);
 194   1              /*ÅÐ¶ÏÊÇ·ñÎªÒ¹¼äÄ£Ê½*/
 195   1              if((nightDatsTemp_CalibrateTab[0].Week_Num & 0x7F) == 0x7F){ //È«ÌìÅÐ¶Ï£¬Èç¹ûµÚÒ»¶ÎÖÜÕ¼Î»È«ÂúÔòÎªÈ«Ìì
 196   2              
 197   2                      ifNightMode_sw_running_FLAG = 1;
 198   2                      
 199   2              }else{
 200   2                      
 201   2                      if(nightDatsTemp_CalibrateTab[0].if_Timing){ //Ê¹ÄÜÅÐ¶Ï
 202   3                      
 203   3                              if(((u16)systemTime_current.time_Hour * 60 + (u16)systemTime_current.time_Minute) >  ((u16)nightDatsTem
             -p_CalibrateTab[0].Hour * 60 + (u16)nightDatsTemp_CalibrateTab[0].Minute) && //¶¨Ê±Çø¼äÅÐ¶Ï
 204   3                                 ((u16)systemTime_current.time_Hour * 60 + (u16)systemTime_current.time_Minute) <= ((u16)nightDatsTem
             -p_CalibrateTab[1].Hour * 60 + (u16)nightDatsTemp_CalibrateTab[1].Minute)){
 205   4                                 
 206   4                                      ifNightMode_sw_running_FLAG = 1;
 207   4                                         
 208   4                              }else{
 209   4                              
 210   4                                      ifNightMode_sw_running_FLAG = 0;
 211   4                              }
 212   3                              
 213   3                      }else{
 214   3                      
 215   3                              ifNightMode_sw_running_FLAG = 0;
 216   3                      }
 217   2              }
 218   1              
 219   1              /*ÆÕÍ¨¿ª¹Ø¶¨Ê±*///ËÄ¶ÎÊý¾Ý===============================================================================
             -========================<<<
 220   1              datsTiming_read_eeprom(timDatsTemp_CalibrateTab);       /*ÆÕÍ¨¿ª¹Ø*///Ê±¿Ì±í¶ÁÈ¡
 221   1              
 222   1              for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){
 223   2              
 224   2                      if(timDatsTemp_CalibrateTab[loop].if_Timing){ //ÅÐ¶ÏÊÇ·ñÓÐ¶¨Ê±¶Î¿ªÆô
 225   3                      
 226   3                              ifTim_sw_running_FLAG = 1; //Ö»ÒªÓÐÒ»¸ö¶¨Ê±¶Î¿ªÆôÔò¶¨Ê±ÔËÐÐ±êÖ¾ÖÃÎ»
 227   3                              break;
 228   3                              
C51 COMPILER V9.54   TIMERACT                                                              11/09/2018 14:49:55 PAGE 5   

 229   3                      }else{
 230   3                      
 231   3                              ifTim_sw_running_FLAG = 0;
 232   3                      }
 233   2              }
 234   1              
 235   1              /*ÅÐ¶ÏÊÇ·ñËùÓÐÆÕÍ¨¿ª¹Ø¶¨Ê±¶¼Îª¹Ø*/
 236   1              if(ifTim_sw_running_FLAG){      //·ÇÈ«¹Ø£¬ÖÃ±êÖ¾Î»£¬²¢Ö´ÐÐ¶¨Ê±Âß¼­
 237   2              
 238   2                      for(loop = 0; loop < TIMEER_TABLENGTH; loop ++){
 239   3                              
 240   3                              if(weekend_judge(systemTime_current.time_Week, timDatsTemp_CalibrateTab[loop].Week_Num)){       //ÖÜÕ¼Î»±È¶Ô£
             -¬³É¹¦²Å½øÐÐÏÂÒ»²½
 241   4                              
 242   4                                      if(timCount_ENABLE == timDatsTemp_CalibrateTab[loop].if_Timing){        //ÊÇ·ñ¿ªÆô¶¨Ê±
 243   5      //#if(DEBUG_LOGOUT_EN == 1)                                     
 244   5      //                                      { //µ÷ÊÔlog´úÂë-µ±Ç°ÓÐÐ§¶¨Ê±ÐÅÏ¢Êä³ö
 245   5      //                                              
 246   5      //                                              u8 xdata log_buf[80] = {0};
 247   5      //                                              u16 code log_period = 3000;
 248   5      //                                              static u16 log_Count = 0;
 249   5      //                                              
 250   5      //                                              if(log_Count < log_period)log_Count ++;
 251   5      //                                              else{
 252   5      //                                              
 253   5      //                                                      log_Count = 0;
 254   5      //                                                      
 255   5      //                                                      sprintf(log_buf, 
 256   5      //                                                                      "timer_%d is running, up time: %02dhour-%02dminute.\n", 
 257   5      //                                                                      (int)loop, 
 258   5      //                                                                      (int)timDatsTemp_CalibrateTab[loop].Hour, 
 259   5      //                                                                      (int)timDatsTemp_CalibrateTab[loop].Minute);
 260   5      //                                                      /*logµ÷ÊÔ´òÓ¡*///ÆÕÍ¨¶¨Ê±¶¨Ê±ÐÅÏ¢
 261   5      //                                                      PrintString1_logOut(log_buf);
 262   5      //                                              }
 263   5      //                                      }
 264   5      //#endif
 265   5                                              if(((u16)systemTime_current.time_Hour * 60 + (u16)systemTime_current.time_Minute) ==  \
 266   5                                                 ((u16)timDatsTemp_CalibrateTab[loop].Hour * 60 + (u16)timDatsTemp_CalibrateTab[loop].Minute) && //
             -Ê±¿Ì±È¶Ô,²»¶ÔÔò¶¯×÷Íê³É±êÖ¾¸´Î»
 267   5                                                 (timeUp_actionDone_flg)){
 268   6                                                 
 269   6                                                      timeUp_actionDone_flg = 0;
 270   6                                              }                               
 271   5                                              
 272   5                                              if(((u16)systemTime_current.time_Hour * 60 + (u16)systemTime_current.time_Minute) ==  \
 273   5                                                 ((u16)timDatsTemp_CalibrateTab[loop].Hour * 60 + (u16)timDatsTemp_CalibrateTab[loop].Minute) && //
             -Ê±¿Ì±È¶Ô,Õû·ÖÖÓ¶¼ÊÇÏìÓ¦ÆÚ
 274   5                                                 (!timeUp_actionDone_flg)){    //Ê±¿Ì±È¶ÔÊ±¼ä
 275   6      #if(DEBUG_LOGOUT_EN == 1)                                                          
 276   6                                                      { //Êä³ö´òÓ¡£¬½÷¼Ç ÓÃºó×¢ÊÍ£¬·ñÔòÕ¼ÓÃ´óÁ¿´úÂë¿Õ¼ä
 277   7                                                              u8 xdata log_buf[64];
 278   7                                                              
 279   7                                                              sprintf(log_buf, ">>>>>>>>timer-%02d_UP!!!.\n", (int)loop);
 280   7                                                              PrintString1_logOut(log_buf);
 281   7                                                      }       
 282   6      #endif                                             
 283   6                                                      timeUp_actionDone_flg = 1; //¶¯×÷Íê³É±êÖ¾ÖÃÎ»
 284   6                                                      
 285   6                                                      //Ò»´ÎÐÔ¶¨Ê±ÅÐ¶Ï
 286   6                                                      if(swTim_onShoot_FLAG & (1 << loop)){   //ÊÇ·ñÎªÒ»´ÎÐÔ¶¨Ê±£¬ÊÇÔòÇå¿Õ±¾¶Î¶¨Ê±ÐÅÏ¢
 287   7                                                              
C51 COMPILER V9.54   TIMERACT                                                              11/09/2018 14:49:55 PAGE 6   

 288   7                                                              u8 code dats_Temp = 0;
 289   7                                                              
 290   7                                                              swTim_onShoot_FLAG &= ~(1 << loop);
 291   7                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab + loop * 3, &dats_Temp, 1); //¶¨Ê±ÐÅÏ¢Çå¿Õ
 292   7                                                      }
 293   6                                                 
 294   6                                                      //ÆÕÍ¨¿ª¹Ø¶¯×÷ÏìÓ¦
 295   6                                                      swCommand_fromUsr.actMethod = relay_OnOff; //¿ª¹Ø¶¯×÷
 296   6                                                      swCommand_fromUsr.objRelay = timDatsTemp_CalibrateTab[loop].Status_Act;
 297   6                                                      devActionPush_IF.push_IF = 1; //ÍÆËÍÊ¹ÄÜ
 298   6                                                      dev_agingCmd_sndInitative.agingCmd_timerSetOpreat = 1; //¶ÔÓ¦Ö÷¶¯ÉÏ´«Ê±Ð§Õ¼Î»ÖÃÒ»
 299   6                                                      
 300   6                                              }else
 301   5                                              if(((u16)systemTime_current.time_Hour * 60 + (u16)systemTime_current.time_Minute) >     //µ±Ç°Ê±¼ä´óÓÚ¶¨Ê
             -±Ê±¼ä£¬Ö±½ÓÇå³ýÒ»´ÎÐÔ±êÖ¾
 302   5                                                 ((u16)timDatsTemp_CalibrateTab[loop].Hour * 60 + (u16)timDatsTemp_CalibrateTab[loop].Minute)){
 303   6                                                         
 304   6                                                      //Ò»´ÎÐÔ¶¨Ê±ÅÐ¶Ï
 305   6                                                      if(swTim_onShoot_FLAG & (1 << loop)){   //ÊÇ·ñÎªÒ»´ÎÐÔ¶¨Ê±£¬ÊÇÔòÇå¿Õ±¾¶Î¶¨Ê±ÐÅÏ¢
 306   7                                                              
 307   7                                                              u8 code dats_Temp = 0;
 308   7                                                              
 309   7                                                              swTim_onShoot_FLAG &= ~(1 << loop);
 310   7                                                              coverEEPROM_write_n(EEPROM_ADDR_swTimeTab + loop * 3, &dats_Temp, 1); //¶¨Ê±ÐÅÏ¢Çå¿Õ
 311   7                                                      }
 312   6                                              }
 313   5                                      }
 314   4                              }
 315   3                      }
 316   2              }
 317   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1684    ----
   CONSTANT SIZE    =    259    ----
   XDATA SIZE       =     12     174
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      46
   IDATA SIZE       =     11    ----
   BIT SIZE         =      4    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
